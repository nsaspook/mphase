

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Jul 24 15:45:18 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F45K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=2
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1,inline
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1,inline
   109                           	psect	text90,global,reloc=2,class=CODE,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,delta=1
   112                           	psect	text93,global,reloc=2,class=CODE,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,delta=1
   114                           	psect	text95,global,reloc=2,class=CODE,delta=1
   115                           	psect	text96,global,reloc=2,class=CODE,delta=1
   116                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   117                           	psect	text98,global,reloc=2,class=CODE,delta=1
   118                           	psect	text99,global,reloc=2,class=CODE,delta=1
   119                           	psect	text100,global,reloc=2,class=CODE,delta=1
   120                           	psect	text101,global,reloc=2,class=CODE,delta=1
   121                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   122                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   123                           	psect	text103,global,reloc=2,class=CODE,delta=1
   124                           	psect	text104,global,reloc=2,class=CODE,delta=1
   125                           	psect	text105,global,reloc=2,class=CODE,delta=1
   126                           	psect	text106,global,reloc=2,class=CODE,delta=1
   127                           	psect	text107,global,reloc=2,class=CODE,delta=1
   128                           	psect	text108,global,reloc=2,class=CODE,delta=1
   129                           	psect	text109,global,reloc=2,class=CODE,delta=1
   130                           	psect	text110,global,reloc=2,class=CODE,delta=1
   131                           	psect	text111,global,reloc=2,class=CODE,delta=1
   132                           	psect	text112,global,reloc=2,class=CODE,delta=1
   133                           	psect	text113,global,reloc=2,class=CODE,delta=1
   134                           	psect	text114,global,reloc=2,class=CODE,delta=1
   135                           	psect	text115,global,reloc=2,class=CODE,delta=1
   136                           	psect	text116,global,reloc=2,class=CODE,delta=1
   137                           	psect	text117,global,reloc=2,class=CODE,delta=1
   138                           	psect	text118,global,reloc=2,class=CODE,delta=1
   139                           	psect	text119,global,reloc=2,class=CODE,delta=1
   140                           	psect	text120,global,reloc=2,class=CODE,delta=1
   141                           	psect	text121,global,reloc=2,class=CODE,delta=1
   142                           	psect	text122,global,reloc=2,class=CODE,delta=1
   143                           	psect	text123,global,reloc=2,class=CODE,delta=1
   144                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   145                           	psect	text124,global,reloc=2,class=CODE,delta=1
   146                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   147                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   148  0000                     
   149                           ; Version 2.05
   150                           ; Generated 20/12/2018 GMT
   151                           ; 
   152                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   153                           ; All rights reserved.
   154                           ; 
   155                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   156                           ; 
   157                           ; Redistribution and use in source and binary forms, with or without modification, are
   158                           ; permitted provided that the following conditions are met:
   159                           ; 
   160                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   161                           ;        conditions and the following disclaimer.
   162                           ; 
   163                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   164                           ;        of conditions and the following disclaimer in the documentation and/or other
   165                           ;        materials provided with the distribution.
   166                           ; 
   167                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   168                           ;        software without specific prior written permission.
   169                           ; 
   170                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   171                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   172                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   173                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   174                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   175                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   176                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   177                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   178                           ; 
   179                           ; 
   180                           ; Code-generator required, PIC18F45K80 Definitions
   181                           ; 
   182                           ; SFR Addresses
   183  0000                     
   184                           	psect	idataBANK1
   185  005206                     __pidataBANK1:
   186                           	opt callstack 0
   187                           
   188                           ;initializer for stoa@F1152
   189  005206  28                 	db	40
   190  005207  6E                 	db	110
   191  005208  75                 	db	117
   192  005209  6C                 	db	108
   193  00520A  6C                 	db	108
   194  00520B  29                 	db	41
   195  00520C  00                 	db	0
   196                           
   197                           ;initializer for get_pfb@F13321
   198  00520D  20                 	db	32
   199  00520E  00                 	db	0
   200                           
   201                           ;initializer for _rs_text
   202  00520F  A4                 	db	low _RsData
   203  005210  7D                 	db	high _RsData
   204                           
   205                           ;initializer for _cr_text
   206  005211  10                 	db	low _CrData
   207  005212  7D                 	db	high _CrData
   208                           
   209                           ;initializer for _appData
   210  005213  00                 	db	0
   211  005214  00                 	db	0
   212  005215  00                 	db	0
   213  005216  00                 	db	0
   214  005217  00                 	db	0
   215  005218  00                 	db	0
   216  005219  00                 	db	0
   217  00521A  00                 	db	0
   218  00521B  00                 	db	0
   219  00521C  00                 	db	0
   220  00521D  00                 	db	0
   221  00521E  00                 	db	0
   222  00521F  00                 	db	0
   223  005220  00                 	db	0
   224  005221  00                 	db	0
   225  005222  00                 	db	0
   226  005223  00                 	db	0
   227  005224  00                 	db	0
   228  005225  00                 	db	0
   229  005226  00                 	db	0
   230  005227  00                 	db	0
   231  005228  00                 	db	0
   232  005229  00                 	db	0
   233  00522A  00                 	db	0
   234  00522B  00                 	db	0
   235  00522C  00                 	db	0
   236  00522D  00                 	db	0
   237  00522E  00                 	db	0
   238  00522F  00                 	db	0
   239  005230  00                 	db	0
   240  005231  00                 	db	0
   241  005232  00                 	db	0
   242  005233  00                 	db	0
   243  005234  00                 	db	0
   244  005235  00                 	db	0
   245  005236  00                 	db	0
   246  005237  00                 	db	0
   247  005238  00                 	db	0
   248  005239  00                 	db	0
   249  00523A  00                 	db	0
   250  00523B  00                 	db	0
   251  00523C  00                 	db	0
   252  00523D  00                 	db	0
   253  00523E  00                 	db	0
   254  00523F  00                 	db	0
   255  005240  00                 	db	0
   256  005241  00                 	db	0
   257  005242  00                 	db	0
   258  005243  00                 	db	0
   259  005244  00                 	db	0
   260  005245  00                 	db	0
   261  005246  00                 	db	0
   262  005247  00                 	db	0
   263  005248  00                 	db	0
   264  005249  00                 	db	0
   265  00524A  00                 	db	0
   266  00524B  00                 	db	0
   267  00524C  00                 	db	0
   268  00524D  00                 	db	0
   269  00524E  00                 	db	0
   270  00524F  00                 	db	0
   271  005250  00                 	db	0
   272  005251  00                 	db	0
   273  005252  00                 	db	0
   274  005253  00                 	db	0
   275  005254  00                 	db	0
   276  005255  00                 	db	0
   277  005256  01                 	db	1
   278  005257  00                 	db	0
   279  005258  00                 	db	0
   280  005259  00                 	db	0
   281  00525A  00                 	db	0
   282  00525B  00                 	db	0
   283  00525C  00                 	db	0
   284  00525D  00                 	db	0
   285  00525E  00                 	db	0
   286                           
   287                           	psect	mediumconst
   288  007CF6                     __pmediumconst:
   289                           	opt callstack 0
   290  007CF6  00                 	db	0
   291  007CF7                     _build_date:
   292                           	opt callstack 0
   293  007CF7  4A                 	db	74
   294  007CF8  75                 	db	117
   295  007CF9  6C                 	db	108
   296  007CFA  20                 	db	32
   297  007CFB  32                 	db	50
   298  007CFC  34                 	db	52
   299  007CFD  20                 	db	32
   300  007CFE  32                 	db	50
   301  007CFF  30                 	db	48
   302  007D00  31                 	db	49
   303  007D01  39                 	db	57
   304  007D02  00                 	db	0
   305  007D03                     __end_of_build_date:
   306                           	opt callstack 0
   307  007D03                     _build_time:
   308                           	opt callstack 0
   309  007D03  30                 	db	48
   310  007D04  38                 	db	56
   311  007D05  3A                 	db	58
   312  007D06  34                 	db	52
   313  007D07  35                 	db	53
   314  007D08  3A                 	db	58
   315  007D09  30                 	db	48
   316  007D0A  39                 	db	57
   317  007D0B  00                 	db	0
   318  007D0C                     __end_of_build_time:
   319                           	opt callstack 0
   320  007D0C  0000               	dw	0
   321  007D0E  4B00               	dw	19200
   322  007D10                     __end_of_toint:
   323                           	opt callstack 0
   324  007D10                     _CrData:
   325                           	opt callstack 0
   326  007D10  B8                 	db	low STR_9
   327  007D11  7E                 	db	high STR_9
   328  007D12  52                 	db	low STR_10
   329  007D13  7E                 	db	high STR_10
   330  007D14  28                 	db	low STR_11
   331  007D15  7E                 	db	high STR_11
   332  007D16  D4                 	db	low STR_12
   333  007D17  7D                 	db	high STR_12
   334  007D18  28                 	db	low STR_13
   335  007D19  7F                 	db	high STR_13
   336  007D1A  28                 	db	low STR_13
   337  007D1B  7F                 	db	high STR_13
   338  007D1C  87                 	db	low STR_15
   339  007D1D  7F                 	db	high STR_15
   340  007D1E  4E                 	db	low STR_16
   341  007D1F  7F                 	db	high STR_16
   342  007D20  45                 	db	low STR_17
   343  007D21  7F                 	db	high STR_17
   344  007D22  FC                 	db	low STR_18
   345  007D23  7F                 	db	high STR_18
   346  007D24  7C                 	db	low STR_19
   347  007D25  7E                 	db	high STR_19
   348  007D26  FE                 	db	low STR_20
   349  007D27  7D                 	db	high STR_20
   350  007D28  67                 	db	low STR_21
   351  007D29  7E                 	db	high STR_21
   352  007D2A  13                 	db	low STR_22
   353  007D2B  7E                 	db	high STR_22
   354  007D2C  E9                 	db	low STR_23
   355  007D2D  7D                 	db	high STR_23
   356  007D2E  91                 	db	low STR_24
   357  007D2F  7E                 	db	high STR_24
   358  007D30  31                 	db	low (STR_13+9)
   359  007D31  7F                 	db	high (STR_13+9)
   360  007D32  D6                 	db	low STR_26
   361  007D33  7E                 	db	high STR_26
   362  007D34  B0                 	db	low STR_27
   363  007D35  7F                 	db	high STR_27
   364  007D36  71                 	db	low STR_28
   365  007D37  7F                 	db	high STR_28
   366  007D38  07                 	db	low STR_29
   367  007D39  7F                 	db	high STR_29
   368  007D3A  EF                 	db	low STR_30
   369  007D3B  7E                 	db	high STR_30
   370  007D3C  12                 	db	low STR_31
   371  007D3D  7F                 	db	high STR_31
   372  007D3E  B6                 	db	low STR_32
   373  007D3F  7F                 	db	high STR_32
   374  007D40  79                 	db	low STR_33
   375  007D41  7F                 	db	high STR_33
   376  007D42  AA                 	db	low STR_34
   377  007D43  7F                 	db	high STR_34
   378  007D44  69                 	db	low STR_35
   379  007D45  7F                 	db	high STR_35
   380  007D46  E3                 	db	low STR_36
   381  007D47  7E                 	db	high STR_36
   382  007D48  80                 	db	low STR_37
   383  007D49  7F                 	db	high STR_37
   384  007D4A  A6                 	db	low STR_38
   385  007D4B  7E                 	db	high STR_38
   386  007D4C  3D                 	db	low STR_39
   387  007D4D  7E                 	db	high STR_39
   388  007D4E  8E                 	db	low STR_40
   389  007D4F  7F                 	db	high STR_40
   390  007D50  95                 	db	low STR_41
   391  007D51  7F                 	db	high STR_41
   392  007D52  9C                 	db	low STR_42
   393  007D53  7F                 	db	high STR_42
   394  007D54  A3                 	db	low STR_43
   395  007D55  7F                 	db	high STR_43
   396  007D56  1D                 	db	low STR_44
   397  007D57  7F                 	db	high STR_44
   398  007D58  57                 	db	low STR_45
   399  007D59  7F                 	db	high STR_45
   400  007D5A  E7                 	db	low (STR_12+19)
   401  007D5B  7D                 	db	high (STR_12+19)
   402  007D5C  00                 	db	0
   403  007D5D  00                 	db	0
   404  007D5E  00                 	db	0
   405  007D5F  00                 	db	0
   406  007D60  00                 	db	0
   407  007D61  00                 	db	0
   408  007D62  00                 	db	0
   409  007D63  00                 	db	0
   410  007D64  00                 	db	0
   411  007D65  00                 	db	0
   412  007D66  00                 	db	0
   413  007D67  00                 	db	0
   414  007D68  00                 	db	0
   415  007D69  00                 	db	0
   416  007D6A  00                 	db	0
   417  007D6B  00                 	db	0
   418  007D6C  00                 	db	0
   419  007D6D  00                 	db	0
   420  007D6E  00                 	db	0
   421  007D6F  00                 	db	0
   422  007D70  00                 	db	0
   423  007D71  00                 	db	0
   424  007D72  00                 	db	0
   425  007D73  00                 	db	0
   426  007D74  00                 	db	0
   427  007D75  00                 	db	0
   428  007D76  00                 	db	0
   429  007D77  00                 	db	0
   430  007D78  00                 	db	0
   431  007D79  00                 	db	0
   432  007D7A  00                 	db	0
   433  007D7B  00                 	db	0
   434  007D7C  00                 	db	0
   435  007D7D  00                 	db	0
   436  007D7E  00                 	db	0
   437  007D7F  00                 	db	0
   438  007D80  00                 	db	0
   439  007D81  00                 	db	0
   440  007D82  00                 	db	0
   441  007D83  00                 	db	0
   442  007D84  00                 	db	0
   443  007D85  00                 	db	0
   444  007D86  00                 	db	0
   445  007D87  00                 	db	0
   446  007D88  00                 	db	0
   447  007D89  00                 	db	0
   448  007D8A  00                 	db	0
   449  007D8B  00                 	db	0
   450  007D8C  00                 	db	0
   451  007D8D  00                 	db	0
   452  007D8E  00                 	db	0
   453  007D8F  00                 	db	0
   454  007D90  00                 	db	0
   455  007D91  00                 	db	0
   456  007D92  00                 	db	0
   457  007D93  00                 	db	0
   458  007D94  00                 	db	0
   459  007D95  00                 	db	0
   460  007D96  00                 	db	0
   461  007D97  00                 	db	0
   462  007D98  00                 	db	0
   463  007D99  00                 	db	0
   464  007D9A  00                 	db	0
   465  007D9B  00                 	db	0
   466  007D9C  00                 	db	0
   467  007D9D  00                 	db	0
   468  007D9E  00                 	db	0
   469  007D9F  00                 	db	0
   470  007DA0  00                 	db	0
   471  007DA1  00                 	db	0
   472  007DA2  00                 	db	0
   473  007DA3  00                 	db	0
   474  007DA4                     __end_of_CrData:
   475                           	opt callstack 0
   476  007DA4                     _RsData:
   477                           	opt callstack 0
   478  007DA4  BC                 	db	low STR_47
   479  007DA5  7D                 	db	high STR_47
   480  007DA6  C7                 	db	low STR_48
   481  007DA7  7E                 	db	high STR_48
   482  007DA8  92                 	db	low (STR_40+4)
   483  007DA9  7F                 	db	high (STR_40+4)
   484  007DAA  E7                 	db	low (STR_12+19)
   485  007DAB  7D                 	db	high (STR_12+19)
   486  007DAC  00                 	db	0
   487  007DAD  00                 	db	0
   488  007DAE  00                 	db	0
   489  007DAF  00                 	db	0
   490  007DB0                     __end_of_RsData:
   491                           	opt callstack 0
   492  007DB0                     _d_cur_off:
   493                           	opt callstack 0
   494  007DB0  1B                 	db	27
   495  007DB1  43                 	db	67
   496  007DB2  30                 	db	48
   497  007DB3  00                 	db	0
   498  007DB4                     __end_of_d_cur_off:
   499                           	opt callstack 0
   500  007DB4                     _d_version:
   501                           	opt callstack 0
   502  007DB4  1B                 	db	27
   503  007DB5  56                 	db	86
   504  007DB6  00                 	db	0
   505  007DB7                     __end_of_d_version:
   506                           	opt callstack 0
   507  007DB7                     _d_reset:
   508                           	opt callstack 0
   509  007DB7  1B                 	db	27
   510  007DB8  52                 	db	82
   511  007DB9  00                 	db	0
   512  007DBA                     __end_of_d_reset:
   513                           	opt callstack 0
   514  007DBA                     _d_ff:
   515                           	opt callstack 0
   516  007DBA  0C                 	db	12
   517  007DBB  00                 	db	0
   518  007DBC                     __end_of_d_ff:
   519                           	opt callstack 0
   520  007DBC                     STR_47:
   521  007DBC  20                 	db	32
   522  007DBD  4D                 	db	77	;'M'
   523  007DBE  50                 	db	80	;'P'
   524  007DBF  48                 	db	72	;'H'
   525  007DC0  41                 	db	65	;'A'
   526  007DC1  53                 	db	83	;'S'
   527  007DC2  45                 	db	69	;'E'
   528  007DC3  20                 	db	32
   529  007DC4  53                 	db	83	;'S'
   530  007DC5  41                 	db	65	;'A'
   531  007DC6  56                 	db	86	;'V'
   532  007DC7  45                 	db	69	;'E'
   533  007DC8  44                 	db	68	;'D'
   534  007DC9  20                 	db	32
   535  007DCA  25                 	db	37
   536  007DCB  64                 	db	100	;'d'
   537  007DCC  20                 	db	32
   538  007DCD  20                 	db	32
   539  007DCE  20                 	db	32
   540  007DCF  20                 	db	32
   541  007DD0  20                 	db	32
   542  007DD1  0D                 	db	13
   543  007DD2  0A                 	db	10
   544  007DD3  00                 	db	0
   545  007DD4                     STR_12:
   546  007DD4  20                 	db	32
   547  007DD5  20                 	db	32
   548  007DD6  20                 	db	32
   549  007DD7  20                 	db	32
   550  007DD8  20                 	db	32
   551  007DD9  20                 	db	32
   552  007DDA  20                 	db	32
   553  007DDB  20                 	db	32
   554  007DDC  20                 	db	32
   555  007DDD  20                 	db	32
   556  007DDE  20                 	db	32
   557  007DDF  20                 	db	32
   558  007DE0  20                 	db	32
   559  007DE1  20                 	db	32
   560  007DE2  20                 	db	32
   561  007DE3  20                 	db	32
   562  007DE4  20                 	db	32
   563  007DE5  20                 	db	32
   564  007DE6  20                 	db	32
   565  007DE7  20                 	db	32
   566  007DE8  00                 	db	0
   567  007DE9                     STR_23:
   568  007DE9  4D                 	db	77	;'M'
   569  007DEA  49                 	db	73	;'I'
   570  007DEB  44                 	db	68	;'D'
   571  007DEC  20                 	db	32
   572  007DED  4C                 	db	76	;'L'
   573  007DEE  45                 	db	69	;'E'
   574  007DEF  56                 	db	86	;'V'
   575  007DF0  45                 	db	69	;'E'
   576  007DF1  4C                 	db	76	;'L'
   577  007DF2  20                 	db	32
   578  007DF3  53                 	db	83	;'S'
   579  007DF4  43                 	db	67	;'C'
   580  007DF5  52                 	db	82	;'R'
   581  007DF6  45                 	db	69	;'E'
   582  007DF7  45                 	db	69	;'E'
   583  007DF8  4E                 	db	78	;'N'
   584  007DF9  20                 	db	32
   585  007DFA  20                 	db	32
   586  007DFB  20                 	db	32
   587  007DFC  20                 	db	32
   588  007DFD  00                 	db	0
   589  007DFE                     STR_20:
   590  007DFE  50                 	db	80	;'P'
   591  007DFF  72                 	db	114	;'r'
   592  007E00  65                 	db	101	;'e'
   593  007E01  73                 	db	115	;'s'
   594  007E02  73                 	db	115	;'s'
   595  007E03  20                 	db	32
   596  007E04  46                 	db	70	;'F'
   597  007E05  4C                 	db	76	;'L'
   598  007E06  49                 	db	73	;'I'
   599  007E07  50                 	db	80	;'P'
   600  007E08  20                 	db	32
   601  007E09  55                 	db	85	;'U'
   602  007E0A  50                 	db	80	;'P'
   603  007E0B  20                 	db	32
   604  007E0C  6F                 	db	111	;'o'
   605  007E0D  6E                 	db	110	;'n'
   606  007E0E  20                 	db	32
   607  007E0F  20                 	db	32
   608  007E10  20                 	db	32
   609  007E11  20                 	db	32
   610  007E12  00                 	db	0
   611  007E13                     STR_22:
   612  007E13  53                 	db	83	;'S'
   613  007E14  70                 	db	112	;'p'
   614  007E15  69                 	db	105	;'i'
   615  007E16  6E                 	db	110	;'n'
   616  007E17  20                 	db	32
   617  007E18  4D                 	db	77	;'M'
   618  007E19  6F                 	db	111	;'o'
   619  007E1A  74                 	db	116	;'t'
   620  007E1B  6F                 	db	111	;'o'
   621  007E1C  72                 	db	114	;'r'
   622  007E1D  20                 	db	32
   623  007E1E  53                 	db	83	;'S'
   624  007E1F  43                 	db	67	;'C'
   625  007E20  52                 	db	82	;'R'
   626  007E21  45                 	db	69	;'E'
   627  007E22  45                 	db	69	;'E'
   628  007E23  4E                 	db	78	;'N'
   629  007E24  20                 	db	32
   630  007E25  20                 	db	32
   631  007E26  20                 	db	32
   632  007E27  00                 	db	0
   633  007E28                     STR_11:
   634  007E28  57                 	db	87	;'W'
   635  007E29  68                 	db	104	;'h'
   636  007E2A  65                 	db	101	;'e'
   637  007E2B  6E                 	db	110	;'n'
   638  007E2C  20                 	db	32
   639  007E2D  64                 	db	100	;'d'
   640  007E2E  6F                 	db	111	;'o'
   641  007E2F  6E                 	db	110	;'n'
   642  007E30  65                 	db	101	;'e'
   643  007E31  20                 	db	32
   644  007E32  70                 	db	112	;'p'
   645  007E33  72                 	db	114	;'r'
   646  007E34  65                 	db	101	;'e'
   647  007E35  73                 	db	115	;'s'
   648  007E36  73                 	db	115	;'s'
   649  007E37  20                 	db	32
   650  007E38  4F                 	db	79	;'O'
   651  007E39  4B                 	db	75	;'K'
   652  007E3A  20                 	db	32
   653  007E3B  20                 	db	32
   654  007E3C  00                 	db	0
   655  007E3D                     STR_39:
   656  007E3D  52                 	db	82	;'R'
   657  007E3E  65                 	db	101	;'e'
   658  007E3F  73                 	db	115	;'s'
   659  007E40  6F                 	db	111	;'o'
   660  007E41  6C                 	db	108	;'l'
   661  007E42  76                 	db	118	;'v'
   662  007E43  65                 	db	101	;'e'
   663  007E44  72                 	db	114	;'r'
   664  007E45  20                 	db	32
   665  007E46  76                 	db	118	;'v'
   666  007E47  61                 	db	97	;'a'
   667  007E48  6C                 	db	108	;'l'
   668  007E49  75                 	db	117	;'u'
   669  007E4A  65                 	db	101	;'e'
   670  007E4B  20                 	db	32
   671  007E4C  53                 	db	83	;'S'
   672  007E4D  45                 	db	69	;'E'
   673  007E4E  54                 	db	84	;'T'
   674  007E4F  20                 	db	32
   675  007E50  20                 	db	32
   676  007E51  00                 	db	0
   677  007E52                     STR_10:
   678  007E52  42                 	db	66	;'B'
   679  007E53  6F                 	db	111	;'o'
   680  007E54  6F                 	db	111	;'o'
   681  007E55  74                 	db	116	;'t'
   682  007E56  20                 	db	32
   683  007E57  42                 	db	66	;'B'
   684  007E58  75                 	db	117	;'u'
   685  007E59  74                 	db	116	;'t'
   686  007E5A  74                 	db	116	;'t'
   687  007E5B  6F                 	db	111	;'o'
   688  007E5C  6E                 	db	110	;'n'
   689  007E5D  20                 	db	32
   690  007E5E  50                 	db	80	;'P'
   691  007E5F  72                 	db	114	;'r'
   692  007E60  65                 	db	101	;'e'
   693  007E61  73                 	db	115	;'s'
   694  007E62  73                 	db	115	;'s'
   695  007E63  65                 	db	101	;'e'
   696  007E64  64                 	db	100	;'d'
   697  007E65  20                 	db	32
   698  007E66  00                 	db	0
   699  007E67                     STR_21:
   700  007E67  50                 	db	80	;'P'
   701  007E68  6F                 	db	111	;'o'
   702  007E69  77                 	db	119	;'w'
   703  007E6A  65                 	db	101	;'e'
   704  007E6B  72                 	db	114	;'r'
   705  007E6C  20                 	db	32
   706  007E6D  43                 	db	67	;'C'
   707  007E6E  79                 	db	121	;'y'
   708  007E6F  63                 	db	99	;'c'
   709  007E70  6C                 	db	108	;'l'
   710  007E71  65                 	db	101	;'e'
   711  007E72  20                 	db	32
   712  007E73  53                 	db	83	;'S'
   713  007E74  70                 	db	112	;'p'
   714  007E75  69                 	db	105	;'i'
   715  007E76  6E                 	db	110	;'n'
   716  007E77  20                 	db	32
   717  007E78  41                 	db	65	;'A'
   718  007E79  4D                 	db	77	;'M'
   719  007E7A  50                 	db	80	;'P'
   720  007E7B  00                 	db	0
   721  007E7C                     STR_19:
   722  007E7C  50                 	db	80	;'P'
   723  007E7D  72                 	db	114	;'r'
   724  007E7E  65                 	db	101	;'e'
   725  007E7F  73                 	db	115	;'s'
   726  007E80  73                 	db	115	;'s'
   727  007E81  20                 	db	32
   728  007E82  43                 	db	67	;'C'
   729  007E83  6C                 	db	108	;'l'
   730  007E84  65                 	db	101	;'e'
   731  007E85  61                 	db	97	;'a'
   732  007E86  72                 	db	114	;'r'
   733  007E87  20                 	db	32
   734  007E88  45                 	db	69	;'E'
   735  007E89  72                 	db	114	;'r'
   736  007E8A  72                 	db	114	;'r'
   737  007E8B  6F                 	db	111	;'o'
   738  007E8C  72                 	db	114	;'r'
   739  007E8D  20                 	db	32
   740  007E8E  6F                 	db	111	;'o'
   741  007E8F  6E                 	db	110	;'n'
   742  007E90  00                 	db	0
   743  007E91                     STR_24:
   744  007E91  77                 	db	119	;'w'
   745  007E92  69                 	db	105	;'i'
   746  007E93  74                 	db	116	;'t'
   747  007E94  68                 	db	104	;'h'
   748  007E95  20                 	db	32
   749  007E96  53                 	db	83	;'S'
   750  007E97  63                 	db	99	;'c'
   751  007E98  61                 	db	97	;'a'
   752  007E99  6E                 	db	110	;'n'
   753  007E9A  20                 	db	32
   754  007E9B  53                 	db	83	;'S'
   755  007E9C  61                 	db	97	;'a'
   756  007E9D  66                 	db	102	;'f'
   757  007E9E  65                 	db	101	;'e'
   758  007E9F  74                 	db	116	;'t'
   759  007EA0  79                 	db	121	;'y'
   760  007EA1  20                 	db	32
   761  007EA2  4B                 	db	75	;'K'
   762  007EA3  65                 	db	101	;'e'
   763  007EA4  79                 	db	121	;'y'
   764  007EA5  00                 	db	0
   765  007EA6                     STR_38:
   766  007EA6  52                 	db	82	;'R'
   767  007EA7  65                 	db	101	;'e'
   768  007EA8  62                 	db	98	;'b'
   769  007EA9  6F                 	db	111	;'o'
   770  007EAA  6F                 	db	111	;'o'
   771  007EAB  74                 	db	116	;'t'
   772  007EAC  20                 	db	32
   773  007EAD  53                 	db	83	;'S'
   774  007EAE  50                 	db	80	;'P'
   775  007EAF  49                 	db	73	;'I'
   776  007EB0  4E                 	db	78	;'N'
   777  007EB1  20                 	db	32
   778  007EB2  41                 	db	65	;'A'
   779  007EB3  4D                 	db	77	;'M'
   780  007EB4  50                 	db	80	;'P'
   781  007EB5  0D                 	db	13
   782  007EB6  0A                 	db	10
   783  007EB7  00                 	db	0
   784  007EB8                     STR_9:
   785  007EB8  4D                 	db	77	;'M'
   786  007EB9  43                 	db	67	;'C'
   787  007EBA  48                 	db	72	;'H'
   788  007EBB  50                 	db	80	;'P'
   789  007EBC  20                 	db	32
   790  007EBD  54                 	db	84	;'T'
   791  007EBE  65                 	db	101	;'e'
   792  007EBF  63                 	db	99	;'c'
   793  007EC0  68                 	db	104	;'h'
   794  007EC1  20                 	db	32
   795  007EC2  4D                 	db	77	;'M'
   796  007EC3  50                 	db	80	;'P'
   797  007EC4  20                 	db	32
   798  007EC5  56                 	db	86	;'V'
   799  007EC6  00                 	db	0
   800  007EC7                     STR_48:
   801  007EC7  1B                 	db	27
   802  007EC8  4F                 	db	79	;'O'
   803  007EC9  01                 	db	1
   804  007ECA  02                 	db	2
   805  007ECB  20                 	db	32
   806  007ECC  6F                 	db	111	;'o'
   807  007ECD  66                 	db	102	;'f'
   808  007ECE  66                 	db	102	;'f'
   809  007ECF  73                 	db	115	;'s'
   810  007ED0  65                 	db	101	;'e'
   811  007ED1  74                 	db	116	;'t'
   812  007ED2  20                 	db	32
   813  007ED3  25                 	db	37
   814  007ED4  64                 	db	100	;'d'
   815  007ED5  00                 	db	0
   816  007ED6                     STR_26:
   817  007ED6  57                 	db	87	;'W'
   818  007ED7  61                 	db	97	;'a'
   819  007ED8  69                 	db	105	;'i'
   820  007ED9  74                 	db	116	;'t'
   821  007EDA  2C                 	db	44
   822  007EDB  20                 	db	32
   823  007EDC  6D                 	db	109	;'m'
   824  007EDD  6F                 	db	111	;'o'
   825  007EDE  76                 	db	118	;'v'
   826  007EDF  69                 	db	105	;'i'
   827  007EE0  6E                 	db	110	;'n'
   828  007EE1  67                 	db	103	;'g'
   829  007EE2  00                 	db	0
   830  007EE3                     STR_36:
   831  007EE3  4D                 	db	77	;'M'
   832  007EE4  4E                 	db	78	;'N'
   833  007EE5  55                 	db	85	;'U'
   834  007EE6  4D                 	db	77	;'M'
   835  007EE7  42                 	db	66	;'B'
   836  007EE8  45                 	db	69	;'E'
   837  007EE9  52                 	db	82	;'R'
   838  007EEA  20                 	db	32
   839  007EEB  30                 	db	48	;'0'
   840  007EEC  0D                 	db	13
   841  007EED  0A                 	db	10
   842  007EEE  00                 	db	0
   843  007EEF                     STR_30:
   844  007EEF  4D                 	db	77	;'M'
   845  007EF0  50                 	db	80	;'P'
   846  007EF1  48                 	db	72	;'H'
   847  007EF2  41                 	db	65	;'A'
   848  007EF3  53                 	db	83	;'S'
   849  007EF4  45                 	db	69	;'E'
   850  007EF5  20                 	db	32
   851  007EF6  39                 	db	57	;'9'
   852  007EF7  30                 	db	48	;'0'
   853  007EF8  0D                 	db	13
   854  007EF9  0A                 	db	10
   855  007EFA  00                 	db	0
   856  007EFB                     STR_2:
   857  007EFB  4A                 	db	74	;'J'
   858  007EFC  75                 	db	117	;'u'
   859  007EFD  6C                 	db	108	;'l'
   860  007EFE  20                 	db	32
   861  007EFF  32                 	db	50	;'2'
   862  007F00  34                 	db	52	;'4'
   863  007F01  20                 	db	32
   864  007F02  32                 	db	50	;'2'
   865  007F03  30                 	db	48	;'0'
   866  007F04  31                 	db	49	;'1'
   867  007F05  39                 	db	57	;'9'
   868  007F06  00                 	db	0
   869  007F07                     STR_29:
   870  007F07  4D                 	db	77	;'M'
   871  007F08  50                 	db	80	;'P'
   872  007F09  4F                 	db	79	;'O'
   873  007F0A  4C                 	db	76	;'L'
   874  007F0B  45                 	db	69	;'E'
   875  007F0C  53                 	db	83	;'S'
   876  007F0D  20                 	db	32
   877  007F0E  30                 	db	48	;'0'
   878  007F0F  0D                 	db	13
   879  007F10  0A                 	db	10
   880  007F11  00                 	db	0
   881  007F12                     STR_31:
   882  007F12  4F                 	db	79	;'O'
   883  007F13  50                 	db	80	;'P'
   884  007F14  4D                 	db	77	;'M'
   885  007F15  4F                 	db	79	;'O'
   886  007F16  44                 	db	68	;'D'
   887  007F17  45                 	db	69	;'E'
   888  007F18  20                 	db	32
   889  007F19  32                 	db	50	;'2'
   890  007F1A  0D                 	db	13
   891  007F1B  0A                 	db	10
   892  007F1C  00                 	db	0
   893  007F1D                     STR_44:
   894  007F1D  1B                 	db	27
   895  007F1E  4F                 	db	79	;'O'
   896  007F1F  01                 	db	1
   897  007F20  01                 	db	1
   898  007F21  25                 	db	37
   899  007F22  73                 	db	115	;'s'
   900  007F23  20                 	db	32
   901  007F24  25                 	db	37
   902  007F25  64                 	db	100	;'d'
   903  007F26  20                 	db	32
   904  007F27  00                 	db	0
   905  007F28                     STR_13:
   906  007F28  62                 	db	98	;'b'
   907  007F29  6F                 	db	111	;'o'
   908  007F2A  6F                 	db	111	;'o'
   909  007F2B  74                 	db	116	;'t'
   910  007F2C  69                 	db	105	;'i'
   911  007F2D  6E                 	db	110	;'n'
   912  007F2E  67                 	db	103	;'g'
   913  007F2F  2E                 	db	46
   914  007F30  2E                 	db	46
   915  007F31  2E                 	db	46
   916  007F32  00                 	db	0
   917  007F33                     STR_151:
   918  007F33  49                 	db	73	;'I'
   919  007F34  4E                 	db	78	;'N'
   920  007F35  46                 	db	70	;'F'
   921  007F36  49                 	db	73	;'I'
   922  007F37  4E                 	db	78	;'N'
   923  007F38  49                 	db	73	;'I'
   924  007F39  54                 	db	84	;'T'
   925  007F3A  59                 	db	89	;'Y'
   926  007F3B  00                 	db	0
   927  007F3C                     STR_150:
   928  007F3C  69                 	db	105	;'i'
   929  007F3D  6E                 	db	110	;'n'
   930  007F3E  66                 	db	102	;'f'
   931  007F3F  69                 	db	105	;'i'
   932  007F40  6E                 	db	110	;'n'
   933  007F41  69                 	db	105	;'i'
   934  007F42  74                 	db	116	;'t'
   935  007F43  79                 	db	121	;'y'
   936  007F44  00                 	db	0
   937  007F45                     STR_17:
   938  007F45  4D                 	db	77	;'M'
   939  007F46  50                 	db	80	;'P'
   940  007F47  4F                 	db	79	;'O'
   941  007F48  4C                 	db	76	;'L'
   942  007F49  45                 	db	69	;'E'
   943  007F4A  53                 	db	83	;'S'
   944  007F4B  0D                 	db	13
   945  007F4C  0A                 	db	10
   946  007F4D  00                 	db	0
   947  007F4E                     STR_16:
   948  007F4E  44                 	db	68	;'D'
   949  007F4F  72                 	db	114	;'r'
   950  007F50  69                 	db	105	;'i'
   951  007F51  76                 	db	118	;'v'
   952  007F52  65                 	db	101	;'e'
   953  007F53  20                 	db	32
   954  007F54  37                 	db	55	;'7'
   955  007F55  30                 	db	48	;'0'
   956  007F56  00                 	db	0
   957  007F57                     STR_45:
   958  007F57  1B                 	db	27
   959  007F58  4F                 	db	79	;'O'
   960  007F59  01                 	db	1
   961  007F5A  04                 	db	4
   962  007F5B  25                 	db	37
   963  007F5C  73                 	db	115	;'s'
   964  007F5D  25                 	db	37
   965  007F5E  73                 	db	115	;'s'
   966  007F5F  00                 	db	0
   967  007F60                     STR_3:
   968  007F60  30                 	db	48	;'0'
   969  007F61  38                 	db	56	;'8'
   970  007F62  3A                 	db	58	;':'
   971  007F63  34                 	db	52	;'4'
   972  007F64  35                 	db	53	;'5'
   973  007F65  3A                 	db	58	;':'
   974  007F66  30                 	db	48	;'0'
   975  007F67  39                 	db	57	;'9'
   976  007F68  00                 	db	0
   977  007F69                     STR_35:
   978  007F69  4D                 	db	77	;'M'
   979  007F6A  53                 	db	83	;'S'
   980  007F6B  47                 	db	71	;'G'
   981  007F6C  20                 	db	32
   982  007F6D  30                 	db	48	;'0'
   983  007F6E  0D                 	db	13
   984  007F6F  0A                 	db	10
   985  007F70  00                 	db	0
   986  007F71                     STR_28:
   987  007F71  4D                 	db	77	;'M'
   988  007F72  53                 	db	83	;'S'
   989  007F73  47                 	db	71	;'G'
   990  007F74  20                 	db	32
   991  007F75  32                 	db	50	;'2'
   992  007F76  0D                 	db	13
   993  007F77  0A                 	db	10
   994  007F78  00                 	db	0
   995  007F79                     STR_33:
   996  007F79  54                 	db	84	;'T'
   997  007F7A  20                 	db	32
   998  007F7B  33                 	db	51	;'3'
   999  007F7C  35                 	db	53	;'5'
  1000  007F7D  0D                 	db	13
  1001  007F7E  0A                 	db	10
  1002  007F7F  00                 	db	0
  1003  007F80                     STR_37:
  1004  007F80  53                 	db	83	;'S'
  1005  007F81  41                 	db	65	;'A'
  1006  007F82  56                 	db	86	;'V'
  1007  007F83  45                 	db	69	;'E'
  1008  007F84  0D                 	db	13
  1009  007F85  0A                 	db	10
  1010  007F86  00                 	db	0
  1011  007F87                     STR_15:
  1012  007F87  48                 	db	72	;'H'
  1013  007F88  56                 	db	86	;'V'
  1014  007F89  45                 	db	69	;'E'
  1015  007F8A  52                 	db	82	;'R'
  1016  007F8B  0D                 	db	13
  1017  007F8C  0A                 	db	10
  1018  007F8D  00                 	db	0
  1019  007F8E                     STR_40:
  1020  007F8E  1B                 	db	27
  1021  007F8F  4F                 	db	79	;'O'
  1022  007F90  01                 	db	1
  1023  007F91  01                 	db	1
  1024  007F92  25                 	db	37
  1025  007F93  73                 	db	115	;'s'
  1026  007F94  00                 	db	0
  1027  007F95                     STR_41:
  1028  007F95  1B                 	db	27
  1029  007F96  4F                 	db	79	;'O'
  1030  007F97  01                 	db	1
  1031  007F98  02                 	db	2
  1032  007F99  25                 	db	37
  1033  007F9A  73                 	db	115	;'s'
  1034  007F9B  00                 	db	0
  1035  007F9C                     STR_42:
  1036  007F9C  1B                 	db	27
  1037  007F9D  4F                 	db	79	;'O'
  1038  007F9E  01                 	db	1
  1039  007F9F  03                 	db	3
  1040  007FA0  25                 	db	37
  1041  007FA1  73                 	db	115	;'s'
  1042  007FA2  00                 	db	0
  1043  007FA3                     STR_43:
  1044  007FA3  1B                 	db	27
  1045  007FA4  4F                 	db	79	;'O'
  1046  007FA5  01                 	db	1
  1047  007FA6  04                 	db	4
  1048  007FA7  25                 	db	37
  1049  007FA8  73                 	db	115	;'s'
  1050  007FA9  00                 	db	0
  1051  007FAA                     STR_34:
  1052  007FAA  50                 	db	80	;'P'
  1053  007FAB  46                 	db	70	;'F'
  1054  007FAC  42                 	db	66	;'B'
  1055  007FAD  0D                 	db	13
  1056  007FAE  0A                 	db	10
  1057  007FAF  00                 	db	0
  1058  007FB0                     STR_27:
  1059  007FB0  44                 	db	68	;'D'
  1060  007FB1  49                 	db	73	;'I'
  1061  007FB2  53                 	db	83	;'S'
  1062  007FB3  0D                 	db	13
  1063  007FB4  0A                 	db	10
  1064  007FB5  00                 	db	0
  1065  007FB6                     STR_32:
  1066  007FB6  45                 	db	69	;'E'
  1067  007FB7  4E                 	db	78	;'N'
  1068  007FB8  0D                 	db	13
  1069  007FB9  0A                 	db	10
  1070  007FBA  00                 	db	0
  1071  007FBB                     STR_156:
  1072  007FBB  4E                 	db	78	;'N'
  1073  007FBC  41                 	db	65	;'A'
  1074  007FBD  4E                 	db	78	;'N'
  1075  007FBE  00                 	db	0
  1076  007FBF                     STR_152:
  1077  007FBF  69                 	db	105	;'i'
  1078  007FC0  6E                 	db	110	;'n'
  1079  007FC1  66                 	db	102	;'f'
  1080  007FC2  00                 	db	0
  1081  007FC3                     STR_155:
  1082  007FC3  6E                 	db	110	;'n'
  1083  007FC4  61                 	db	97	;'a'
  1084  007FC5  6E                 	db	110	;'n'
  1085  007FC6  00                 	db	0
  1086  007FC7                     STR_127:
  1087  007FC7  68                 	db	104	;'h'
  1088  007FC8  68                 	db	104	;'h'
  1089  007FC9  58                 	db	88	;'X'
  1090  007FCA  00                 	db	0
  1091  007FCB                     STR_51:
  1092  007FCB  68                 	db	104	;'h'
  1093  007FCC  68                 	db	104	;'h'
  1094  007FCD  64                 	db	100	;'d'
  1095  007FCE  00                 	db	0
  1096  007FCF                     STR_55:
  1097  007FCF  68                 	db	104	;'h'
  1098  007FD0  68                 	db	104	;'h'
  1099  007FD1  69                 	db	105	;'i'
  1100  007FD2  00                 	db	0
  1101  007FD3                     STR_93:
  1102  007FD3  68                 	db	104	;'h'
  1103  007FD4  68                 	db	104	;'h'
  1104  007FD5  6E                 	db	110	;'n'
  1105  007FD6  00                 	db	0
  1106  007FD7                     STR_78:
  1107  007FD7  68                 	db	104	;'h'
  1108  007FD8  68                 	db	104	;'h'
  1109  007FD9  6F                 	db	111	;'o'
  1110  007FDA  00                 	db	0
  1111  007FDB                     STR_108:
  1112  007FDB  68                 	db	104	;'h'
  1113  007FDC  68                 	db	104	;'h'
  1114  007FDD  75                 	db	117	;'u'
  1115  007FDE  00                 	db	0
  1116  007FDF                     STR_123:
  1117  007FDF  68                 	db	104	;'h'
  1118  007FE0  68                 	db	104	;'h'
  1119  007FE1  78                 	db	120	;'x'
  1120  007FE2  00                 	db	0
  1121  007FE3                     STR_1:
  1122  007FE3  30                 	db	48	;'0'
  1123  007FE4  2E                 	db	46
  1124  007FE5  39                 	db	57	;'9'
  1125  007FE6  00                 	db	0
  1126  007FE7                     STR_145:
  1127  007FE7  7A                 	db	122	;'z'
  1128  007FE8  58                 	db	88	;'X'
  1129  007FE9  00                 	db	0
  1130  007FEA                     STR_69:
  1131  007FEA  7A                 	db	122	;'z'
  1132  007FEB  64                 	db	100	;'d'
  1133  007FEC  00                 	db	0
  1134  007FED                     STR_73:
  1135  007FED  7A                 	db	122	;'z'
  1136  007FEE  69                 	db	105	;'i'
  1137  007FEF  00                 	db	0
  1138  007FF0                     STR_103:
  1139  007FF0  7A                 	db	122	;'z'
  1140  007FF1  6E                 	db	110	;'n'
  1141  007FF2  00                 	db	0
  1142  007FF3                     STR_88:
  1143  007FF3  7A                 	db	122	;'z'
  1144  007FF4  6F                 	db	111	;'o'
  1145  007FF5  00                 	db	0
  1146  007FF6                     STR_118:
  1147  007FF6  7A                 	db	122	;'z'
  1148  007FF7  75                 	db	117	;'u'
  1149  007FF8  00                 	db	0
  1150  007FF9                     STR_141:
  1151  007FF9  7A                 	db	122	;'z'
  1152  007FFA  78                 	db	120	;'x'
  1153  007FFB  00                 	db	0
  1154  007FFC                     STR_18:
  1155  007FFC  32                 	db	50	;'2'
  1156  007FFD  34                 	db	52	;'4'
  1157  007FFE  00                 	db	0
  1158  0000                     
  1159                           ; #config settings
  1160  007FFF  00                 	db	0	; dummy byte at the end
  1161  0000                     
  1162                           	psect	nvCOMRAM
  1163  00004B                     __pnvCOMRAM:
  1164                           	opt callstack 0
  1165  00004B                     _timer0ReloadVal:
  1166                           	opt callstack 0
  1167  00004B                     	ds	2
  1168                           
  1169                           	psect	nvBANK0
  1170  0000CA                     __pnvBANK0:
  1171                           	opt callstack 0
  1172  0000CA                     _eusart1TxBufferRemaining:
  1173                           	opt callstack 0
  1174  0000CA                     	ds	1
  1175  0000CB                     _eusart2TxBufferRemaining:
  1176                           	opt callstack 0
  1177  0000CB                     	ds	1
  1178                           
  1179                           	psect	nvBANK1
  1180  0001D9                     __pnvBANK1:
  1181                           	opt callstack 0
  1182  0001D9                     _INT3_InterruptHandler:
  1183                           	opt callstack 0
  1184  0001D9                     	ds	2
  1185  0001DB                     _INT2_InterruptHandler:
  1186                           	opt callstack 0
  1187  0001DB                     	ds	2
  1188  0001DD                     _INT1_InterruptHandler:
  1189                           	opt callstack 0
  1190  0001DD                     	ds	2
  1191  0001DF                     _INT0_InterruptHandler:
  1192                           	opt callstack 0
  1193  0001DF                     	ds	2
  1194  0001E1                     _TMR3_InterruptHandler:
  1195                           	opt callstack 0
  1196  0001E1                     	ds	2
  1197  0001E3                     _timer3ReloadVal:
  1198                           	opt callstack 0
  1199  0001E3                     	ds	2
  1200  0001E5                     _TMR1_InterruptHandler:
  1201                           	opt callstack 0
  1202  0001E5                     	ds	2
  1203  0001E7                     _timer1ReloadVal:
  1204                           	opt callstack 0
  1205  0001E7                     	ds	2
  1206  0001E9                     _EUSART1_RxDefaultInterruptHandler:
  1207                           	opt callstack 0
  1208  0001E9                     	ds	2
  1209  0001EB                     _EUSART1_TxDefaultInterruptHandler:
  1210                           	opt callstack 0
  1211  0001EB                     	ds	2
  1212  0001ED                     _EUSART2_RxDefaultInterruptHandler:
  1213                           	opt callstack 0
  1214  0001ED                     	ds	2
  1215  0001EF                     _EUSART2_TxDefaultInterruptHandler:
  1216                           	opt callstack 0
  1217  0001EF                     	ds	2
  1218  0001F1                     _TMR0_InterruptHandler:
  1219                           	opt callstack 0
  1220  0001F1                     	ds	2
  1221  0000                     _WPUB	set	3931
  1222  0000                     _ANCON1	set	3932
  1223  0000                     _ANCON0	set	3933
  1224  0000                     _PIR4bits	set	4023
  1225  0000                     _EEDATA	set	3955
  1226  0000                     _EEADR	set	3956
  1227  0000                     _EECON2	set	3966
  1228  0000                     _EECON1bits	set	3967
  1229  0000                     _TABLAT	set	4085
  1230  0000                     _TBLPTRL	set	4086
  1231  0000                     _TBLPTRH	set	4087
  1232  0000                     _TBLPTRU	set	4088
  1233  0000                     _LATAbits	set	3977
  1234  0000                     _T3GCONbits	set	4016
  1235  0000                     _T3CONbits	set	4017
  1236  0000                     _T3CON	set	4017
  1237  0000                     _TMR3L	set	4018
  1238  0000                     _TMR3H	set	4019
  1239  0000                     _T3GCON	set	4016
  1240  0000                     _T1GCONbits	set	4010
  1241  0000                     _T1CONbits	set	4045
  1242  0000                     _T1CON	set	4045
  1243  0000                     _TMR1L	set	4046
  1244  0000                     _TMR1H	set	4047
  1245  0000                     _T1GCON	set	4010
  1246  0000                     _SSPSTATbits	set	4039
  1247  0000                     _SSPBUF	set	4041
  1248  0000                     _SSPCON1bits	set	4038
  1249  0000                     _SSPADD	set	4040
  1250  0000                     _SSPCON1	set	4038
  1251  0000                     _SSPSTAT	set	4039
  1252  0000                     _REFOCON	set	3994
  1253  0000                     _OSCTUNE	set	3995
  1254  0000                     _OSCCON2	set	4050
  1255  0000                     _OSCCON	set	4051
  1256  0000                     _RCREG1	set	4014
  1257  0000                     _RCSTA1bits	set	4011
  1258  0000                     _TXREG1	set	4013
  1259  0000                     _TXSTA1bits	set	4012
  1260  0000                     _SPBRGH1	set	3965
  1261  0000                     _SPBRG1	set	4015
  1262  0000                     _TXSTA1	set	4012
  1263  0000                     _RCSTA1	set	4011
  1264  0000                     _BAUDCON1	set	4007
  1265  0000                     _PIR2bits	set	4001
  1266  0000                     _PIE2bits	set	4000
  1267  0000                     _PIR1bits	set	3998
  1268  0000                     _PIE1bits	set	3997
  1269  0000                     _PIR3bits	set	4004
  1270  0000                     _IPR2bits	set	4002
  1271  0000                     _IPR1bits	set	3999
  1272  0000                     _IPR3bits	set	4005
  1273  0000                     _INTCON3bits	set	4080
  1274  0000                     _RCONbits	set	4048
  1275  0000                     _RCREG2	set	3962
  1276  0000                     _RCSTA2bits	set	4006
  1277  0000                     _TXREG2	set	3961
  1278  0000                     _TXSTA2bits	set	4026
  1279  0000                     _SPBRGH2	set	3964
  1280  0000                     _SPBRG2	set	3963
  1281  0000                     _TXSTA2	set	4026
  1282  0000                     _RCSTA2	set	4006
  1283  0000                     _BAUDCON2	set	4025
  1284  0000                     _PIE3bits	set	4003
  1285  0000                     _T0CON	set	4053
  1286  0000                     _TMR0L	set	4054
  1287  0000                     _TMR0H	set	4055
  1288  0000                     _T0CONbits	set	4053
  1289  0000                     _INTCONbits	set	4082
  1290  0000                     _INTCON2bits	set	4081
  1291  0000                     _TRISD	set	3989
  1292  0000                     _TRISC	set	3988
  1293  0000                     _TRISB	set	3987
  1294  0000                     _TRISA	set	3986
  1295  0000                     _TRISE	set	3990
  1296  0000                     _LATC	set	3979
  1297  0000                     _LATB	set	3978
  1298  0000                     _LATA	set	3977
  1299  0000                     _LATD	set	3980
  1300  0000                     _LATE	set	3981
  1301                           
  1302                           	psect	cinit
  1303  00514C                     __pcinit:
  1304                           	opt callstack 0
  1305  00514C                     start_initialization:
  1306                           	opt callstack 0
  1307  00514C                     __initialization:
  1308                           	opt callstack 0
  1309                           
  1310                           ; Initialize objects allocated to BANK1 (89 bytes)
  1311                           ; load TBLPTR registers with __pidataBANK1
  1312  00514C  0E06               	movlw	low __pidataBANK1
  1313  00514E  6EF6               	movwf	tblptrl,c
  1314  005150  0E52               	movlw	high __pidataBANK1
  1315  005152  6EF7               	movwf	tblptrh,c
  1316  005154  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1317  005156  6EF8               	movwf	tblptru,c
  1318  005158  EE01  F080         	lfsr	0,__pdataBANK1
  1319  00515C  EE10 F059          	lfsr	1,89
  1320  005160                     copy_data0:
  1321  005160  0009               	tblrd		*+
  1322  005162  CFF5 FFEE          	movff	tablat,postinc0
  1323  005166  50E5               	movf	postdec1,w,c
  1324  005168  50E1               	movf	fsr1l,w,c
  1325  00516A  E1FA               	bnz	copy_data0
  1326                           
  1327                           ; Clear objects allocated to BANK2 (192 bytes)
  1328  00516C  EE02  F000         	lfsr	0,__pbssBANK2
  1329  005170  0EC0               	movlw	192
  1330  005172                     clear_0:
  1331  005172  6AEE               	clrf	postinc0,c
  1332  005174  06E8               	decf	wreg,f,c
  1333  005176  E1FD               	bnz	clear_0
  1334                           
  1335                           ; Clear objects allocated to BANK1 (128 bytes)
  1336  005178  EE01  F000         	lfsr	0,__pbssBANK1
  1337  00517C  0E80               	movlw	128
  1338  00517E                     clear_1:
  1339  00517E  6AEE               	clrf	postinc0,c
  1340  005180  06E8               	decf	wreg,f,c
  1341  005182  E1FD               	bnz	clear_1
  1342                           
  1343                           ; Clear objects allocated to BANK0 (10 bytes)
  1344  005184  EE00  F0C0         	lfsr	0,__pbssBANK0
  1345  005188  0E0A               	movlw	10
  1346  00518A                     clear_2:
  1347  00518A  6AEE               	clrf	postinc0,c
  1348  00518C  06E8               	decf	wreg,f,c
  1349  00518E  E1FD               	bnz	clear_2
  1350                           
  1351                           ; Clear objects allocated to COMRAM (16 bytes)
  1352  005190  EE00  F03B         	lfsr	0,__pbssCOMRAM
  1353  005194  0E10               	movlw	16
  1354  005196                     clear_3:
  1355  005196  6AEE               	clrf	postinc0,c
  1356  005198  06E8               	decf	wreg,f,c
  1357  00519A  E1FD               	bnz	clear_3
  1358  00519C                     end_of_initialization:
  1359                           	opt callstack 0
  1360  00519C                     __end_of__initialization:
  1361                           	opt callstack 0
  1362  00519C  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1363  00519E  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1364  0051A0  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1365  0051A2  6EF8               	movwf	tblptru,c
  1366  0051A4  0100               	movlb	0
  1367  0051A6  EF36  F02F         	goto	_main	;jump to C main() function
  1368                           
  1369                           	psect	bssCOMRAM
  1370  00003B                     __pbssCOMRAM:
  1371                           	opt callstack 0
  1372  00003B                     _width:
  1373                           	opt callstack 0
  1374  00003B                     	ds	2
  1375  00003D                     _prec:
  1376                           	opt callstack 0
  1377  00003D                     	ds	2
  1378  00003F                     _flags:
  1379                           	opt callstack 0
  1380  00003F                     	ds	2
  1381  000041                     _eusart1RxCount:
  1382                           	opt callstack 0
  1383  000041                     	ds	1
  1384  000042                     _eusart1RxTail:
  1385                           	opt callstack 0
  1386  000042                     	ds	1
  1387  000043                     _eusart1RxHead:
  1388                           	opt callstack 0
  1389  000043                     	ds	1
  1390  000044                     _eusart1TxTail:
  1391                           	opt callstack 0
  1392  000044                     	ds	1
  1393  000045                     _eusart1TxHead:
  1394                           	opt callstack 0
  1395  000045                     	ds	1
  1396  000046                     _eusart2RxCount:
  1397                           	opt callstack 0
  1398  000046                     	ds	1
  1399  000047                     _eusart2RxTail:
  1400                           	opt callstack 0
  1401  000047                     	ds	1
  1402  000048                     _eusart2RxHead:
  1403                           	opt callstack 0
  1404  000048                     	ds	1
  1405  000049                     _eusart2TxTail:
  1406                           	opt callstack 0
  1407  000049                     	ds	1
  1408  00004A                     _eusart2TxHead:
  1409                           	opt callstack 0
  1410  00004A                     	ds	1
  1411                           
  1412                           	psect	bssBANK0
  1413  0000C0                     __pbssBANK0:
  1414                           	opt callstack 0
  1415  0000C0                     strtok@p:
  1416                           	opt callstack 0
  1417  0000C0                     	ds	2
  1418  0000C2                     _nout:
  1419                           	opt callstack 0
  1420  0000C2                     	ds	2
  1421  0000C4                     MC_ReceivePacket@i:
  1422                           	opt callstack 0
  1423  0000C4                     	ds	2
  1424  0000C6                     APP_Tasks@m_start:
  1425                           	opt callstack 0
  1426  0000C6                     	ds	2
  1427  0000C8                     MC_ReceivePacket@btDecodeState:
  1428                           	opt callstack 0
  1429  0000C8                     	ds	1
  1430  0000C9                     TMR3_ISR@chirp:
  1431                           	opt callstack 0
  1432  0000C9                     	ds	1
  1433                           
  1434                           	psect	bssBANK1
  1435  000100                     __pbssBANK1:
  1436                           	opt callstack 0
  1437  000100                     _tickCount:
  1438                           	opt callstack 0
  1439  000100                     	ds	14
  1440  00010E                     _eusart2RxBuffer:
  1441                           	opt callstack 0
  1442  00010E                     	ds	8
  1443  000116                     truncf@F524:
  1444                           	opt callstack 0
  1445  000116                     	ds	4
  1446  00011A                     roundf@F525:
  1447                           	opt callstack 0
  1448  00011A                     	ds	4
  1449  00011E                     APP_Tasks@mc_response:
  1450                           	opt callstack 0
  1451  00011E                     	ds	66
  1452  000160                     _dbuf:
  1453                           	opt callstack 0
  1454  000160                     	ds	32
  1455                           
  1456                           	psect	dataBANK1
  1457  000180                     __pdataBANK1:
  1458                           	opt callstack 0
  1459  000180                     stoa@F1152:
  1460                           	opt callstack 0
  1461  000180                     	ds	7
  1462  000187                     get_pfb@F13321:
  1463                           	opt callstack 0
  1464  000187                     	ds	2
  1465  000189                     _rs_text:
  1466                           	opt callstack 0
  1467  000189                     	ds	2
  1468  00018B                     _cr_text:
  1469                           	opt callstack 0
  1470  00018B                     	ds	2
  1471  00018D                     _appData:
  1472                           	opt callstack 0
  1473  00018D                     	ds	76
  1474                           
  1475                           	psect	bssBANK2
  1476  000200                     __pbssBANK2:
  1477                           	opt callstack 0
  1478  000200                     _eusart1RxBuffer:
  1479                           	opt callstack 0
  1480  000200                     	ds	64
  1481  000240                     _eusart1TxBuffer:
  1482                           	opt callstack 0
  1483  000240                     	ds	64
  1484  000280                     _eusart2TxBuffer:
  1485                           	opt callstack 0
  1486  000280                     	ds	64
  1487                           
  1488                           	psect	cstackBANK3
  1489  000300                     __pcstackBANK3:
  1490                           	opt callstack 0
  1491  000300                     get_pfb@pfb_ascii:
  1492                           	opt callstack 0
  1493                           
  1494                           ; 66 bytes @ 0x0
  1495  000300                     	ds	66
  1496  000342                     get_pfb@mphase:
  1497                           	opt callstack 0
  1498                           
  1499                           ; 4 bytes @ 0x42
  1500  000342                     	ds	4
  1501  000346                     get_pfb@offset_whole:
  1502                           	opt callstack 0
  1503                           
  1504                           ; 4 bytes @ 0x46
  1505  000346                     	ds	4
  1506  00034A                     get_pfb@token:
  1507                           	opt callstack 0
  1508                           
  1509                           ; 2 bytes @ 0x4A
  1510  00034A                     	ds	2
  1511  00034C                     get_pfb@s:
  1512                           	opt callstack 0
  1513                           
  1514                           ; 2 bytes @ 0x4C
  1515  00034C                     	ds	2
  1516  00034E                     get_pfb@offset:
  1517                           	opt callstack 0
  1518                           
  1519                           ; 4 bytes @ 0x4E
  1520  00034E                     	ds	4
  1521                           
  1522                           	psect	cstackBANK0
  1523  000060                     __pcstackBANK0:
  1524                           	opt callstack 0
  1525  000060                     ??_dtoa:
  1526  000060                     ??_otoa:
  1527  000060                     ??_utoa:
  1528  000060                     ??_xtoa:
  1529  000060                     ___flmul@sign:
  1530                           	opt callstack 0
  1531                           
  1532                           ; 1 bytes @ 0x0
  1533  000060                     	ds	1
  1534  000061                     ___flmul@aexp:
  1535                           	opt callstack 0
  1536                           
  1537                           ; 1 bytes @ 0x1
  1538  000061                     	ds	1
  1539  000062                     ___flmul@grs:
  1540                           	opt callstack 0
  1541                           
  1542                           ; 4 bytes @ 0x2
  1543  000062                     	ds	4
  1544  000066                     ___flmul@bexp:
  1545                           	opt callstack 0
  1546                           
  1547                           ; 1 bytes @ 0x6
  1548  000066                     	ds	1
  1549  000067                     ___flmul@prod:
  1550                           	opt callstack 0
  1551                           
  1552                           ; 4 bytes @ 0x7
  1553  000067                     	ds	1
  1554  000068                     _dtoa$2922:
  1555                           	opt callstack 0
  1556  000068                     otoa@p:
  1557                           	opt callstack 0
  1558  000068                     utoa@p:
  1559                           	opt callstack 0
  1560  000068                     _xtoa$2957:
  1561                           	opt callstack 0
  1562                           
  1563                           ; 2 bytes @ 0x8
  1564  000068                     	ds	2
  1565  00006A                     dtoa@p:
  1566                           	opt callstack 0
  1567  00006A                     otoa@t:
  1568                           	opt callstack 0
  1569  00006A                     utoa@w:
  1570                           	opt callstack 0
  1571  00006A                     _xtoa$2958:
  1572                           	opt callstack 0
  1573                           
  1574                           ; 2 bytes @ 0xA
  1575  00006A                     	ds	1
  1576  00006B                     ___flmul@temp:
  1577                           	opt callstack 0
  1578                           
  1579                           ; 2 bytes @ 0xB
  1580  00006B                     	ds	1
  1581  00006C                     dtoa@w:
  1582                           	opt callstack 0
  1583  00006C                     otoa@w:
  1584                           	opt callstack 0
  1585  00006C                     xtoa@p:
  1586                           	opt callstack 0
  1587  00006C                     utoa@n:
  1588                           	opt callstack 0
  1589                           
  1590                           ; 8 bytes @ 0xC
  1591  00006C                     	ds	1
  1592  00006D                     ??_roundf:
  1593  00006D                     ?___fldiv:
  1594                           	opt callstack 0
  1595  00006D                     ___fldiv@b:
  1596                           	opt callstack 0
  1597                           
  1598                           ; 4 bytes @ 0xD
  1599  00006D                     	ds	1
  1600  00006E                     dtoa@s:
  1601                           	opt callstack 0
  1602  00006E                     xtoa@w:
  1603                           	opt callstack 0
  1604  00006E                     otoa@n:
  1605                           	opt callstack 0
  1606                           
  1607                           ; 8 bytes @ 0xE
  1608  00006E                     	ds	2
  1609  000070                     dtoa@n:
  1610                           	opt callstack 0
  1611  000070                     xtoa@n:
  1612                           	opt callstack 0
  1613                           
  1614                           ; 8 bytes @ 0x10
  1615  000070                     	ds	1
  1616  000071                     ___fldiv@a:
  1617                           	opt callstack 0
  1618  000071                     _roundf$4196:
  1619                           	opt callstack 0
  1620                           
  1621                           ; 4 bytes @ 0x11
  1622  000071                     	ds	3
  1623  000074                     utoa@i:
  1624                           	opt callstack 0
  1625                           
  1626                           ; 2 bytes @ 0x14
  1627  000074                     	ds	1
  1628  000075                     roundf@e:
  1629                           	opt callstack 0
  1630  000075                     ___fldiv@rem:
  1631                           	opt callstack 0
  1632                           
  1633                           ; 4 bytes @ 0x15
  1634  000075                     	ds	1
  1635  000076                     otoa@i:
  1636                           	opt callstack 0
  1637                           
  1638                           ; 2 bytes @ 0x16
  1639  000076                     	ds	1
  1640  000077                     _roundf$4195:
  1641                           	opt callstack 0
  1642                           
  1643                           ; 4 bytes @ 0x17
  1644  000077                     	ds	1
  1645  000078                     dtoa@i:
  1646                           	opt callstack 0
  1647  000078                     xtoa@i:
  1648                           	opt callstack 0
  1649                           
  1650                           ; 2 bytes @ 0x18
  1651  000078                     	ds	1
  1652  000079                     ___fldiv@sign:
  1653                           	opt callstack 0
  1654                           
  1655                           ; 1 bytes @ 0x19
  1656  000079                     	ds	1
  1657  00007A                     xtoa@c:
  1658                           	opt callstack 0
  1659  00007A                     ___fldiv@new_exp:
  1660                           	opt callstack 0
  1661                           
  1662                           ; 2 bytes @ 0x1A
  1663  00007A                     	ds	1
  1664  00007B                     roundf@u:
  1665                           	opt callstack 0
  1666                           
  1667                           ; 4 bytes @ 0x1B
  1668  00007B                     	ds	1
  1669  00007C                     ?_vfpfcnvrt:
  1670                           	opt callstack 0
  1671  00007C                     vfpfcnvrt@fp:
  1672                           	opt callstack 0
  1673  00007C                     ___fldiv@grs:
  1674                           	opt callstack 0
  1675                           
  1676                           ; 4 bytes @ 0x1C
  1677  00007C                     	ds	2
  1678  00007E                     vfpfcnvrt@fmt:
  1679                           	opt callstack 0
  1680                           
  1681                           ; 2 bytes @ 0x1E
  1682  00007E                     	ds	1
  1683  00007F                     roundf@y:
  1684                           	opt callstack 0
  1685                           
  1686                           ; 4 bytes @ 0x1F
  1687  00007F                     	ds	1
  1688  000080                     ___fldiv@bexp:
  1689                           	opt callstack 0
  1690  000080                     vfpfcnvrt@ap:
  1691                           	opt callstack 0
  1692                           
  1693                           ; 2 bytes @ 0x20
  1694  000080                     	ds	1
  1695  000081                     ___fldiv@aexp:
  1696                           	opt callstack 0
  1697                           
  1698                           ; 1 bytes @ 0x21
  1699  000081                     	ds	1
  1700  000082                     ??_vfpfcnvrt:
  1701  000082                     ?_strtof:
  1702                           	opt callstack 0
  1703  000082                     strtof@s:
  1704                           	opt callstack 0
  1705                           
  1706                           ; 2 bytes @ 0x22
  1707  000082                     	ds	1
  1708  000083                     ?___fltol:
  1709                           	opt callstack 0
  1710  000083                     ___fltol@f1:
  1711                           	opt callstack 0
  1712                           
  1713                           ; 4 bytes @ 0x23
  1714  000083                     	ds	1
  1715  000084                     strtof@res:
  1716                           	opt callstack 0
  1717                           
  1718                           ; 2 bytes @ 0x24
  1719  000084                     	ds	2
  1720  000086                     ??_strtof:
  1721  000086                     vfpfcnvrt@cp:
  1722                           	opt callstack 0
  1723                           
  1724                           ; 2 bytes @ 0x26
  1725  000086                     	ds	1
  1726  000087                     ??___fltol:
  1727                           
  1728                           ; 1 bytes @ 0x27
  1729  000087                     	ds	1
  1730  000088                     vfpfcnvrt@done:
  1731                           	opt callstack 0
  1732                           
  1733                           ; 2 bytes @ 0x28
  1734  000088                     	ds	2
  1735  00008A                     _vfpfcnvrt$2972:
  1736                           	opt callstack 0
  1737                           
  1738                           ; 2 bytes @ 0x2A
  1739  00008A                     	ds	1
  1740  00008B                     ___fltol@sign1:
  1741                           	opt callstack 0
  1742                           
  1743                           ; 1 bytes @ 0x2B
  1744  00008B                     	ds	1
  1745  00008C                     ___fltol@exp1:
  1746                           	opt callstack 0
  1747  00008C                     _vfpfcnvrt$2973:
  1748                           	opt callstack 0
  1749  00008C                     _strtof$3699:
  1750                           	opt callstack 0
  1751                           
  1752                           ; 2 bytes @ 0x2C
  1753  00008C                     	ds	2
  1754  00008E                     _strtof$3710:
  1755                           	opt callstack 0
  1756  00008E                     vfpfcnvrt@ll:
  1757                           	opt callstack 0
  1758                           
  1759                           ; 8 bytes @ 0x2E
  1760  00008E                     	ds	2
  1761  000090                     _strtof$3711:
  1762                           	opt callstack 0
  1763                           
  1764                           ; 2 bytes @ 0x30
  1765  000090                     	ds	2
  1766  000092                     _strtof$3712:
  1767                           	opt callstack 0
  1768                           
  1769                           ; 2 bytes @ 0x32
  1770  000092                     	ds	2
  1771  000094                     _strtof$3713:
  1772                           	opt callstack 0
  1773                           
  1774                           ; 2 bytes @ 0x34
  1775  000094                     	ds	2
  1776  000096                     vfpfcnvrt@vp:
  1777                           	opt callstack 0
  1778  000096                     _strtof$3714:
  1779                           	opt callstack 0
  1780                           
  1781                           ; 2 bytes @ 0x36
  1782  000096                     	ds	2
  1783  000098                     vfpfcnvrt@c:
  1784                           	opt callstack 0
  1785  000098                     _strtof$3715:
  1786                           	opt callstack 0
  1787                           
  1788                           ; 2 bytes @ 0x38
  1789  000098                     	ds	1
  1790  000099                     vfpfcnvrt@llu:
  1791                           	opt callstack 0
  1792                           
  1793                           ; 8 bytes @ 0x39
  1794  000099                     	ds	1
  1795  00009A                     _strtof$3716:
  1796                           	opt callstack 0
  1797                           
  1798                           ; 2 bytes @ 0x3A
  1799  00009A                     	ds	2
  1800  00009C                     _strtof$3700:
  1801                           	opt callstack 0
  1802                           
  1803                           ; 1 bytes @ 0x3C
  1804  00009C                     	ds	1
  1805  00009D                     strtof@digit:
  1806                           	opt callstack 0
  1807                           
  1808                           ; 1 bytes @ 0x3D
  1809  00009D                     	ds	1
  1810  00009E                     strtof@flags:
  1811                           	opt callstack 0
  1812                           
  1813                           ; 1 bytes @ 0x3E
  1814  00009E                     	ds	1
  1815  00009F                     strtof@expon:
  1816                           	opt callstack 0
  1817                           
  1818                           ; 2 bytes @ 0x3F
  1819  00009F                     	ds	2
  1820  0000A1                     ?_vfprintf:
  1821                           	opt callstack 0
  1822  0000A1                     vfprintf@fp:
  1823                           	opt callstack 0
  1824  0000A1                     strtof@eexp:
  1825                           	opt callstack 0
  1826                           
  1827                           ; 2 bytes @ 0x41
  1828  0000A1                     	ds	2
  1829  0000A3                     vfprintf@fmt:
  1830                           	opt callstack 0
  1831  0000A3                     strtof@_u:
  1832                           	opt callstack 0
  1833                           
  1834                           ; 4 bytes @ 0x43
  1835  0000A3                     	ds	2
  1836  0000A5                     vfprintf@ap:
  1837                           	opt callstack 0
  1838                           
  1839                           ; 2 bytes @ 0x45
  1840  0000A5                     	ds	2
  1841  0000A7                     strtof@i:
  1842                           	opt callstack 0
  1843  0000A7                     vfprintf@cfmt:
  1844                           	opt callstack 0
  1845                           
  1846                           ; 2 bytes @ 0x47
  1847  0000A7                     	ds	1
  1848  0000A8                     ?_atof:
  1849                           	opt callstack 0
  1850  0000A8                     atof@s:
  1851                           	opt callstack 0
  1852                           
  1853                           ; 2 bytes @ 0x48
  1854  0000A8                     	ds	1
  1855  0000A9                     ?_sprintf:
  1856                           	opt callstack 0
  1857  0000A9                     ?_printf:
  1858                           	opt callstack 0
  1859  0000A9                     sprintf@s:
  1860                           	opt callstack 0
  1861  0000A9                     printf@fmt:
  1862                           	opt callstack 0
  1863                           
  1864                           ; 2 bytes @ 0x49
  1865  0000A9                     	ds	2
  1866  0000AB                     sprintf@fmt:
  1867                           	opt callstack 0
  1868                           
  1869                           ; 2 bytes @ 0x4B
  1870  0000AB                     	ds	1
  1871  0000AC                     ?_get_pfb:
  1872                           	opt callstack 0
  1873  0000AC                     get_pfb@buf:
  1874                           	opt callstack 0
  1875                           
  1876                           ; 2 bytes @ 0x4C
  1877  0000AC                     	ds	3
  1878  0000AF                     printf@ap:
  1879                           	opt callstack 0
  1880                           
  1881                           ; 2 bytes @ 0x4F
  1882  0000AF                     	ds	2
  1883  0000B1                     display_ea_init@pause:
  1884                           	opt callstack 0
  1885  0000B1                     display_ea_version@pause:
  1886                           	opt callstack 0
  1887  0000B1                     display_ea_ff@pause:
  1888                           	opt callstack 0
  1889  0000B1                     display_ea_cursor_off@pause:
  1890                           	opt callstack 0
  1891  0000B1                     display_ea_line@line:
  1892                           	opt callstack 0
  1893                           
  1894                           ; 2 bytes @ 0x51
  1895  0000B1                     	ds	2
  1896  0000B3                     sprintf@f:
  1897                           	opt callstack 0
  1898                           
  1899                           ; 6 bytes @ 0x53
  1900  0000B3                     	ds	6
  1901  0000B9                     sprintf@ap:
  1902                           	opt callstack 0
  1903                           
  1904                           ; 2 bytes @ 0x59
  1905  0000B9                     	ds	2
  1906  0000BB                     ??_APP_Tasks:
  1907                           
  1908                           ; 1 bytes @ 0x5B
  1909  0000BB                     	ds	2
  1910  0000BD                     APP_Tasks@offset:
  1911                           	opt callstack 0
  1912                           
  1913                           ; 2 bytes @ 0x5D
  1914  0000BD                     	ds	2
  1915  0000BF                     APP_Tasks@c_down:
  1916                           	opt callstack 0
  1917                           
  1918                           ; 1 bytes @ 0x5F
  1919  0000BF                     	ds	1
  1920                           
  1921                           	psect	cstackCOMRAM
  1922  000001                     __pcstackCOMRAM:
  1923                           	opt callstack 0
  1924  000001                     ??_TMR3_DefaultInterruptHandler:
  1925  000001                     EUSART1_Receive_ISR@treg:
  1926                           	opt callstack 0
  1927  000001                     TMR3_WriteTimer@timerVal:
  1928                           	opt callstack 0
  1929                           
  1930                           ; 2 bytes @ 0x0
  1931  000001                     	ds	2
  1932  000003                     ??_INTERRUPT_InterruptManagerHigh:
  1933  000003                     
  1934                           ; 1 bytes @ 0x2
  1935  000003                     	ds	4
  1936  000007                     ??__T1Interrupt:
  1937  000007                     TMR1_WriteTimer@timerVal:
  1938                           	opt callstack 0
  1939                           
  1940                           ; 2 bytes @ 0x6
  1941  000007                     	ds	2
  1942  000009                     __T1Interrupt@i:
  1943                           	opt callstack 0
  1944                           
  1945                           ; 1 bytes @ 0x8
  1946  000009                     	ds	1
  1947  00000A                     ??_INTERRUPT_InterruptManagerLow:
  1948                           
  1949                           ; 1 bytes @ 0x9
  1950  00000A                     	ds	9
  1951  000013                     ?_strlen:
  1952                           	opt callstack 0
  1953  000013                     ?_isupper:
  1954                           	opt callstack 0
  1955  000013                     ?_isalpha:
  1956                           	opt callstack 0
  1957  000013                     ?_isdigit:
  1958                           	opt callstack 0
  1959  000013                     ?_strncmp:
  1960                           	opt callstack 0
  1961  000013                     ?_isspace:
  1962                           	opt callstack 0
  1963  000013                     ?_strchr:
  1964                           	opt callstack 0
  1965  000013                     ?_isxdigit:
  1966                           	opt callstack 0
  1967  000013                     ?_islower:
  1968                           	opt callstack 0
  1969  000013                     ?___wmul:
  1970                           	opt callstack 0
  1971  000013                     ?_truncf:
  1972                           	opt callstack 0
  1973  000013                     ?___fladd:
  1974                           	opt callstack 0
  1975  000013                     ?_nanf:
  1976                           	opt callstack 0
  1977  000013                     ?___lmul:
  1978                           	opt callstack 0
  1979  000013                     ?___flneg:
  1980                           	opt callstack 0
  1981  000013                     ?___xxtofl:
  1982                           	opt callstack 0
  1983  000013                     ?___aodiv:
  1984                           	opt callstack 0
  1985  000013                     ?___aomod:
  1986                           	opt callstack 0
  1987  000013                     ?___lodiv:
  1988                           	opt callstack 0
  1989  000013                     ?___lomod:
  1990                           	opt callstack 0
  1991  000013                     EUSART2_Write@txData:
  1992                           	opt callstack 0
  1993  000013                     EUSART1_Read@readValue:
  1994                           	opt callstack 0
  1995  000013                     EUSART1_Write@txData:
  1996                           	opt callstack 0
  1997  000013                     TMR0_SetInterruptHandler@InterruptHandler:
  1998                           	opt callstack 0
  1999  000013                     EUSART2_SetTxInterruptHandler@interruptHandler:
  2000                           	opt callstack 0
  2001  000013                     EUSART2_SetRxInterruptHandler@interruptHandler:
  2002                           	opt callstack 0
  2003  000013                     EUSART1_SetTxInterruptHandler@interruptHandler:
  2004                           	opt callstack 0
  2005  000013                     EUSART1_SetRxInterruptHandler@interruptHandler:
  2006                           	opt callstack 0
  2007  000013                     TMR1_SetInterruptHandler@InterruptHandler:
  2008                           	opt callstack 0
  2009  000013                     TMR3_SetInterruptHandler@InterruptHandler:
  2010                           	opt callstack 0
  2011  000013                     INT0_SetInterruptHandler@InterruptHandler:
  2012                           	opt callstack 0
  2013  000013                     INT1_SetInterruptHandler@InterruptHandler:
  2014                           	opt callstack 0
  2015  000013                     INT2_SetInterruptHandler@InterruptHandler:
  2016                           	opt callstack 0
  2017  000013                     INT3_SetInterruptHandler@InterruptHandler:
  2018                           	opt callstack 0
  2019  000013                     StartTimer@count:
  2020                           	opt callstack 0
  2021  000013                     ___wmul@multiplier:
  2022                           	opt callstack 0
  2023  000013                     isalpha@c:
  2024                           	opt callstack 0
  2025  000013                     isdigit@c:
  2026                           	opt callstack 0
  2027  000013                     isspace@c:
  2028                           	opt callstack 0
  2029  000013                     isupper@c:
  2030                           	opt callstack 0
  2031  000013                     strcpy@dest:
  2032                           	opt callstack 0
  2033  000013                     strlen@s:
  2034                           	opt callstack 0
  2035  000013                     strncmp@_l:
  2036                           	opt callstack 0
  2037  000013                     islower@c:
  2038                           	opt callstack 0
  2039  000013                     isxdigit@c:
  2040                           	opt callstack 0
  2041  000013                     nanf@s:
  2042                           	opt callstack 0
  2043  000013                     strchr@s:
  2044                           	opt callstack 0
  2045  000013                     ___lmul@multiplier:
  2046                           	opt callstack 0
  2047  000013                     ___fleq@ff1:
  2048                           	opt callstack 0
  2049  000013                     ___flge@ff1:
  2050                           	opt callstack 0
  2051  000013                     ___flneg@f1:
  2052                           	opt callstack 0
  2053  000013                     ___fladd@b:
  2054                           	opt callstack 0
  2055  000013                     ___xxtofl@val:
  2056                           	opt callstack 0
  2057  000013                     truncf@x:
  2058                           	opt callstack 0
  2059  000013                     ___aodiv@dividend:
  2060                           	opt callstack 0
  2061  000013                     ___aomod@dividend:
  2062                           	opt callstack 0
  2063  000013                     ___lodiv@dividend:
  2064                           	opt callstack 0
  2065  000013                     ___lomod@dividend:
  2066                           	opt callstack 0
  2067                           
  2068                           ; 8 bytes @ 0x12
  2069  000013                     	ds	1
  2070  000014                     putch@txData:
  2071                           	opt callstack 0
  2072  000014                     MC_ReceivePacket@Message:
  2073                           	opt callstack 0
  2074                           
  2075                           ; 2 bytes @ 0x13
  2076  000014                     	ds	1
  2077  000015                     ??_TMR3_Initialize:
  2078  000015                     ??_TMR1_Initialize:
  2079  000015                     ??_isupper:
  2080  000015                     ??_isalpha:
  2081  000015                     ??_isdigit:
  2082  000015                     ??_isspace:
  2083  000015                     ??_isxdigit:
  2084  000015                     ??_islower:
  2085  000015                     ??_TMR0_Initialize:
  2086  000015                     ??_StartTimer:
  2087  000015                     TimerDone@timer:
  2088                           	opt callstack 0
  2089  000015                     ___wmul@multiplicand:
  2090                           	opt callstack 0
  2091  000015                     fputc@c:
  2092                           	opt callstack 0
  2093  000015                     strcpy@src:
  2094                           	opt callstack 0
  2095  000015                     strlen@a:
  2096                           	opt callstack 0
  2097  000015                     strncmp@_r:
  2098                           	opt callstack 0
  2099  000015                     strchr@c:
  2100                           	opt callstack 0
  2101                           
  2102                           ; 2 bytes @ 0x14
  2103  000015                     	ds	1
  2104  000016                     ??_MC_ReceivePacket:
  2105                           
  2106                           ; 1 bytes @ 0x15
  2107  000016                     	ds	1
  2108  000017                     ??_truncf:
  2109  000017                     ??___xxtofl:
  2110  000017                     StartTimer@timer:
  2111                           	opt callstack 0
  2112  000017                     ___wmul@product:
  2113                           	opt callstack 0
  2114  000017                     fputc@fp:
  2115                           	opt callstack 0
  2116  000017                     strcpy@s:
  2117                           	opt callstack 0
  2118  000017                     strncmp@n:
  2119                           	opt callstack 0
  2120  000017                     ___lmul@multiplicand:
  2121                           	opt callstack 0
  2122  000017                     ___fleq@ff2:
  2123                           	opt callstack 0
  2124  000017                     ___flge@ff2:
  2125                           	opt callstack 0
  2126  000017                     ___fladd@a:
  2127                           	opt callstack 0
  2128  000017                     nanf@u:
  2129                           	opt callstack 0
  2130                           
  2131                           ; 4 bytes @ 0x16
  2132  000017                     	ds	1
  2133  000018                     ?_strspn:
  2134                           	opt callstack 0
  2135  000018                     ?_strcspn:
  2136                           	opt callstack 0
  2137  000018                     WaitMs@numMilliseconds:
  2138                           	opt callstack 0
  2139  000018                     strcspn@s:
  2140                           	opt callstack 0
  2141  000018                     strspn@s:
  2142                           	opt callstack 0
  2143                           
  2144                           ; 2 bytes @ 0x17
  2145  000018                     	ds	1
  2146  000019                     ??_fputc:
  2147  000019                     ??_strncmp:
  2148  000019                     ?_toupper:
  2149                           	opt callstack 0
  2150  000019                     _isspace$3561:
  2151                           	opt callstack 0
  2152  000019                     _isxdigit$3792:
  2153                           	opt callstack 0
  2154  000019                     strcpy@d:
  2155                           	opt callstack 0
  2156  000019                     toupper@c:
  2157                           	opt callstack 0
  2158                           
  2159                           ; 2 bytes @ 0x18
  2160  000019                     	ds	1
  2161  00001A                     ?_atoi:
  2162                           	opt callstack 0
  2163  00001A                     MC_SendCommand@data:
  2164                           	opt callstack 0
  2165  00001A                     atoi@s:
  2166                           	opt callstack 0
  2167  00001A                     strncmp@l:
  2168                           	opt callstack 0
  2169  00001A                     strcspn@c:
  2170                           	opt callstack 0
  2171  00001A                     strspn@c:
  2172                           	opt callstack 0
  2173                           
  2174                           ; 2 bytes @ 0x19
  2175  00001A                     	ds	1
  2176  00001B                     ??_toupper:
  2177  00001B                     ??___fladd:
  2178  00001B                     ??___fleq:
  2179  00001B                     ??___flge:
  2180  00001B                     ___xxtofl@sign:
  2181                           	opt callstack 0
  2182  00001B                     ___lmul@product:
  2183                           	opt callstack 0
  2184  00001B                     ___aodiv@divisor:
  2185                           	opt callstack 0
  2186  00001B                     ___aomod@divisor:
  2187                           	opt callstack 0
  2188  00001B                     ___lodiv@divisor:
  2189                           	opt callstack 0
  2190  00001B                     ___lomod@divisor:
  2191                           	opt callstack 0
  2192                           
  2193                           ; 8 bytes @ 0x1A
  2194  00001B                     	ds	1
  2195  00001C                     ??_atoi:
  2196  00001C                     ??_strspn:
  2197  00001C                     ??_strcspn:
  2198  00001C                     MC_SendCommand@wait:
  2199                           	opt callstack 0
  2200  00001C                     ___xxtofl@exp:
  2201                           	opt callstack 0
  2202  00001C                     strncmp@r:
  2203                           	opt callstack 0
  2204                           
  2205                           ; 2 bytes @ 0x1B
  2206  00001C                     	ds	1
  2207  00001D                     MC_SendCommand@i:
  2208                           	opt callstack 0
  2209  00001D                     strcspn@i:
  2210                           	opt callstack 0
  2211  00001D                     strspn@i:
  2212                           	opt callstack 0
  2213  00001D                     ___xxtofl@arg:
  2214                           	opt callstack 0
  2215  00001D                     truncf@m:
  2216                           	opt callstack 0
  2217                           
  2218                           ; 4 bytes @ 0x1C
  2219  00001D                     	ds	1
  2220  00001E                     ?_strstr:
  2221                           	opt callstack 0
  2222  00001E                     ?_stoa:
  2223                           	opt callstack 0
  2224  00001E                     stoa@fp:
  2225                           	opt callstack 0
  2226  00001E                     fputs@s:
  2227                           	opt callstack 0
  2228  00001E                     strstr@h:
  2229                           	opt callstack 0
  2230                           
  2231                           ; 2 bytes @ 0x1D
  2232  00001E                     	ds	1
  2233  00001F                     ?_strtok:
  2234                           	opt callstack 0
  2235  00001F                     ___fladd@signs:
  2236                           	opt callstack 0
  2237  00001F                     strtok@s:
  2238                           	opt callstack 0
  2239  00001F                     _toupper$3759:
  2240                           	opt callstack 0
  2241                           
  2242                           ; 2 bytes @ 0x1E
  2243  00001F                     	ds	1
  2244  000020                     ___fladd@aexp:
  2245                           	opt callstack 0
  2246  000020                     stoa@s:
  2247                           	opt callstack 0
  2248  000020                     atoi@neg:
  2249                           	opt callstack 0
  2250  000020                     fputs@fp:
  2251                           	opt callstack 0
  2252  000020                     strstr@n:
  2253                           	opt callstack 0
  2254                           
  2255                           ; 2 bytes @ 0x1F
  2256  000020                     	ds	1
  2257  000021                     ___fladd@bexp:
  2258                           	opt callstack 0
  2259  000021                     strtok@sep:
  2260                           	opt callstack 0
  2261  000021                     truncf@e:
  2262                           	opt callstack 0
  2263                           
  2264                           ; 2 bytes @ 0x20
  2265  000021                     	ds	1
  2266  000022                     ??_stoa:
  2267  000022                     ___fladd@grs:
  2268                           	opt callstack 0
  2269  000022                     fputs@c:
  2270                           	opt callstack 0
  2271  000022                     _atoi$3534:
  2272                           	opt callstack 0
  2273  000022                     strstr@nl:
  2274                           	opt callstack 0
  2275                           
  2276                           ; 2 bytes @ 0x21
  2277  000022                     	ds	1
  2278  000023                     ?___flsub:
  2279                           	opt callstack 0
  2280  000023                     ___aodiv@counter:
  2281                           	opt callstack 0
  2282  000023                     ___aomod@counter:
  2283                           	opt callstack 0
  2284  000023                     ___lomod@counter:
  2285                           	opt callstack 0
  2286  000023                     fputs@i:
  2287                           	opt callstack 0
  2288  000023                     ___flsub@b:
  2289                           	opt callstack 0
  2290  000023                     truncf@u:
  2291                           	opt callstack 0
  2292  000023                     stoa@nuls:
  2293                           	opt callstack 0
  2294  000023                     ___lodiv@quotient:
  2295                           	opt callstack 0
  2296                           
  2297                           ; 8 bytes @ 0x22
  2298  000023                     	ds	1
  2299  000024                     ___aodiv@sign:
  2300                           	opt callstack 0
  2301  000024                     ___aomod@sign:
  2302                           	opt callstack 0
  2303  000024                     _atoi$3536:
  2304                           	opt callstack 0
  2305                           
  2306                           ; 2 bytes @ 0x23
  2307  000024                     	ds	1
  2308  000025                     ?_abs:
  2309                           	opt callstack 0
  2310  000025                     ?_pad:
  2311                           	opt callstack 0
  2312  000025                     pad@fp:
  2313                           	opt callstack 0
  2314  000025                     abs@a:
  2315                           	opt callstack 0
  2316  000025                     ___aodiv@quotient:
  2317                           	opt callstack 0
  2318                           
  2319                           ; 8 bytes @ 0x24
  2320  000025                     	ds	1
  2321  000026                     _atoi$3535:
  2322                           	opt callstack 0
  2323                           
  2324                           ; 1 bytes @ 0x25
  2325  000026                     	ds	1
  2326  000027                     ??_abs:
  2327  000027                     pad@buf:
  2328                           	opt callstack 0
  2329  000027                     atoi@n:
  2330                           	opt callstack 0
  2331  000027                     ___flsub@a:
  2332                           	opt callstack 0
  2333                           
  2334                           ; 4 bytes @ 0x26
  2335  000027                     	ds	2
  2336  000029                     pad@p:
  2337                           	opt callstack 0
  2338                           
  2339                           ; 2 bytes @ 0x28
  2340  000029                     	ds	1
  2341  00002A                     stoa@i:
  2342                           	opt callstack 0
  2343                           
  2344                           ; 2 bytes @ 0x29
  2345  00002A                     	ds	1
  2346  00002B                     ??_pad:
  2347  00002B                     ?___flmul:
  2348                           	opt callstack 0
  2349  00002B                     ___lodiv@counter:
  2350                           	opt callstack 0
  2351  00002B                     ___flmul@b:
  2352                           	opt callstack 0
  2353                           
  2354                           ; 4 bytes @ 0x2A
  2355  00002B                     	ds	1
  2356  00002C                     pad@i:
  2357                           	opt callstack 0
  2358  00002C                     stoa@w:
  2359                           	opt callstack 0
  2360                           
  2361                           ; 2 bytes @ 0x2B
  2362  00002C                     	ds	2
  2363  00002E                     pad@w:
  2364                           	opt callstack 0
  2365  00002E                     stoa@cp:
  2366                           	opt callstack 0
  2367                           
  2368                           ; 2 bytes @ 0x2D
  2369  00002E                     	ds	1
  2370  00002F                     ___flmul@a:
  2371                           	opt callstack 0
  2372                           
  2373                           ; 4 bytes @ 0x2E
  2374  00002F                     	ds	1
  2375  000030                     ?_ctoa:
  2376                           	opt callstack 0
  2377  000030                     ?_dtoa:
  2378                           	opt callstack 0
  2379  000030                     ?_otoa:
  2380                           	opt callstack 0
  2381  000030                     ?_utoa:
  2382                           	opt callstack 0
  2383  000030                     ?_xtoa:
  2384                           	opt callstack 0
  2385  000030                     ctoa@fp:
  2386                           	opt callstack 0
  2387  000030                     dtoa@fp:
  2388                           	opt callstack 0
  2389  000030                     otoa@fp:
  2390                           	opt callstack 0
  2391  000030                     stoa@p:
  2392                           	opt callstack 0
  2393  000030                     utoa@fp:
  2394                           	opt callstack 0
  2395  000030                     xtoa@fp:
  2396                           	opt callstack 0
  2397                           
  2398                           ; 2 bytes @ 0x2F
  2399  000030                     	ds	2
  2400  000032                     ctoa@c:
  2401                           	opt callstack 0
  2402  000032                     stoa@l:
  2403                           	opt callstack 0
  2404  000032                     dtoa@d:
  2405                           	opt callstack 0
  2406  000032                     otoa@d:
  2407                           	opt callstack 0
  2408  000032                     utoa@d:
  2409                           	opt callstack 0
  2410  000032                     xtoa@d:
  2411                           	opt callstack 0
  2412                           
  2413                           ; 8 bytes @ 0x31
  2414  000032                     	ds	1
  2415  000033                     ??___flmul:
  2416  000033                     ctoa@w:
  2417                           	opt callstack 0
  2418                           
  2419                           ; 2 bytes @ 0x32
  2420  000033                     	ds	4
  2421  000037                     ??___fldiv:
  2422  000037                     ?_roundf:
  2423                           	opt callstack 0
  2424  000037                     roundf@x:
  2425                           	opt callstack 0
  2426                           
  2427                           ; 4 bytes @ 0x36
  2428  000037                     	ds	3
  2429  00003A                     xtoa@x:
  2430                           	opt callstack 0
  2431                           
  2432                           ; 1 bytes @ 0x39
  2433  00003A                     	ds	1
  2434  00003B                     
  2435                           ; 1 bytes @ 0x3A
  2436 ;;
  2437 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2438 ;;
  2439 ;; *************** function _main *****************
  2440 ;; Defined at:
  2441 ;;		line 76 in file "main.c"
  2442 ;; Parameters:    Size  Location     Type
  2443 ;;		None
  2444 ;; Auto vars:     Size  Location     Type
  2445 ;;		None
  2446 ;; Return value:  Size  Location     Type
  2447 ;;                  1    wreg      void 
  2448 ;; Registers used:
  2449 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2450 ;; Tracked objects:
  2451 ;;		On entry : 0/0
  2452 ;;		On exit  : 0/0
  2453 ;;		Unchanged: 0/0
  2454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2459 ;;Total ram usage:        0 bytes
  2460 ;; Hardware stack levels required when called:   19
  2461 ;; This function calls:
  2462 ;;		_APP_Tasks
  2463 ;;		_PIN_MANAGER_IOC
  2464 ;;		_SYSTEM_Initialize
  2465 ;; This function is called by:
  2466 ;;		Startup code after reset
  2467 ;; This function uses a non-reentrant model
  2468 ;;
  2469                           
  2470                           	psect	text0
  2471  005E6C                     __ptext0:
  2472                           	opt callstack 0
  2473  005E6C                     _main:
  2474                           	opt callstack 12
  2475                           
  2476                           ;main.c: 79:  SYSTEM_Initialize();
  2477                           
  2478                           ;incstack = 0
  2479  005E6C  ECBE  F02D         	call	_SYSTEM_Initialize	;wreg free
  2480                           
  2481                           ;main.c: 80:  PIN_MANAGER_IOC();
  2482  005E70  ECBA  F02F         	call	_PIN_MANAGER_IOC	;wreg free
  2483                           
  2484                           ;main.c: 87:  (INTCONbits.GIEH = 1);
  2485  005E74  8EF2               	bsf	4082,7,c	;volatile
  2486                           
  2487                           ;main.c: 90:  (INTCONbits.GIEL = 1);
  2488  005E76  8CF2               	bsf	4082,6,c	;volatile
  2489                           
  2490                           ;main.c: 99:  (INTCONbits.PEIE = 1);
  2491  005E78  8CF2               	bsf	4082,6,c	;volatile
  2492  005E7A                     l11769:
  2493                           
  2494                           ;main.c: 106:   APP_Tasks();
  2495  005E7A  EC3A  F000         	call	_APP_Tasks	;wreg free
  2496  005E7E  D7FD               	goto	l11769
  2497  005E80                     __end_of_main:
  2498                           	opt callstack 0
  2499                           
  2500 ;; *************** function _SYSTEM_Initialize *****************
  2501 ;; Defined at:
  2502 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2503 ;; Parameters:    Size  Location     Type
  2504 ;;		None
  2505 ;; Auto vars:     Size  Location     Type
  2506 ;;		None
  2507 ;; Return value:  Size  Location     Type
  2508 ;;                  1    wreg      void 
  2509 ;; Registers used:
  2510 ;;		wreg, status,2, status,0, cstack
  2511 ;; Tracked objects:
  2512 ;;		On entry : 0/0
  2513 ;;		On exit  : 0/0
  2514 ;;		Unchanged: 0/0
  2515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2520 ;;Total ram usage:        0 bytes
  2521 ;; Hardware stack levels used:    1
  2522 ;; Hardware stack levels required when called:   10
  2523 ;; This function calls:
  2524 ;;		_EUSART1_Initialize
  2525 ;;		_EUSART2_Initialize
  2526 ;;		_EXT_INT_Initialize
  2527 ;;		_INTERRUPT_Initialize
  2528 ;;		_OSCILLATOR_Initialize
  2529 ;;		_PIN_MANAGER_Initialize
  2530 ;;		_SPI_Initialize
  2531 ;;		_TMR0_Initialize
  2532 ;;		_TMR1_Initialize
  2533 ;;		_TMR3_Initialize
  2534 ;; This function is called by:
  2535 ;;		_main
  2536 ;; This function uses a non-reentrant model
  2537 ;;
  2538                           
  2539                           	psect	text1
  2540  005B7C                     __ptext1:
  2541                           	opt callstack 0
  2542  005B7C                     _SYSTEM_Initialize:
  2543                           	opt callstack 20
  2544                           
  2545                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  2546                           
  2547                           ;incstack = 0
  2548  005B7C  EC1E  F02F         	call	_INTERRUPT_Initialize	;wreg free
  2549                           
  2550                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  2551  005B80  ECFF  F02B         	call	_PIN_MANAGER_Initialize	;wreg free
  2552                           
  2553                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  2554  005B84  EC40  F02F         	call	_OSCILLATOR_Initialize	;wreg free
  2555                           
  2556                           ;mcc_generated_files/mcc.c: 56:     SPI_Initialize();
  2557  005B88  EC51  F02F         	call	_SPI_Initialize	;wreg free
  2558                           
  2559                           ;mcc_generated_files/mcc.c: 57:     TMR3_Initialize();
  2560  005B8C  ECC5  F02B         	call	_TMR3_Initialize	;wreg free
  2561                           
  2562                           ;mcc_generated_files/mcc.c: 58:     EXT_INT_Initialize();
  2563  005B90  EC9F  F02A         	call	_EXT_INT_Initialize	;wreg free
  2564                           
  2565                           ;mcc_generated_files/mcc.c: 59:     TMR1_Initialize();
  2566  005B94  ECE2  F02B         	call	_TMR1_Initialize	;wreg free
  2567                           
  2568                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
  2569  005B98  EC2D  F02B         	call	_TMR0_Initialize	;wreg free
  2570                           
  2571                           ;mcc_generated_files/mcc.c: 61:     EUSART1_Initialize();
  2572  005B9C  EC51  F02A         	call	_EUSART1_Initialize	;wreg free
  2573                           
  2574                           ;mcc_generated_files/mcc.c: 62:     EUSART2_Initialize();
  2575  005BA0  EC2A  F02A         	call	_EUSART2_Initialize	;wreg free
  2576  005BA4  0012               	return		;funcret
  2577  005BA6                     __end_of_SYSTEM_Initialize:
  2578                           	opt callstack 0
  2579                           
  2580 ;; *************** function _TMR3_Initialize *****************
  2581 ;; Defined at:
  2582 ;;		line 65 in file "mcc_generated_files/tmr3.c"
  2583 ;; Parameters:    Size  Location     Type
  2584 ;;		None
  2585 ;; Auto vars:     Size  Location     Type
  2586 ;;		None
  2587 ;; Return value:  Size  Location     Type
  2588 ;;                  1    wreg      void 
  2589 ;; Registers used:
  2590 ;;		wreg, status,2, status,0, cstack
  2591 ;; Tracked objects:
  2592 ;;		On entry : 0/0
  2593 ;;		On exit  : 0/0
  2594 ;;		Unchanged: 0/0
  2595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2598 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2599 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2600 ;;Total ram usage:        2 bytes
  2601 ;; Hardware stack levels used:    1
  2602 ;; Hardware stack levels required when called:    9
  2603 ;; This function calls:
  2604 ;;		_TMR3_SetInterruptHandler
  2605 ;; This function is called by:
  2606 ;;		_SYSTEM_Initialize
  2607 ;; This function uses a non-reentrant model
  2608 ;;
  2609                           
  2610                           	psect	text2
  2611  00578A                     __ptext2:
  2612                           	opt callstack 0
  2613  00578A                     _TMR3_Initialize:
  2614                           	opt callstack 20
  2615                           
  2616                           ;mcc_generated_files/tmr3.c: 70:  T3GCON = 0x00;
  2617                           
  2618                           ;incstack = 0
  2619  00578A  0E00               	movlw	0
  2620  00578C  6EB0               	movwf	4016,c	;volatile
  2621                           
  2622                           ;mcc_generated_files/tmr3.c: 73:  TMR3H = 0xF0;
  2623  00578E  0EF0               	movlw	240
  2624  005790  6EB3               	movwf	4019,c	;volatile
  2625                           
  2626                           ;mcc_generated_files/tmr3.c: 76:  TMR3L = 0x60;
  2627  005792  0E60               	movlw	96
  2628  005794  6EB2               	movwf	4018,c	;volatile
  2629                           
  2630                           ;mcc_generated_files/tmr3.c: 79:  timer3ReloadVal = (uint16_t) ((TMR3H << 8) | TMR3L);
  2631  005796  50B2               	movf	4018,w,c	;volatile
  2632  005798  CFB3 F015          	movff	4019,??_TMR3_Initialize	;volatile
  2633  00579C  6A16               	clrf	(??_TMR3_Initialize+1)& (0+255),c
  2634  00579E  C015  F016         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
  2635  0057A2  6A15               	clrf	??_TMR3_Initialize,c
  2636  0057A4  1015               	iorwf	??_TMR3_Initialize,w,c
  2637  0057A6  0101               	movlb	1	; () banked
  2638  0057A8  6FE3               	movwf	_timer3ReloadVal& (0+255),b	;volatile
  2639  0057AA  5016               	movf	??_TMR3_Initialize+1,w,c
  2640  0057AC  6FE4               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
  2641                           
  2642                           ; BSR set to: 1
  2643                           ;mcc_generated_files/tmr3.c: 82:  PIR2bits.TMR3IF = 0;
  2644  0057AE  92A1               	bcf	4001,1,c	;volatile
  2645                           
  2646                           ; BSR set to: 1
  2647                           ;mcc_generated_files/tmr3.c: 85:  PIE2bits.TMR3IE = 1;
  2648  0057B0  82A0               	bsf	4000,1,c	;volatile
  2649                           
  2650                           ; BSR set to: 1
  2651                           ;mcc_generated_files/tmr3.c: 88:  TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandler)
      +                          ;
  2652  0057B2  0ECA               	movlw	low _TMR3_DefaultInterruptHandler
  2653  0057B4  6E13               	movwf	TMR3_SetInterruptHandler@InterruptHandler,c
  2654  0057B6  0E5D               	movlw	high _TMR3_DefaultInterruptHandler
  2655  0057B8  6E14               	movwf	TMR3_SetInterruptHandler@InterruptHandler+1,c
  2656  0057BA  EC5F  F02F         	call	_TMR3_SetInterruptHandler	;wreg free
  2657                           
  2658                           ;mcc_generated_files/tmr3.c: 91:  T3CON = 0x01;
  2659  0057BE  0E01               	movlw	1
  2660  0057C0  6EB1               	movwf	4017,c	;volatile
  2661  0057C2  0012               	return		;funcret
  2662  0057C4                     __end_of_TMR3_Initialize:
  2663                           	opt callstack 0
  2664                           
  2665 ;; *************** function _TMR3_SetInterruptHandler *****************
  2666 ;; Defined at:
  2667 ;;		line 167 in file "mcc_generated_files/tmr3.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;  InterruptHan    2   18[COMRAM] PTR FTN()void 
  2670 ;;		 -> TMR3_DefaultInterruptHandler(1), 
  2671 ;; Auto vars:     Size  Location     Type
  2672 ;;		None
  2673 ;; Return value:  Size  Location     Type
  2674 ;;                  1    wreg      void 
  2675 ;; Registers used:
  2676 ;;		wreg, status,2, status,0
  2677 ;; Tracked objects:
  2678 ;;		On entry : 0/0
  2679 ;;		On exit  : 0/0
  2680 ;;		Unchanged: 0/0
  2681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2682 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2685 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2686 ;;Total ram usage:        2 bytes
  2687 ;; Hardware stack levels used:    1
  2688 ;; Hardware stack levels required when called:    8
  2689 ;; This function calls:
  2690 ;;		Nothing
  2691 ;; This function is called by:
  2692 ;;		_TMR3_Initialize
  2693 ;; This function uses a non-reentrant model
  2694 ;;
  2695                           
  2696                           	psect	text3
  2697  005EBE                     __ptext3:
  2698                           	opt callstack 0
  2699  005EBE                     _TMR3_SetInterruptHandler:
  2700                           	opt callstack 20
  2701                           
  2702                           ;mcc_generated_files/tmr3.c: 167: void TMR3_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr3.c: 168: {;mcc_generated_files/tmr3.c: 169:  TMR3_Inter
      +                          ruptHandler = InterruptHandler;
  2703                           
  2704                           ;incstack = 0
  2705  005EBE  C013  F1E1         	movff	TMR3_SetInterruptHandler@InterruptHandler,_TMR3_InterruptHandler
  2706  005EC2  C014  F1E2         	movff	TMR3_SetInterruptHandler@InterruptHandler+1,_TMR3_InterruptHandler+1
  2707  005EC6  0012               	return		;funcret
  2708  005EC8                     __end_of_TMR3_SetInterruptHandler:
  2709                           	opt callstack 0
  2710                           
  2711 ;; *************** function _TMR1_Initialize *****************
  2712 ;; Defined at:
  2713 ;;		line 65 in file "mcc_generated_files/tmr1.c"
  2714 ;; Parameters:    Size  Location     Type
  2715 ;;		None
  2716 ;; Auto vars:     Size  Location     Type
  2717 ;;		None
  2718 ;; Return value:  Size  Location     Type
  2719 ;;                  1    wreg      void 
  2720 ;; Registers used:
  2721 ;;		wreg, status,2, status,0, cstack
  2722 ;; Tracked objects:
  2723 ;;		On entry : 0/0
  2724 ;;		On exit  : 0/0
  2725 ;;		Unchanged: 0/0
  2726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2729 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2730 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2731 ;;Total ram usage:        2 bytes
  2732 ;; Hardware stack levels used:    1
  2733 ;; Hardware stack levels required when called:    9
  2734 ;; This function calls:
  2735 ;;		_TMR1_SetInterruptHandler
  2736 ;; This function is called by:
  2737 ;;		_SYSTEM_Initialize
  2738 ;; This function uses a non-reentrant model
  2739 ;;
  2740                           
  2741                           	psect	text4
  2742  0057C4                     __ptext4:
  2743                           	opt callstack 0
  2744  0057C4                     _TMR1_Initialize:
  2745                           	opt callstack 20
  2746                           
  2747                           ;mcc_generated_files/tmr1.c: 70:     T1GCON = 0x00;
  2748                           
  2749                           ;incstack = 0
  2750  0057C4  0E00               	movlw	0
  2751  0057C6  6EAA               	movwf	4010,c	;volatile
  2752                           
  2753                           ;mcc_generated_files/tmr1.c: 73:     TMR1H = 0xE0;
  2754  0057C8  0EE0               	movlw	224
  2755  0057CA  6ECF               	movwf	4047,c	;volatile
  2756                           
  2757                           ;mcc_generated_files/tmr1.c: 76:     TMR1L = 0xC0;
  2758  0057CC  0EC0               	movlw	192
  2759  0057CE  6ECE               	movwf	4046,c	;volatile
  2760                           
  2761                           ;mcc_generated_files/tmr1.c: 79:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  2762  0057D0  50CE               	movf	4046,w,c	;volatile
  2763  0057D2  CFCF F015          	movff	4047,??_TMR1_Initialize	;volatile
  2764  0057D6  6A16               	clrf	(??_TMR1_Initialize+1)& (0+255),c
  2765  0057D8  C015  F016         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
  2766  0057DC  6A15               	clrf	??_TMR1_Initialize,c
  2767  0057DE  1015               	iorwf	??_TMR1_Initialize,w,c
  2768  0057E0  0101               	movlb	1	; () banked
  2769  0057E2  6FE7               	movwf	_timer1ReloadVal& (0+255),b	;volatile
  2770  0057E4  5016               	movf	??_TMR1_Initialize+1,w,c
  2771  0057E6  6FE8               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
  2772                           
  2773                           ; BSR set to: 1
  2774                           ;mcc_generated_files/tmr1.c: 82:     PIR1bits.TMR1IF = 0;
  2775  0057E8  909E               	bcf	3998,0,c	;volatile
  2776                           
  2777                           ; BSR set to: 1
  2778                           ;mcc_generated_files/tmr1.c: 85:     PIE1bits.TMR1IE = 1;
  2779  0057EA  809D               	bsf	3997,0,c	;volatile
  2780                           
  2781                           ; BSR set to: 1
  2782                           ;mcc_generated_files/tmr1.c: 88:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  2783  0057EC  0E6E               	movlw	low _TMR1_DefaultInterruptHandler
  2784  0057EE  6E13               	movwf	TMR1_SetInterruptHandler@InterruptHandler,c
  2785  0057F0  0E5F               	movlw	high _TMR1_DefaultInterruptHandler
  2786  0057F2  6E14               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1,c
  2787  0057F4  EC64  F02F         	call	_TMR1_SetInterruptHandler	;wreg free
  2788                           
  2789                           ;mcc_generated_files/tmr1.c: 91:     T1CON = 0x01;
  2790  0057F8  0E01               	movlw	1
  2791  0057FA  6ECD               	movwf	4045,c	;volatile
  2792  0057FC  0012               	return		;funcret
  2793  0057FE                     __end_of_TMR1_Initialize:
  2794                           	opt callstack 0
  2795                           
  2796 ;; *************** function _TMR1_SetInterruptHandler *****************
  2797 ;; Defined at:
  2798 ;;		line 172 in file "mcc_generated_files/tmr1.c"
  2799 ;; Parameters:    Size  Location     Type
  2800 ;;  InterruptHan    2   18[COMRAM] PTR FTN()void 
  2801 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  2802 ;; Auto vars:     Size  Location     Type
  2803 ;;		None
  2804 ;; Return value:  Size  Location     Type
  2805 ;;                  1    wreg      void 
  2806 ;; Registers used:
  2807 ;;		wreg, status,2, status,0
  2808 ;; Tracked objects:
  2809 ;;		On entry : 0/0
  2810 ;;		On exit  : 0/0
  2811 ;;		Unchanged: 0/0
  2812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2813 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2816 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2817 ;;Total ram usage:        2 bytes
  2818 ;; Hardware stack levels used:    1
  2819 ;; Hardware stack levels required when called:    8
  2820 ;; This function calls:
  2821 ;;		Nothing
  2822 ;; This function is called by:
  2823 ;;		_TMR1_Initialize
  2824 ;; This function uses a non-reentrant model
  2825 ;;
  2826                           
  2827                           	psect	text5
  2828  005EC8                     __ptext5:
  2829                           	opt callstack 0
  2830  005EC8                     _TMR1_SetInterruptHandler:
  2831                           	opt callstack 20
  2832                           
  2833                           ;mcc_generated_files/tmr1.c: 173:     TMR1_InterruptHandler = InterruptHandler;
  2834                           
  2835                           ;incstack = 0
  2836  005EC8  C013  F1E5         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  2837  005ECC  C014  F1E6         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  2838  005ED0  0012               	return		;funcret
  2839  005ED2                     __end_of_TMR1_SetInterruptHandler:
  2840                           	opt callstack 0
  2841                           
  2842 ;; *************** function _TMR0_Initialize *****************
  2843 ;; Defined at:
  2844 ;;		line 69 in file "mcc_generated_files/tmr0.c"
  2845 ;; Parameters:    Size  Location     Type
  2846 ;;		None
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;		None
  2849 ;; Return value:  Size  Location     Type
  2850 ;;                  1    wreg      void 
  2851 ;; Registers used:
  2852 ;;		wreg, status,2, status,0, cstack
  2853 ;; Tracked objects:
  2854 ;;		On entry : 0/0
  2855 ;;		On exit  : 0/0
  2856 ;;		Unchanged: 0/0
  2857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2860 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2861 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2862 ;;Total ram usage:        2 bytes
  2863 ;; Hardware stack levels used:    1
  2864 ;; Hardware stack levels required when called:    9
  2865 ;; This function calls:
  2866 ;;		_TMR0_SetInterruptHandler
  2867 ;; This function is called by:
  2868 ;;		_SYSTEM_Initialize
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           	psect	text6
  2873  00565A                     __ptext6:
  2874                           	opt callstack 0
  2875  00565A                     _TMR0_Initialize:
  2876                           	opt callstack 20
  2877                           
  2878                           ;mcc_generated_files/tmr0.c: 74:  T0CONbits.T08BIT = 0;
  2879                           
  2880                           ;incstack = 0
  2881  00565A  9CD5               	bcf	4053,6,c	;volatile
  2882                           
  2883                           ;mcc_generated_files/tmr0.c: 77:  TMR0H = 0xE7;
  2884  00565C  0EE7               	movlw	231
  2885  00565E  6ED7               	movwf	4055,c	;volatile
  2886                           
  2887                           ;mcc_generated_files/tmr0.c: 80:  TMR0L = 0x95;
  2888  005660  0E95               	movlw	149
  2889  005662  6ED6               	movwf	4054,c	;volatile
  2890                           
  2891                           ;mcc_generated_files/tmr0.c: 83:  timer0ReloadVal = 96;
  2892  005664  0E00               	movlw	0
  2893  005666  6E4C               	movwf	_timer0ReloadVal+1,c	;volatile
  2894  005668  0E60               	movlw	96
  2895  00566A  6E4B               	movwf	_timer0ReloadVal,c	;volatile
  2896                           
  2897                           ;mcc_generated_files/tmr0.c: 86:  timer0ReloadVal = (uint16_t) ((TMR0H << 8) | TMR0L);
  2898  00566C  50D6               	movf	4054,w,c	;volatile
  2899  00566E  CFD7 F015          	movff	4055,??_TMR0_Initialize	;volatile
  2900  005672  6A16               	clrf	(??_TMR0_Initialize+1)& (0+255),c
  2901  005674  C015  F016         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  2902  005678  6A15               	clrf	??_TMR0_Initialize,c
  2903  00567A  1015               	iorwf	??_TMR0_Initialize,w,c
  2904  00567C  6E4B               	movwf	_timer0ReloadVal,c	;volatile
  2905  00567E  5016               	movf	??_TMR0_Initialize+1,w,c
  2906  005680  6E4C               	movwf	_timer0ReloadVal+1,c	;volatile
  2907                           
  2908                           ;mcc_generated_files/tmr0.c: 89:  INTCONbits.TMR0IF = 0;
  2909  005682  94F2               	bcf	4082,2,c	;volatile
  2910                           
  2911                           ;mcc_generated_files/tmr0.c: 92:  INTCONbits.TMR0IE = 1;
  2912  005684  8AF2               	bsf	4082,5,c	;volatile
  2913                           
  2914                           ;mcc_generated_files/tmr0.c: 95:  TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler)
      +                          ;
  2915  005686  0E12               	movlw	low _TMR0_DefaultInterruptHandler
  2916  005688  6E13               	movwf	TMR0_SetInterruptHandler@InterruptHandler,c
  2917  00568A  0E57               	movlw	high _TMR0_DefaultInterruptHandler
  2918  00568C  6E14               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1,c
  2919  00568E  EC69  F02F         	call	_TMR0_SetInterruptHandler	;wreg free
  2920                           
  2921                           ;mcc_generated_files/tmr0.c: 98:  T0CON = 0x97;
  2922  005692  0E97               	movlw	151
  2923  005694  6ED5               	movwf	4053,c	;volatile
  2924  005696  0012               	return		;funcret
  2925  005698                     __end_of_TMR0_Initialize:
  2926                           	opt callstack 0
  2927                           
  2928 ;; *************** function _TMR0_SetInterruptHandler *****************
  2929 ;; Defined at:
  2930 ;;		line 158 in file "mcc_generated_files/tmr0.c"
  2931 ;; Parameters:    Size  Location     Type
  2932 ;;  InterruptHan    2   18[COMRAM] PTR FTN()void 
  2933 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  2934 ;; Auto vars:     Size  Location     Type
  2935 ;;		None
  2936 ;; Return value:  Size  Location     Type
  2937 ;;                  1    wreg      void 
  2938 ;; Registers used:
  2939 ;;		wreg, status,2, status,0
  2940 ;; Tracked objects:
  2941 ;;		On entry : 0/0
  2942 ;;		On exit  : 0/0
  2943 ;;		Unchanged: 0/0
  2944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2945 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2948 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2949 ;;Total ram usage:        2 bytes
  2950 ;; Hardware stack levels used:    1
  2951 ;; Hardware stack levels required when called:    8
  2952 ;; This function calls:
  2953 ;;		Nothing
  2954 ;; This function is called by:
  2955 ;;		_TMR0_Initialize
  2956 ;; This function uses a non-reentrant model
  2957 ;;
  2958                           
  2959                           	psect	text7
  2960  005ED2                     __ptext7:
  2961                           	opt callstack 0
  2962  005ED2                     _TMR0_SetInterruptHandler:
  2963                           	opt callstack 20
  2964                           
  2965                           ;mcc_generated_files/tmr0.c: 158: void TMR0_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr0.c: 159: {;mcc_generated_files/tmr0.c: 160:  TMR0_Inter
      +                          ruptHandler = InterruptHandler;
  2966                           
  2967                           ;incstack = 0
  2968  005ED2  C013  F1F1         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  2969  005ED6  C014  F1F2         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  2970  005EDA  0012               	return		;funcret
  2971  005EDC                     __end_of_TMR0_SetInterruptHandler:
  2972                           	opt callstack 0
  2973                           
  2974 ;; *************** function _SPI_Initialize *****************
  2975 ;; Defined at:
  2976 ;;		line 65 in file "mcc_generated_files/spi.c"
  2977 ;; Parameters:    Size  Location     Type
  2978 ;;		None
  2979 ;; Auto vars:     Size  Location     Type
  2980 ;;		None
  2981 ;; Return value:  Size  Location     Type
  2982 ;;                  1    wreg      void 
  2983 ;; Registers used:
  2984 ;;		wreg, status,2
  2985 ;; Tracked objects:
  2986 ;;		On entry : 0/0
  2987 ;;		On exit  : 0/0
  2988 ;;		Unchanged: 0/0
  2989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2994 ;;Total ram usage:        0 bytes
  2995 ;; Hardware stack levels used:    1
  2996 ;; Hardware stack levels required when called:    8
  2997 ;; This function calls:
  2998 ;;		Nothing
  2999 ;; This function is called by:
  3000 ;;		_SYSTEM_Initialize
  3001 ;; This function uses a non-reentrant model
  3002 ;;
  3003                           
  3004                           	psect	text8
  3005  005EA2                     __ptext8:
  3006                           	opt callstack 0
  3007  005EA2                     _SPI_Initialize:
  3008                           	opt callstack 21
  3009                           
  3010                           ;mcc_generated_files/spi.c: 70:     SSPSTAT = 0x00;
  3011                           
  3012                           ;incstack = 0
  3013  005EA2  0E00               	movlw	0
  3014  005EA4  6EC7               	movwf	4039,c	;volatile
  3015                           
  3016                           ;mcc_generated_files/spi.c: 73:     SSPCON1 = 0x20;
  3017  005EA6  0E20               	movlw	32
  3018  005EA8  6EC6               	movwf	4038,c	;volatile
  3019                           
  3020                           ;mcc_generated_files/spi.c: 76:     SSPADD = 0x00;
  3021  005EAA  0E00               	movlw	0
  3022  005EAC  6EC8               	movwf	4040,c	;volatile
  3023  005EAE  0012               	return		;funcret
  3024  005EB0                     __end_of_SPI_Initialize:
  3025                           	opt callstack 0
  3026                           
  3027 ;; *************** function _PIN_MANAGER_Initialize *****************
  3028 ;; Defined at:
  3029 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  3030 ;; Parameters:    Size  Location     Type
  3031 ;;		None
  3032 ;; Auto vars:     Size  Location     Type
  3033 ;;		None
  3034 ;; Return value:  Size  Location     Type
  3035 ;;                  1    wreg      void 
  3036 ;; Registers used:
  3037 ;;		wreg, status,2
  3038 ;; Tracked objects:
  3039 ;;		On entry : 0/0
  3040 ;;		On exit  : 0/0
  3041 ;;		Unchanged: 0/0
  3042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3047 ;;Total ram usage:        0 bytes
  3048 ;; Hardware stack levels used:    1
  3049 ;; Hardware stack levels required when called:    8
  3050 ;; This function calls:
  3051 ;;		Nothing
  3052 ;; This function is called by:
  3053 ;;		_SYSTEM_Initialize
  3054 ;; This function uses a non-reentrant model
  3055 ;;
  3056                           
  3057                           	psect	text9
  3058  0057FE                     __ptext9:
  3059                           	opt callstack 0
  3060  0057FE                     _PIN_MANAGER_Initialize:
  3061                           	opt callstack 21
  3062                           
  3063                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x00;
  3064                           
  3065                           ;incstack = 0
  3066  0057FE  0E00               	movlw	0
  3067  005800  6E8D               	movwf	3981,c	;volatile
  3068                           
  3069                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
  3070  005802  0E00               	movlw	0
  3071  005804  6E8C               	movwf	3980,c	;volatile
  3072                           
  3073                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x0F;
  3074  005806  0E0F               	movlw	15
  3075  005808  6E89               	movwf	3977,c	;volatile
  3076                           
  3077                           ;mcc_generated_files/pin_manager.c: 65:     LATB = 0x00;
  3078  00580A  0E00               	movlw	0
  3079  00580C  6E8A               	movwf	3978,c	;volatile
  3080                           
  3081                           ;mcc_generated_files/pin_manager.c: 66:     LATC = 0x00;
  3082  00580E  0E00               	movlw	0
  3083  005810  6E8B               	movwf	3979,c	;volatile
  3084                           
  3085                           ;mcc_generated_files/pin_manager.c: 71:     TRISE = 0x07;
  3086  005812  0E07               	movlw	7
  3087  005814  6E96               	movwf	3990,c	;volatile
  3088                           
  3089                           ;mcc_generated_files/pin_manager.c: 72:     TRISA = 0x80;
  3090  005816  0E80               	movlw	128
  3091  005818  6E92               	movwf	3986,c	;volatile
  3092                           
  3093                           ;mcc_generated_files/pin_manager.c: 73:     TRISB = 0xFF;
  3094  00581A  6893               	setf	3987,c	;volatile
  3095                           
  3096                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0x97;
  3097  00581C  0E97               	movlw	151
  3098  00581E  6E94               	movwf	3988,c	;volatile
  3099                           
  3100                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0xBF;
  3101  005820  0EBF               	movlw	191
  3102  005822  6E95               	movwf	3989,c	;volatile
  3103                           
  3104                           ;mcc_generated_files/pin_manager.c: 80:     ANCON0 = 0xE0;
  3105  005824  0EE0               	movlw	224
  3106  005826  010F               	movlb	15	; () banked
  3107  005828  6F5D               	movwf	93,b	;volatile
  3108                           
  3109                           ;mcc_generated_files/pin_manager.c: 81:     ANCON1 = 0x7A;
  3110  00582A  0E7A               	movlw	122
  3111  00582C  6F5C               	movwf	92,b	;volatile
  3112                           
  3113                           ;mcc_generated_files/pin_manager.c: 86:     WPUB = 0x01;
  3114  00582E  0E01               	movlw	1
  3115  005830  6F5B               	movwf	91,b	;volatile
  3116                           
  3117                           ; BSR set to: 15
  3118                           ;mcc_generated_files/pin_manager.c: 87:     INTCON2bits.nRBPU = 0;
  3119  005832  9EF1               	bcf	4081,7,c	;volatile
  3120                           
  3121                           ; BSR set to: 15
  3122  005834  0012               	return		;funcret
  3123  005836                     __end_of_PIN_MANAGER_Initialize:
  3124                           	opt callstack 0
  3125                           
  3126 ;; *************** function _OSCILLATOR_Initialize *****************
  3127 ;; Defined at:
  3128 ;;		line 65 in file "mcc_generated_files/mcc.c"
  3129 ;; Parameters:    Size  Location     Type
  3130 ;;		None
  3131 ;; Auto vars:     Size  Location     Type
  3132 ;;		None
  3133 ;; Return value:  Size  Location     Type
  3134 ;;                  1    wreg      void 
  3135 ;; Registers used:
  3136 ;;		wreg, status,2
  3137 ;; Tracked objects:
  3138 ;;		On entry : 0/0
  3139 ;;		On exit  : 0/0
  3140 ;;		Unchanged: 0/0
  3141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3146 ;;Total ram usage:        0 bytes
  3147 ;; Hardware stack levels used:    1
  3148 ;; Hardware stack levels required when called:    8
  3149 ;; This function calls:
  3150 ;;		Nothing
  3151 ;; This function is called by:
  3152 ;;		_SYSTEM_Initialize
  3153 ;; This function uses a non-reentrant model
  3154 ;;
  3155                           
  3156                           	psect	text10
  3157  005E80                     __ptext10:
  3158                           	opt callstack 0
  3159  005E80                     _OSCILLATOR_Initialize:
  3160                           	opt callstack 21
  3161                           
  3162                           ;mcc_generated_files/mcc.c: 68:     OSCCON = 0x70;
  3163                           
  3164                           ; BSR set to: 15
  3165                           ;incstack = 0
  3166  005E80  0E70               	movlw	112
  3167  005E82  6ED3               	movwf	4051,c	;volatile
  3168                           
  3169                           ;mcc_generated_files/mcc.c: 70:     OSCCON2 = 0x00;
  3170  005E84  0E00               	movlw	0
  3171  005E86  6ED2               	movwf	4050,c	;volatile
  3172                           
  3173                           ;mcc_generated_files/mcc.c: 72:     OSCTUNE = 0x40;
  3174  005E88  0E40               	movlw	64
  3175  005E8A  6E9B               	movwf	3995,c	;volatile
  3176                           
  3177                           ;mcc_generated_files/mcc.c: 74:     REFOCON = 0x00;
  3178  005E8C  0E00               	movlw	0
  3179  005E8E  6E9A               	movwf	3994,c	;volatile
  3180  005E90  0012               	return		;funcret
  3181  005E92                     __end_of_OSCILLATOR_Initialize:
  3182                           	opt callstack 0
  3183                           
  3184 ;; *************** function _INTERRUPT_Initialize *****************
  3185 ;; Defined at:
  3186 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3187 ;; Parameters:    Size  Location     Type
  3188 ;;		None
  3189 ;; Auto vars:     Size  Location     Type
  3190 ;;		None
  3191 ;; Return value:  Size  Location     Type
  3192 ;;                  1    wreg      void 
  3193 ;; Registers used:
  3194 ;;		None
  3195 ;; Tracked objects:
  3196 ;;		On entry : 0/0
  3197 ;;		On exit  : 0/0
  3198 ;;		Unchanged: 0/0
  3199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3204 ;;Total ram usage:        0 bytes
  3205 ;; Hardware stack levels used:    1
  3206 ;; Hardware stack levels required when called:    8
  3207 ;; This function calls:
  3208 ;;		Nothing
  3209 ;; This function is called by:
  3210 ;;		_SYSTEM_Initialize
  3211 ;; This function uses a non-reentrant model
  3212 ;;
  3213                           
  3214                           	psect	text11
  3215  005E3C                     __ptext11:
  3216                           	opt callstack 0
  3217  005E3C                     _INTERRUPT_Initialize:
  3218                           	opt callstack 21
  3219                           
  3220                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 1;
  3221                           
  3222                           ;incstack = 0
  3223  005E3C  8ED0               	bsf	4048,7,c	;volatile
  3224                           
  3225                           ;mcc_generated_files/interrupt_manager.c: 60:     INTCON2bits.TMR0IP = 1;
  3226  005E3E  84F1               	bsf	4081,2,c	;volatile
  3227                           
  3228                           ;mcc_generated_files/interrupt_manager.c: 65:     INTCON2bits.INT3IP = 1;
  3229  005E40  82F1               	bsf	4081,1,c	;volatile
  3230                           
  3231                           ;mcc_generated_files/interrupt_manager.c: 68:     INTCON3bits.INT1IP = 1;
  3232  005E42  8CF0               	bsf	4080,6,c	;volatile
  3233                           
  3234                           ;mcc_generated_files/interrupt_manager.c: 71:     INTCON3bits.INT2IP = 1;
  3235  005E44  8EF0               	bsf	4080,7,c	;volatile
  3236                           
  3237                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR3bits.TX2IP = 1;
  3238  005E46  88A5               	bsf	4005,4,c	;volatile
  3239                           
  3240                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR3bits.RC2IP = 1;
  3241  005E48  8AA5               	bsf	4005,5,c	;volatile
  3242                           
  3243                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.TX1IP = 1;
  3244  005E4A  889F               	bsf	3999,4,c	;volatile
  3245                           
  3246                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR1bits.RC1IP = 1;
  3247  005E4C  8A9F               	bsf	3999,5,c	;volatile
  3248                           
  3249                           ;mcc_generated_files/interrupt_manager.c: 86:     IPR2bits.TMR3IP = 1;
  3250  005E4E  82A2               	bsf	4002,1,c	;volatile
  3251                           
  3252                           ;mcc_generated_files/interrupt_manager.c: 90:     IPR1bits.TMR1IP = 0;
  3253  005E50  909F               	bcf	3999,0,c	;volatile
  3254  005E52  0012               	return		;funcret
  3255  005E54                     __end_of_INTERRUPT_Initialize:
  3256                           	opt callstack 0
  3257                           
  3258 ;; *************** function _EXT_INT_Initialize *****************
  3259 ;; Defined at:
  3260 ;;		line 154 in file "mcc_generated_files/ext_int.c"
  3261 ;; Parameters:    Size  Location     Type
  3262 ;;		None
  3263 ;; Auto vars:     Size  Location     Type
  3264 ;;		None
  3265 ;; Return value:  Size  Location     Type
  3266 ;;                  1    wreg      void 
  3267 ;; Registers used:
  3268 ;;		wreg, status,2, status,0, cstack
  3269 ;; Tracked objects:
  3270 ;;		On entry : 0/0
  3271 ;;		On exit  : 0/0
  3272 ;;		Unchanged: 0/0
  3273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3278 ;;Total ram usage:        0 bytes
  3279 ;; Hardware stack levels used:    1
  3280 ;; Hardware stack levels required when called:    9
  3281 ;; This function calls:
  3282 ;;		_INT0_SetInterruptHandler
  3283 ;;		_INT1_SetInterruptHandler
  3284 ;;		_INT2_SetInterruptHandler
  3285 ;;		_INT3_SetInterruptHandler
  3286 ;; This function is called by:
  3287 ;;		_SYSTEM_Initialize
  3288 ;; This function uses a non-reentrant model
  3289 ;;
  3290                           
  3291                           	psect	text12
  3292  00553E                     __ptext12:
  3293                           	opt callstack 0
  3294  00553E                     _EXT_INT_Initialize:
  3295                           	opt callstack 20
  3296                           
  3297                           ;mcc_generated_files/ext_int.c: 159:  (INTCONbits.INT0IF = 0);
  3298                           
  3299                           ;incstack = 0
  3300  00553E  92F2               	bcf	4082,1,c	;volatile
  3301                           
  3302                           ;mcc_generated_files/ext_int.c: 160:  (INTCON2bits.INTEDG0 = 0);
  3303  005540  9CF1               	bcf	4081,6,c	;volatile
  3304                           
  3305                           ;mcc_generated_files/ext_int.c: 162:  INT0_SetInterruptHandler(INT0_DefaultInterruptHand
      +                          ler);
  3306  005542  0E92               	movlw	low _INT0_DefaultInterruptHandler
  3307  005544  6E13               	movwf	INT0_SetInterruptHandler@InterruptHandler,c
  3308  005546  0E5E               	movlw	high _INT0_DefaultInterruptHandler
  3309  005548  6E14               	movwf	INT0_SetInterruptHandler@InterruptHandler+1,c
  3310  00554A  EC7D  F02F         	call	_INT0_SetInterruptHandler	;wreg free
  3311                           
  3312                           ;mcc_generated_files/ext_int.c: 163:  (INTCONbits.INT0IE = 1);
  3313  00554E  88F2               	bsf	4082,4,c	;volatile
  3314                           
  3315                           ;mcc_generated_files/ext_int.c: 168:  (INTCON3bits.INT1IF = 0);
  3316  005550  90F0               	bcf	4080,0,c	;volatile
  3317                           
  3318                           ;mcc_generated_files/ext_int.c: 169:  (INTCON2bits.INTEDG1 = 0);
  3319  005552  9AF1               	bcf	4081,5,c	;volatile
  3320                           
  3321                           ;mcc_generated_files/ext_int.c: 171:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
  3322  005554  0E5E               	movlw	low _INT1_DefaultInterruptHandler
  3323  005556  6E13               	movwf	INT1_SetInterruptHandler@InterruptHandler,c
  3324  005558  0E5F               	movlw	high _INT1_DefaultInterruptHandler
  3325  00555A  6E14               	movwf	INT1_SetInterruptHandler@InterruptHandler+1,c
  3326  00555C  EC78  F02F         	call	_INT1_SetInterruptHandler	;wreg free
  3327                           
  3328                           ;mcc_generated_files/ext_int.c: 172:  (INTCON3bits.INT1IE = 1);
  3329  005560  86F0               	bsf	4080,3,c	;volatile
  3330                           
  3331                           ;mcc_generated_files/ext_int.c: 177:  (INTCON3bits.INT2IF = 0);
  3332  005562  92F0               	bcf	4080,1,c	;volatile
  3333                           
  3334                           ;mcc_generated_files/ext_int.c: 178:  (INTCON2bits.INTEDG2 = 0);
  3335  005564  98F1               	bcf	4081,4,c	;volatile
  3336                           
  3337                           ;mcc_generated_files/ext_int.c: 180:  INT2_SetInterruptHandler(INT2_DefaultInterruptHand
      +                          ler);
  3338  005566  0E4E               	movlw	low _INT2_DefaultInterruptHandler
  3339  005568  6E13               	movwf	INT2_SetInterruptHandler@InterruptHandler,c
  3340  00556A  0E5F               	movlw	high _INT2_DefaultInterruptHandler
  3341  00556C  6E14               	movwf	INT2_SetInterruptHandler@InterruptHandler+1,c
  3342  00556E  EC73  F02F         	call	_INT2_SetInterruptHandler	;wreg free
  3343                           
  3344                           ;mcc_generated_files/ext_int.c: 181:  (INTCON3bits.INT2IE = 1);
  3345  005572  88F0               	bsf	4080,4,c	;volatile
  3346                           
  3347                           ;mcc_generated_files/ext_int.c: 186:  (INTCON3bits.INT3IF = 0);
  3348  005574  94F0               	bcf	4080,2,c	;volatile
  3349                           
  3350                           ;mcc_generated_files/ext_int.c: 187:  (INTCON2bits.INTEDG3 = 0);
  3351  005576  96F1               	bcf	4081,3,c	;volatile
  3352                           
  3353                           ;mcc_generated_files/ext_int.c: 189:  INT3_SetInterruptHandler(INT3_DefaultInterruptHand
      +                          ler);
  3354  005578  0E3E               	movlw	low _INT3_DefaultInterruptHandler
  3355  00557A  6E13               	movwf	INT3_SetInterruptHandler@InterruptHandler,c
  3356  00557C  0E5F               	movlw	high _INT3_DefaultInterruptHandler
  3357  00557E  6E14               	movwf	INT3_SetInterruptHandler@InterruptHandler+1,c
  3358  005580  EC6E  F02F         	call	_INT3_SetInterruptHandler	;wreg free
  3359                           
  3360                           ;mcc_generated_files/ext_int.c: 190:  (INTCON3bits.INT3IE = 1);
  3361  005584  8AF0               	bsf	4080,5,c	;volatile
  3362  005586  0012               	return		;funcret
  3363  005588                     __end_of_EXT_INT_Initialize:
  3364                           	opt callstack 0
  3365                           
  3366 ;; *************** function _INT3_SetInterruptHandler *****************
  3367 ;; Defined at:
  3368 ;;		line 142 in file "mcc_generated_files/ext_int.c"
  3369 ;; Parameters:    Size  Location     Type
  3370 ;;  InterruptHan    2   18[COMRAM] PTR FTN()void 
  3371 ;;		 -> INT3_DefaultInterruptHandler(1), 
  3372 ;; Auto vars:     Size  Location     Type
  3373 ;;		None
  3374 ;; Return value:  Size  Location     Type
  3375 ;;                  1    wreg      void 
  3376 ;; Registers used:
  3377 ;;		wreg, status,2, status,0
  3378 ;; Tracked objects:
  3379 ;;		On entry : 0/0
  3380 ;;		On exit  : 0/0
  3381 ;;		Unchanged: 0/0
  3382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3383 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3386 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3387 ;;Total ram usage:        2 bytes
  3388 ;; Hardware stack levels used:    1
  3389 ;; Hardware stack levels required when called:    8
  3390 ;; This function calls:
  3391 ;;		Nothing
  3392 ;; This function is called by:
  3393 ;;		_EXT_INT_Initialize
  3394 ;; This function uses a non-reentrant model
  3395 ;;
  3396                           
  3397                           	psect	text13
  3398  005EDC                     __ptext13:
  3399                           	opt callstack 0
  3400  005EDC                     _INT3_SetInterruptHandler:
  3401                           	opt callstack 20
  3402                           
  3403                           ;mcc_generated_files/ext_int.c: 142: void INT3_SetInterruptHandler(void (* InterruptHand
      +                          ler)(void));mcc_generated_files/ext_int.c: 143: {;mcc_generated_files/ext_int.c: 144:  I
      +                          NT3_InterruptHandler = InterruptHandler;
  3404                           
  3405                           ;incstack = 0
  3406  005EDC  C013  F1D9         	movff	INT3_SetInterruptHandler@InterruptHandler,_INT3_InterruptHandler
  3407  005EE0  C014  F1DA         	movff	INT3_SetInterruptHandler@InterruptHandler+1,_INT3_InterruptHandler+1
  3408  005EE4  0012               	return		;funcret
  3409  005EE6                     __end_of_INT3_SetInterruptHandler:
  3410                           	opt callstack 0
  3411                           
  3412 ;; *************** function _INT2_SetInterruptHandler *****************
  3413 ;; Defined at:
  3414 ;;		line 114 in file "mcc_generated_files/ext_int.c"
  3415 ;; Parameters:    Size  Location     Type
  3416 ;;  InterruptHan    2   18[COMRAM] PTR FTN()void 
  3417 ;;		 -> INT2_DefaultInterruptHandler(1), 
  3418 ;; Auto vars:     Size  Location     Type
  3419 ;;		None
  3420 ;; Return value:  Size  Location     Type
  3421 ;;                  1    wreg      void 
  3422 ;; Registers used:
  3423 ;;		wreg, status,2, status,0
  3424 ;; Tracked objects:
  3425 ;;		On entry : 0/0
  3426 ;;		On exit  : 0/0
  3427 ;;		Unchanged: 0/0
  3428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3429 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3432 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3433 ;;Total ram usage:        2 bytes
  3434 ;; Hardware stack levels used:    1
  3435 ;; Hardware stack levels required when called:    8
  3436 ;; This function calls:
  3437 ;;		Nothing
  3438 ;; This function is called by:
  3439 ;;		_EXT_INT_Initialize
  3440 ;; This function uses a non-reentrant model
  3441 ;;
  3442                           
  3443                           	psect	text14
  3444  005EE6                     __ptext14:
  3445                           	opt callstack 0
  3446  005EE6                     _INT2_SetInterruptHandler:
  3447                           	opt callstack 20
  3448                           
  3449                           ;mcc_generated_files/ext_int.c: 114: void INT2_SetInterruptHandler(void (* InterruptHand
      +                          ler)(void));mcc_generated_files/ext_int.c: 115: {;mcc_generated_files/ext_int.c: 116:  I
      +                          NT2_InterruptHandler = InterruptHandler;
  3450                           
  3451                           ;incstack = 0
  3452  005EE6  C013  F1DB         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  3453  005EEA  C014  F1DC         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  3454  005EEE  0012               	return		;funcret
  3455  005EF0                     __end_of_INT2_SetInterruptHandler:
  3456                           	opt callstack 0
  3457                           
  3458 ;; *************** function _INT1_SetInterruptHandler *****************
  3459 ;; Defined at:
  3460 ;;		line 86 in file "mcc_generated_files/ext_int.c"
  3461 ;; Parameters:    Size  Location     Type
  3462 ;;  InterruptHan    2   18[COMRAM] PTR FTN()void 
  3463 ;;		 -> INT1_DefaultInterruptHandler(1), 
  3464 ;; Auto vars:     Size  Location     Type
  3465 ;;		None
  3466 ;; Return value:  Size  Location     Type
  3467 ;;                  1    wreg      void 
  3468 ;; Registers used:
  3469 ;;		wreg, status,2, status,0
  3470 ;; Tracked objects:
  3471 ;;		On entry : 0/0
  3472 ;;		On exit  : 0/0
  3473 ;;		Unchanged: 0/0
  3474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3475 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3478 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3479 ;;Total ram usage:        2 bytes
  3480 ;; Hardware stack levels used:    1
  3481 ;; Hardware stack levels required when called:    8
  3482 ;; This function calls:
  3483 ;;		Nothing
  3484 ;; This function is called by:
  3485 ;;		_EXT_INT_Initialize
  3486 ;; This function uses a non-reentrant model
  3487 ;;
  3488                           
  3489                           	psect	text15
  3490  005EF0                     __ptext15:
  3491                           	opt callstack 0
  3492  005EF0                     _INT1_SetInterruptHandler:
  3493                           	opt callstack 20
  3494                           
  3495                           ;mcc_generated_files/ext_int.c: 86: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 87: {;mcc_generated_files/ext_int.c: 88:  INT1
      +                          _InterruptHandler = InterruptHandler;
  3496                           
  3497                           ;incstack = 0
  3498  005EF0  C013  F1DD         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  3499  005EF4  C014  F1DE         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  3500  005EF8  0012               	return		;funcret
  3501  005EFA                     __end_of_INT1_SetInterruptHandler:
  3502                           	opt callstack 0
  3503                           
  3504 ;; *************** function _INT0_SetInterruptHandler *****************
  3505 ;; Defined at:
  3506 ;;		line 54 in file "mcc_generated_files/ext_int.c"
  3507 ;; Parameters:    Size  Location     Type
  3508 ;;  InterruptHan    2   18[COMRAM] PTR FTN()void 
  3509 ;;		 -> INT0_DefaultInterruptHandler(1), 
  3510 ;; Auto vars:     Size  Location     Type
  3511 ;;		None
  3512 ;; Return value:  Size  Location     Type
  3513 ;;                  1    wreg      void 
  3514 ;; Registers used:
  3515 ;;		wreg, status,2, status,0
  3516 ;; Tracked objects:
  3517 ;;		On entry : 0/0
  3518 ;;		On exit  : 0/0
  3519 ;;		Unchanged: 0/0
  3520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3521 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3524 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3525 ;;Total ram usage:        2 bytes
  3526 ;; Hardware stack levels used:    1
  3527 ;; Hardware stack levels required when called:    8
  3528 ;; This function calls:
  3529 ;;		Nothing
  3530 ;; This function is called by:
  3531 ;;		_EXT_INT_Initialize
  3532 ;; This function uses a non-reentrant model
  3533 ;;
  3534                           
  3535                           	psect	text16
  3536  005EFA                     __ptext16:
  3537                           	opt callstack 0
  3538  005EFA                     _INT0_SetInterruptHandler:
  3539                           	opt callstack 20
  3540                           
  3541                           ;mcc_generated_files/ext_int.c: 54: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 55: {;mcc_generated_files/ext_int.c: 56:  INT0
      +                          _InterruptHandler = InterruptHandler;
  3542                           
  3543                           ;incstack = 0
  3544  005EFA  C013  F1DF         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  3545  005EFE  C014  F1E0         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  3546  005F02  0012               	return		;funcret
  3547  005F04                     __end_of_INT0_SetInterruptHandler:
  3548                           	opt callstack 0
  3549                           
  3550 ;; *************** function _EUSART2_Initialize *****************
  3551 ;; Defined at:
  3552 ;;		line 75 in file "mcc_generated_files/eusart2.c"
  3553 ;; Parameters:    Size  Location     Type
  3554 ;;		None
  3555 ;; Auto vars:     Size  Location     Type
  3556 ;;		None
  3557 ;; Return value:  Size  Location     Type
  3558 ;;                  1    wreg      void 
  3559 ;; Registers used:
  3560 ;;		wreg, status,2, status,0, cstack
  3561 ;; Tracked objects:
  3562 ;;		On entry : 0/0
  3563 ;;		On exit  : 0/0
  3564 ;;		Unchanged: 0/0
  3565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3570 ;;Total ram usage:        0 bytes
  3571 ;; Hardware stack levels used:    1
  3572 ;; Hardware stack levels required when called:    9
  3573 ;; This function calls:
  3574 ;;		_EUSART2_SetRxInterruptHandler
  3575 ;;		_EUSART2_SetTxInterruptHandler
  3576 ;; This function is called by:
  3577 ;;		_SYSTEM_Initialize
  3578 ;; This function uses a non-reentrant model
  3579 ;;
  3580                           
  3581                           	psect	text17
  3582  005454                     __ptext17:
  3583                           	opt callstack 0
  3584  005454                     _EUSART2_Initialize:
  3585                           	opt callstack 20
  3586                           
  3587                           ;mcc_generated_files/eusart2.c: 78:     PIE3bits.RC2IE = 0;
  3588                           
  3589                           ;incstack = 0
  3590  005454  9AA3               	bcf	4003,5,c	;volatile
  3591                           
  3592                           ;mcc_generated_files/eusart2.c: 79:     EUSART2_SetRxInterruptHandler(EUSART2_Receive_IS
      +                          R);
  3593  005456  0E20               	movlw	low _EUSART2_Receive_ISR
  3594  005458  6E13               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler,c
  3595  00545A  0E5C               	movlw	high _EUSART2_Receive_ISR
  3596  00545C  6E14               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler+1,c
  3597  00545E  EC87  F02F         	call	_EUSART2_SetRxInterruptHandler	;wreg free
  3598                           
  3599                           ;mcc_generated_files/eusart2.c: 80:     PIE3bits.TX2IE = 0;
  3600  005462  98A3               	bcf	4003,4,c	;volatile
  3601                           
  3602                           ;mcc_generated_files/eusart2.c: 81:     EUSART2_SetTxInterruptHandler(EUSART2_Transmit_I
      +                          SR);
  3603  005464  0E24               	movlw	low _EUSART2_Transmit_ISR
  3604  005466  6E13               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler,c
  3605  005468  0E5B               	movlw	high _EUSART2_Transmit_ISR
  3606  00546A  6E14               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler+1,c
  3607  00546C  EC82  F02F         	call	_EUSART2_SetTxInterruptHandler	;wreg free
  3608                           
  3609                           ;mcc_generated_files/eusart2.c: 85:     BAUDCON2 = 0x08;
  3610  005470  0E08               	movlw	8
  3611  005472  6EB9               	movwf	4025,c	;volatile
  3612                           
  3613                           ;mcc_generated_files/eusart2.c: 88:     RCSTA2 = 0x90;
  3614  005474  0E90               	movlw	144
  3615  005476  6EA6               	movwf	4006,c	;volatile
  3616                           
  3617                           ;mcc_generated_files/eusart2.c: 91:     TXSTA2 = 0x26;
  3618  005478  0E26               	movlw	38
  3619  00547A  6EBA               	movwf	4026,c	;volatile
  3620                           
  3621                           ;mcc_generated_files/eusart2.c: 94:     SPBRG2 = 0x82;
  3622  00547C  0E82               	movlw	130
  3623  00547E  6E7B               	movwf	3963,c	;volatile
  3624                           
  3625                           ;mcc_generated_files/eusart2.c: 97:     SPBRGH2 = 0x06;
  3626  005480  0E06               	movlw	6
  3627  005482  6E7C               	movwf	3964,c	;volatile
  3628                           
  3629                           ;mcc_generated_files/eusart2.c: 101:     eusart2TxHead = 0;
  3630  005484  0E00               	movlw	0
  3631  005486  6E4A               	movwf	_eusart2TxHead,c	;volatile
  3632                           
  3633                           ;mcc_generated_files/eusart2.c: 102:     eusart2TxTail = 0;
  3634  005488  0E00               	movlw	0
  3635  00548A  6E49               	movwf	_eusart2TxTail,c	;volatile
  3636                           
  3637                           ;mcc_generated_files/eusart2.c: 103:     eusart2TxBufferRemaining = sizeof(eusart2TxBuff
      +                          er);
  3638  00548C  0E40               	movlw	64
  3639  00548E  0100               	movlb	0	; () banked
  3640  005490  6FCB               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
  3641                           
  3642                           ; BSR set to: 0
  3643                           ;mcc_generated_files/eusart2.c: 105:     eusart2RxHead = 0;
  3644  005492  0E00               	movlw	0
  3645  005494  6E48               	movwf	_eusart2RxHead,c	;volatile
  3646                           
  3647                           ; BSR set to: 0
  3648                           ;mcc_generated_files/eusart2.c: 106:     eusart2RxTail = 0;
  3649  005496  0E00               	movlw	0
  3650  005498  6E47               	movwf	_eusart2RxTail,c	;volatile
  3651                           
  3652                           ; BSR set to: 0
  3653                           ;mcc_generated_files/eusart2.c: 107:     eusart2RxCount = 0;
  3654  00549A  0E00               	movlw	0
  3655  00549C  6E46               	movwf	_eusart2RxCount,c	;volatile
  3656                           
  3657                           ; BSR set to: 0
  3658                           ;mcc_generated_files/eusart2.c: 110:     PIE3bits.RC2IE = 1;
  3659  00549E  8AA3               	bsf	4003,5,c	;volatile
  3660                           
  3661                           ; BSR set to: 0
  3662  0054A0  0012               	return		;funcret
  3663  0054A2                     __end_of_EUSART2_Initialize:
  3664                           	opt callstack 0
  3665                           
  3666 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
  3667 ;; Defined at:
  3668 ;;		line 220 in file "mcc_generated_files/eusart2.c"
  3669 ;; Parameters:    Size  Location     Type
  3670 ;;  interruptHan    2   18[COMRAM] PTR FTN()void 
  3671 ;;		 -> EUSART2_Transmit_ISR(1), 
  3672 ;; Auto vars:     Size  Location     Type
  3673 ;;		None
  3674 ;; Return value:  Size  Location     Type
  3675 ;;                  1    wreg      void 
  3676 ;; Registers used:
  3677 ;;		wreg, status,2, status,0
  3678 ;; Tracked objects:
  3679 ;;		On entry : 0/0
  3680 ;;		On exit  : 0/0
  3681 ;;		Unchanged: 0/0
  3682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3683 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3686 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3687 ;;Total ram usage:        2 bytes
  3688 ;; Hardware stack levels used:    1
  3689 ;; Hardware stack levels required when called:    8
  3690 ;; This function calls:
  3691 ;;		Nothing
  3692 ;; This function is called by:
  3693 ;;		_EUSART2_Initialize
  3694 ;; This function uses a non-reentrant model
  3695 ;;
  3696                           
  3697                           	psect	text18
  3698  005F04                     __ptext18:
  3699                           	opt callstack 0
  3700  005F04                     _EUSART2_SetTxInterruptHandler:
  3701                           	opt callstack 20
  3702                           
  3703                           ;mcc_generated_files/eusart2.c: 221:     EUSART2_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  3704                           
  3705                           ; BSR set to: 0
  3706                           ;incstack = 0
  3707  005F04  C013  F1EF         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
  3708  005F08  C014  F1F0         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
  3709  005F0C  0012               	return		;funcret
  3710  005F0E                     __end_of_EUSART2_SetTxInterruptHandler:
  3711                           	opt callstack 0
  3712                           
  3713 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
  3714 ;; Defined at:
  3715 ;;		line 224 in file "mcc_generated_files/eusart2.c"
  3716 ;; Parameters:    Size  Location     Type
  3717 ;;  interruptHan    2   18[COMRAM] PTR FTN()void 
  3718 ;;		 -> EUSART2_Receive_ISR(1), 
  3719 ;; Auto vars:     Size  Location     Type
  3720 ;;		None
  3721 ;; Return value:  Size  Location     Type
  3722 ;;                  1    wreg      void 
  3723 ;; Registers used:
  3724 ;;		wreg, status,2, status,0
  3725 ;; Tracked objects:
  3726 ;;		On entry : 0/0
  3727 ;;		On exit  : 0/0
  3728 ;;		Unchanged: 0/0
  3729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3730 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3733 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3734 ;;Total ram usage:        2 bytes
  3735 ;; Hardware stack levels used:    1
  3736 ;; Hardware stack levels required when called:    8
  3737 ;; This function calls:
  3738 ;;		Nothing
  3739 ;; This function is called by:
  3740 ;;		_EUSART2_Initialize
  3741 ;; This function uses a non-reentrant model
  3742 ;;
  3743                           
  3744                           	psect	text19
  3745  005F0E                     __ptext19:
  3746                           	opt callstack 0
  3747  005F0E                     _EUSART2_SetRxInterruptHandler:
  3748                           	opt callstack 20
  3749                           
  3750                           ;mcc_generated_files/eusart2.c: 225:     EUSART2_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  3751                           
  3752                           ;incstack = 0
  3753  005F0E  C013  F1ED         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
  3754  005F12  C014  F1EE         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
  3755  005F16  0012               	return		;funcret
  3756  005F18                     __end_of_EUSART2_SetRxInterruptHandler:
  3757                           	opt callstack 0
  3758                           
  3759 ;; *************** function _EUSART1_Initialize *****************
  3760 ;; Defined at:
  3761 ;;		line 77 in file "mcc_generated_files/eusart1.c"
  3762 ;; Parameters:    Size  Location     Type
  3763 ;;		None
  3764 ;; Auto vars:     Size  Location     Type
  3765 ;;		None
  3766 ;; Return value:  Size  Location     Type
  3767 ;;                  1    wreg      void 
  3768 ;; Registers used:
  3769 ;;		wreg, status,2, status,0, cstack
  3770 ;; Tracked objects:
  3771 ;;		On entry : 0/0
  3772 ;;		On exit  : 0/0
  3773 ;;		Unchanged: 0/0
  3774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3779 ;;Total ram usage:        0 bytes
  3780 ;; Hardware stack levels used:    1
  3781 ;; Hardware stack levels required when called:    9
  3782 ;; This function calls:
  3783 ;;		_EUSART1_SetRxInterruptHandler
  3784 ;;		_EUSART1_SetTxInterruptHandler
  3785 ;; This function is called by:
  3786 ;;		_SYSTEM_Initialize
  3787 ;; This function uses a non-reentrant model
  3788 ;;
  3789                           
  3790                           	psect	text20
  3791  0054A2                     __ptext20:
  3792                           	opt callstack 0
  3793  0054A2                     _EUSART1_Initialize:
  3794                           	opt callstack 20
  3795                           
  3796                           ;mcc_generated_files/eusart1.c: 80:  PIE1bits.RC1IE = 0;
  3797                           
  3798                           ;incstack = 0
  3799  0054A2  9A9D               	bcf	3997,5,c	;volatile
  3800                           
  3801                           ;mcc_generated_files/eusart1.c: 81:  EUSART1_SetRxInterruptHandler(EUSART1_Receive_ISR);
  3802  0054A4  0E4E               	movlw	low _EUSART1_Receive_ISR
  3803  0054A6  6E13               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler,c
  3804  0054A8  0E57               	movlw	high _EUSART1_Receive_ISR
  3805  0054AA  6E14               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1,c
  3806  0054AC  EC91  F02F         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  3807                           
  3808                           ;mcc_generated_files/eusart1.c: 82:  PIE1bits.TX1IE = 0;
  3809  0054B0  989D               	bcf	3997,4,c	;volatile
  3810                           
  3811                           ;mcc_generated_files/eusart1.c: 83:  EUSART1_SetTxInterruptHandler(EUSART1_Transmit_ISR)
      +                          ;
  3812  0054B2  0E50               	movlw	low _EUSART1_Transmit_ISR
  3813  0054B4  6E13               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler,c
  3814  0054B6  0E5B               	movlw	high _EUSART1_Transmit_ISR
  3815  0054B8  6E14               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1,c
  3816  0054BA  EC8C  F02F         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  3817                           
  3818                           ;mcc_generated_files/eusart1.c: 87:  BAUDCON1 = 0x08;
  3819  0054BE  0E08               	movlw	8
  3820  0054C0  6EA7               	movwf	4007,c	;volatile
  3821                           
  3822                           ;mcc_generated_files/eusart1.c: 90:  RCSTA1 = 0x90;
  3823  0054C2  0E90               	movlw	144
  3824  0054C4  6EAB               	movwf	4011,c	;volatile
  3825                           
  3826                           ;mcc_generated_files/eusart1.c: 93:  TXSTA1 = 0x24;
  3827  0054C6  0E24               	movlw	36
  3828  0054C8  6EAC               	movwf	4012,c	;volatile
  3829                           
  3830                           ;mcc_generated_files/eusart1.c: 96:  SPBRG1 = 0x82;
  3831  0054CA  0E82               	movlw	130
  3832  0054CC  6EAF               	movwf	4015,c	;volatile
  3833                           
  3834                           ;mcc_generated_files/eusart1.c: 99:  SPBRGH1 = 0x06;
  3835  0054CE  0E06               	movlw	6
  3836  0054D0  6E7D               	movwf	3965,c	;volatile
  3837                           
  3838                           ;mcc_generated_files/eusart1.c: 103:  eusart1TxHead = 0;
  3839  0054D2  0E00               	movlw	0
  3840  0054D4  6E45               	movwf	_eusart1TxHead,c	;volatile
  3841                           
  3842                           ;mcc_generated_files/eusart1.c: 104:  eusart1TxTail = 0;
  3843  0054D6  0E00               	movlw	0
  3844  0054D8  6E44               	movwf	_eusart1TxTail,c	;volatile
  3845                           
  3846                           ;mcc_generated_files/eusart1.c: 105:  eusart1TxBufferRemaining = sizeof(eusart1TxBuffer)
      +                          ;
  3847  0054DA  0E40               	movlw	64
  3848  0054DC  0100               	movlb	0	; () banked
  3849  0054DE  6FCA               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
  3850                           
  3851                           ; BSR set to: 0
  3852                           ;mcc_generated_files/eusart1.c: 107:  eusart1RxHead = 0;
  3853  0054E0  0E00               	movlw	0
  3854  0054E2  6E43               	movwf	_eusart1RxHead,c	;volatile
  3855                           
  3856                           ; BSR set to: 0
  3857                           ;mcc_generated_files/eusart1.c: 108:  eusart1RxTail = 0;
  3858  0054E4  0E00               	movlw	0
  3859  0054E6  6E42               	movwf	_eusart1RxTail,c	;volatile
  3860                           
  3861                           ; BSR set to: 0
  3862                           ;mcc_generated_files/eusart1.c: 109:  eusart1RxCount = 0;
  3863  0054E8  0E00               	movlw	0
  3864  0054EA  6E41               	movwf	_eusart1RxCount,c	;volatile
  3865                           
  3866                           ; BSR set to: 0
  3867                           ;mcc_generated_files/eusart1.c: 112:  PIE1bits.RC1IE = 1;
  3868  0054EC  8A9D               	bsf	3997,5,c	;volatile
  3869                           
  3870                           ; BSR set to: 0
  3871  0054EE  0012               	return		;funcret
  3872  0054F0                     __end_of_EUSART1_Initialize:
  3873                           	opt callstack 0
  3874                           
  3875 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  3876 ;; Defined at:
  3877 ;;		line 210 in file "mcc_generated_files/eusart1.c"
  3878 ;; Parameters:    Size  Location     Type
  3879 ;;  interruptHan    2   18[COMRAM] PTR FTN()void 
  3880 ;;		 -> EUSART1_Transmit_ISR(1), 
  3881 ;; Auto vars:     Size  Location     Type
  3882 ;;		None
  3883 ;; Return value:  Size  Location     Type
  3884 ;;                  1    wreg      void 
  3885 ;; Registers used:
  3886 ;;		wreg, status,2, status,0
  3887 ;; Tracked objects:
  3888 ;;		On entry : 0/0
  3889 ;;		On exit  : 0/0
  3890 ;;		Unchanged: 0/0
  3891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3892 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3895 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3896 ;;Total ram usage:        2 bytes
  3897 ;; Hardware stack levels used:    1
  3898 ;; Hardware stack levels required when called:    8
  3899 ;; This function calls:
  3900 ;;		Nothing
  3901 ;; This function is called by:
  3902 ;;		_EUSART1_Initialize
  3903 ;; This function uses a non-reentrant model
  3904 ;;
  3905                           
  3906                           	psect	text21
  3907  005F18                     __ptext21:
  3908                           	opt callstack 0
  3909  005F18                     _EUSART1_SetTxInterruptHandler:
  3910                           	opt callstack 20
  3911                           
  3912                           ;mcc_generated_files/eusart1.c: 210: void EUSART1_SetTxInterruptHandler(void (* interrup
      +                          tHandler)(void));mcc_generated_files/eusart1.c: 211: {;mcc_generated_files/eusart1.c: 21
      +                          2:  EUSART1_TxDefaultInterruptHandler = interruptHandler;
  3913                           
  3914                           ; BSR set to: 0
  3915                           ;incstack = 0
  3916  005F18  C013  F1EB         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  3917  005F1C  C014  F1EC         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  3918  005F20  0012               	return		;funcret
  3919  005F22                     __end_of_EUSART1_SetTxInterruptHandler:
  3920                           	opt callstack 0
  3921                           
  3922 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  3923 ;; Defined at:
  3924 ;;		line 215 in file "mcc_generated_files/eusart1.c"
  3925 ;; Parameters:    Size  Location     Type
  3926 ;;  interruptHan    2   18[COMRAM] PTR FTN()void 
  3927 ;;		 -> EUSART1_Receive_ISR(1), 
  3928 ;; Auto vars:     Size  Location     Type
  3929 ;;		None
  3930 ;; Return value:  Size  Location     Type
  3931 ;;                  1    wreg      void 
  3932 ;; Registers used:
  3933 ;;		wreg, status,2, status,0
  3934 ;; Tracked objects:
  3935 ;;		On entry : 0/0
  3936 ;;		On exit  : 0/0
  3937 ;;		Unchanged: 0/0
  3938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3939 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3942 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3943 ;;Total ram usage:        2 bytes
  3944 ;; Hardware stack levels used:    1
  3945 ;; Hardware stack levels required when called:    8
  3946 ;; This function calls:
  3947 ;;		Nothing
  3948 ;; This function is called by:
  3949 ;;		_EUSART1_Initialize
  3950 ;; This function uses a non-reentrant model
  3951 ;;
  3952                           
  3953                           	psect	text22
  3954  005F22                     __ptext22:
  3955                           	opt callstack 0
  3956  005F22                     _EUSART1_SetRxInterruptHandler:
  3957                           	opt callstack 20
  3958                           
  3959                           ;mcc_generated_files/eusart1.c: 215: void EUSART1_SetRxInterruptHandler(void (* interrup
      +                          tHandler)(void));mcc_generated_files/eusart1.c: 216: {;mcc_generated_files/eusart1.c: 21
      +                          7:  EUSART1_RxDefaultInterruptHandler = interruptHandler;
  3960                           
  3961                           ;incstack = 0
  3962  005F22  C013  F1E9         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  3963  005F26  C014  F1EA         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  3964  005F2A  0012               	return		;funcret
  3965  005F2C                     __end_of_EUSART1_SetRxInterruptHandler:
  3966                           	opt callstack 0
  3967                           
  3968 ;; *************** function _PIN_MANAGER_IOC *****************
  3969 ;; Defined at:
  3970 ;;		line 99 in file "mcc_generated_files/pin_manager.c"
  3971 ;; Parameters:    Size  Location     Type
  3972 ;;		None
  3973 ;; Auto vars:     Size  Location     Type
  3974 ;;		None
  3975 ;; Return value:  Size  Location     Type
  3976 ;;                  1    wreg      void 
  3977 ;; Registers used:
  3978 ;;		None
  3979 ;; Tracked objects:
  3980 ;;		On entry : 0/0
  3981 ;;		On exit  : 0/0
  3982 ;;		Unchanged: 0/0
  3983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3988 ;;Total ram usage:        0 bytes
  3989 ;; Hardware stack levels used:    1
  3990 ;; Hardware stack levels required when called:    8
  3991 ;; This function calls:
  3992 ;;		Nothing
  3993 ;; This function is called by:
  3994 ;;		_main
  3995 ;; This function uses a non-reentrant model
  3996 ;;
  3997                           
  3998                           	psect	text23
  3999  005F74                     __ptext23:
  4000                           	opt callstack 0
  4001  005F74                     _PIN_MANAGER_IOC:
  4002                           	opt callstack 22
  4003                           
  4004                           ;mcc_generated_files/pin_manager.c: 102:     INTCONbits.RBIF = 0;
  4005                           
  4006                           ;incstack = 0
  4007  005F74  90F2               	bcf	4082,0,c	;volatile
  4008  005F76  0012               	return		;funcret
  4009  005F78                     __end_of_PIN_MANAGER_IOC:
  4010                           	opt callstack 0
  4011                           
  4012 ;; *************** function _APP_Tasks *****************
  4013 ;; Defined at:
  4014 ;;		line 67 in file "app.c"
  4015 ;; Parameters:    Size  Location     Type
  4016 ;;		None
  4017 ;; Auto vars:     Size  Location     Type
  4018 ;;  offset          2   93[BANK0 ] short 
  4019 ;;  c_down          1   95[BANK0 ] unsigned char 
  4020 ;; Return value:  Size  Location     Type
  4021 ;;                  1    wreg      void 
  4022 ;; Registers used:
  4023 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4024 ;; Tracked objects:
  4025 ;;		On entry : 0/0
  4026 ;;		On exit  : 0/0
  4027 ;;		Unchanged: 0/0
  4028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4030 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4031 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4032 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4033 ;;Total ram usage:        5 bytes
  4034 ;; Hardware stack levels used:    1
  4035 ;; Hardware stack levels required when called:   18
  4036 ;; This function calls:
  4037 ;;		_APP_Initialize
  4038 ;;		_MC_ReceivePacket
  4039 ;;		_MC_SendCommand
  4040 ;;		_StartTimer
  4041 ;;		_TMR3_StartTimer
  4042 ;;		_TMR3_StopTimer
  4043 ;;		_TimerDone
  4044 ;;		_WaitMs
  4045 ;;		_clear_MC_port
  4046 ;;		_display_ea_cursor_off
  4047 ;;		_display_ea_ff
  4048 ;;		_display_ea_init
  4049 ;;		_display_ea_line
  4050 ;;		_display_ea_version
  4051 ;;		_get_pfb
  4052 ;;		_sprintf
  4053 ;;		_strstr
  4054 ;; This function is called by:
  4055 ;;		_main
  4056 ;; This function uses a non-reentrant model
  4057 ;;
  4058                           
  4059                           	psect	text24
  4060  000074                     __ptext24:
  4061                           	opt callstack 0
  4062  000074                     _APP_Tasks:
  4063                           	opt callstack 12
  4064                           
  4065                           ;app.c: 69:  static char mc_response[64 + 2];;app.c: 70:  int16_t offset;;app.c: 71:  ui
      +                          nt8_t c_down;;app.c: 72:  static char *m_start;;app.c: 74:  if (TimerDone(TMR_LEDS)) {
  4066                           
  4067                           ;incstack = 0
  4068  000074  0E01               	movlw	1
  4069  000076  EC90  F02E         	call	_TimerDone
  4070  00007A  0900               	iorlw	0
  4071  00007C  B4D8               	btfsc	status,2,c
  4072  00007E  EF75  F007         	goto	l11727
  4073                           
  4074                           ;app.c: 75:   LATAbits.LATA0 ^= 1;
  4075  000082  7089               	btg	3977,0,c	;volatile
  4076                           
  4077                           ;app.c: 76:   StartTimer(TMR_LEDS, 900);
  4078  000084  0E03               	movlw	3
  4079  000086  6E14               	movwf	StartTimer@count+1,c
  4080  000088  0E84               	movlw	132
  4081  00008A  6E13               	movwf	StartTimer@count,c
  4082  00008C  0E01               	movlw	1
  4083  00008E  ECD3  F02D         	call	_StartTimer
  4084  000092  EF75  F007         	goto	l11727
  4085  000096                     l11409:
  4086                           
  4087                           ; BSR set to: 0
  4088                           ;app.c: 82:   if (APP_Initialize()) {
  4089  000096  EC58  F02F         	call	_APP_Initialize	;wreg free
  4090  00009A  0900               	iorlw	0
  4091  00009C  B4D8               	btfsc	status,2,c
  4092  00009E  D02A               	goto	l11425
  4093                           
  4094                           ;app.c: 83:    appData.state = APP_CONNECT;
  4095  0000A0  0E02               	movlw	2
  4096  0000A2  0101               	movlb	1	; () banked
  4097  0000A4  6F8D               	movwf	_appData& (0+255),b	;volatile
  4098                           
  4099                           ; BSR set to: 1
  4100                           ;app.c: 84:    display_ea_init(700);
  4101  0000A6  0E02               	movlw	2
  4102  0000A8  0100               	movlb	0	; () banked
  4103  0000AA  6FB2               	movwf	(display_ea_init@pause+1)& (0+255),b
  4104  0000AC  0EBC               	movlw	188
  4105  0000AE  6FB1               	movwf	display_ea_init@pause& (0+255),b
  4106  0000B0  EC49  F02E         	call	_display_ea_init	;wreg free
  4107                           
  4108                           ;app.c: 85:    TMR3_StopTimer();
  4109  0000B4  ECBC  F02F         	call	_TMR3_StopTimer	;wreg free
  4110                           
  4111                           ;app.c: 86:    display_ea_ff(1);
  4112  0000B8  0E00               	movlw	0
  4113  0000BA  0100               	movlb	0	; () banked
  4114  0000BC  6FB2               	movwf	(display_ea_ff@pause+1)& (0+255),b
  4115  0000BE  0E01               	movlw	1
  4116  0000C0  6FB1               	movwf	display_ea_ff@pause& (0+255),b
  4117  0000C2  EC5B  F02E         	call	_display_ea_ff	;wreg free
  4118                           
  4119                           ;app.c: 87:    display_ea_cursor_off(1);
  4120  0000C6  0E00               	movlw	0
  4121  0000C8  0100               	movlb	0	; () banked
  4122  0000CA  6FB2               	movwf	(display_ea_cursor_off@pause+1)& (0+255),b
  4123  0000CC  0E01               	movlw	1
  4124  0000CE  6FB1               	movwf	display_ea_cursor_off@pause& (0+255),b
  4125  0000D0  EC6D  F02E         	call	_display_ea_cursor_off	;wreg free
  4126                           
  4127                           ;app.c: 88:    display_ea_version(1000);
  4128  0000D4  0E03               	movlw	3
  4129  0000D6  0100               	movlb	0	; () banked
  4130  0000D8  6FB2               	movwf	(display_ea_version@pause+1)& (0+255),b
  4131  0000DA  0EE8               	movlw	232
  4132  0000DC  6FB1               	movwf	display_ea_version@pause& (0+255),b
  4133  0000DE  EC37  F02E         	call	_display_ea_version	;wreg free
  4134                           
  4135                           ;app.c: 89:    StartTimer(TMR_DIS, 70);
  4136  0000E2  0E00               	movlw	0
  4137  0000E4  6E14               	movwf	StartTimer@count+1,c
  4138  0000E6  0E46               	movlw	70
  4139  0000E8  6E13               	movwf	StartTimer@count,c
  4140  0000EA  0E03               	movlw	3
  4141  0000EC  ECD3  F02D         	call	_StartTimer
  4142                           
  4143                           ;app.c: 90:   } else {
  4144  0000F0  EF92  F007         	goto	l11729
  4145  0000F4                     l11425:
  4146                           
  4147                           ;app.c: 91:    appData.state = APP_INITIALIZATION_ERROR;
  4148  0000F4  0E01               	movlw	1
  4149  0000F6  0101               	movlb	1	; () banked
  4150  0000F8  6F8D               	movwf	_appData& (0+255),b	;volatile
  4151  0000FA  EF92  F007         	goto	l11729
  4152  0000FE                     l11427:
  4153                           
  4154                           ; BSR set to: 0
  4155                           ;app.c: 96:   appData.error_code = -2;
  4156  0000FE  0EFE               	movlw	254
  4157  000100  0101               	movlb	1	; () banked
  4158  000102  6FD0               	movwf	(_appData+67)& (0+255),b	;volatile
  4159                           
  4160                           ; BSR set to: 1
  4161                           ;app.c: 97:   TMR3_StartTimer();
  4162  000104  ECBE  F02F         	call	_TMR3_StartTimer	;wreg free
  4163                           
  4164                           ;app.c: 98:   break;
  4165  000108  EF92  F007         	goto	l11729
  4166  00010C                     l11431:
  4167                           
  4168                           ; BSR set to: 0
  4169                           ;app.c: 100:   appData.state = APP_COMMUNICATE;
  4170  00010C  0E03               	movlw	3
  4171  00010E  0101               	movlb	1	; () banked
  4172  000110  6F8D               	movwf	_appData& (0+255),b	;volatile
  4173                           
  4174                           ; BSR set to: 1
  4175                           ;app.c: 101:   if (MC_ReceivePacket(appData.receive_packet)) {
  4176  000112  0E8F               	movlw	low (_appData+2)
  4177  000114  6E14               	movwf	MC_ReceivePacket@Message,c
  4178  000116  0E01               	movlw	high (_appData+2)
  4179  000118  6E15               	movwf	MC_ReceivePacket@Message+1,c
  4180  00011A  EC86  F024         	call	_MC_ReceivePacket	;wreg free
  4181  00011E  0900               	iorlw	0
  4182  000120  B4D8               	btfsc	status,2,c
  4183  000122  EF92  F007         	goto	l11729
  4184                           
  4185                           ;app.c: 102:    clear_MC_port();
  4186  000126  EC1F  F02D         	call	_clear_MC_port	;wreg free
  4187                           
  4188                           ;app.c: 103:    TMR3_StartTimer();
  4189  00012A  ECBE  F02F         	call	_TMR3_StartTimer	;wreg free
  4190                           
  4191                           ;app.c: 104:    appData.got_packet = 0;
  4192  00012E  0E00               	movlw	0
  4193  000130  0101               	movlb	1	; () banked
  4194  000132  6FCF               	movwf	(_appData+66)& (0+255),b	;volatile
  4195                           
  4196                           ; BSR set to: 1
  4197  000134  0E8F               	movlw	low (_appData+2)
  4198  000136  6E1E               	movwf	strstr@h,c
  4199  000138  0E01               	movlw	high (_appData+2)
  4200  00013A  6E1F               	movwf	strstr@h+1,c
  4201  00013C  0E1A               	movlw	low (_CrData+10)
  4202  00013E  6EF6               	movwf	tblptrl,c
  4203  000140  0E7D               	movlw	high (_CrData+10)
  4204  000142  6EF7               	movwf	tblptrh,c
  4205  000144                     	if	0	;tblptru may be non-zero
  4206  000144                     	endif
  4207  000144                     	if	0	;tblptru may be non-zero
  4208  000144                     	endif
  4209  000144  0009               	tblrd		*+
  4210  000146  CFF5 F020          	movff	tablat,strstr@n
  4211  00014A  000A               	tblrd		*-
  4212  00014C  CFF5 F021          	movff	tablat,strstr@n+1
  4213  000150  ECDA  F027         	call	_strstr	;wreg free
  4214  000154  501E               	movf	?_strstr,w,c
  4215  000156  101F               	iorwf	?_strstr+1,w,c
  4216  000158  B4D8               	btfsc	status,2,c
  4217  00015A  D005               	goto	l11445
  4218                           
  4219                           ;app.c: 106:     appData.mc = MC_BOOT;
  4220  00015C  0E02               	movlw	2
  4221  00015E  0101               	movlb	1	; () banked
  4222  000160  6F8E               	movwf	(_appData+1)& (0+255),b	;volatile
  4223                           
  4224                           ;app.c: 107:     appData.got_packet = 1;
  4225  000162  0E01               	movlw	1
  4226  000164  6FCF               	movwf	(_appData+66)& (0+255),b	;volatile
  4227  000166                     l11445:
  4228  000166  0E8F               	movlw	low (_appData+2)
  4229  000168  6E1E               	movwf	strstr@h,c
  4230  00016A  0E01               	movlw	high (_appData+2)
  4231  00016C  6E1F               	movwf	strstr@h+1,c
  4232  00016E  0E1E               	movlw	low (_CrData+14)
  4233  000170  6EF6               	movwf	tblptrl,c
  4234  000172  0E7D               	movlw	high (_CrData+14)
  4235  000174  6EF7               	movwf	tblptrh,c
  4236  000176                     	if	0	;tblptru may be non-zero
  4237  000176                     	endif
  4238  000176                     	if	0	;tblptru may be non-zero
  4239  000176                     	endif
  4240  000176  0009               	tblrd		*+
  4241  000178  CFF5 F020          	movff	tablat,strstr@n
  4242  00017C  000A               	tblrd		*-
  4243  00017E  CFF5 F021          	movff	tablat,strstr@n+1
  4244  000182  ECDA  F027         	call	_strstr	;wreg free
  4245  000186  501E               	movf	?_strstr,w,c
  4246  000188  101F               	iorwf	?_strstr+1,w,c
  4247  00018A  B4D8               	btfsc	status,2,c
  4248  00018C  D00B               	goto	l11453
  4249                           
  4250                           ;app.c: 110:     if (appData.mc == MC_BOOT) {
  4251  00018E  0E02               	movlw	2
  4252  000190  0101               	movlb	1	; () banked
  4253  000192  198E               	xorwf	(_appData+1)& (0+255),w,b	;volatile
  4254  000194  A4D8               	btfss	status,2,c
  4255  000196  D002               	goto	l11451
  4256                           
  4257                           ; BSR set to: 1
  4258                           ;app.c: 111:      appData.mc = MC_DRIVE;
  4259  000198  0E03               	movlw	3
  4260  00019A  D001               	goto	L1
  4261  00019C                     l11451:
  4262                           
  4263                           ; BSR set to: 1
  4264                           ;app.c: 113:      appData.mc = MC_INITIALIZE;
  4265  00019C  0E00               	movlw	0
  4266  00019E                     L1:
  4267  00019E  6F8E               	movwf	(_appData+1)& (0+255),b	;volatile
  4268                           
  4269                           ; BSR set to: 1
  4270                           ;app.c: 115:     appData.got_packet = 1;
  4271                           
  4272                           ;app.c: 114:     }
  4273  0001A0  0E01               	movlw	1
  4274  0001A2  6FCF               	movwf	(_appData+66)& (0+255),b	;volatile
  4275  0001A4                     l11453:
  4276  0001A4  0E8F               	movlw	low (_appData+2)
  4277  0001A6  6E1E               	movwf	strstr@h,c
  4278  0001A8  0E01               	movlw	high (_appData+2)
  4279  0001AA  6E1F               	movwf	strstr@h+1,c
  4280  0001AC  0E22               	movlw	low (_CrData+18)
  4281  0001AE  6EF6               	movwf	tblptrl,c
  4282  0001B0  0E7D               	movlw	high (_CrData+18)
  4283  0001B2  6EF7               	movwf	tblptrh,c
  4284  0001B4                     	if	0	;tblptru may be non-zero
  4285  0001B4                     	endif
  4286  0001B4                     	if	0	;tblptru may be non-zero
  4287  0001B4                     	endif
  4288  0001B4  0009               	tblrd		*+
  4289  0001B6  CFF5 F020          	movff	tablat,strstr@n
  4290  0001BA  000A               	tblrd		*-
  4291  0001BC  CFF5 F021          	movff	tablat,strstr@n+1
  4292  0001C0  ECDA  F027         	call	_strstr	;wreg free
  4293  0001C4  501E               	movf	?_strstr,w,c
  4294  0001C6  101F               	iorwf	?_strstr+1,w,c
  4295  0001C8  B4D8               	btfsc	status,2,c
  4296  0001CA  EF92  F007         	goto	l11729
  4297                           
  4298                           ;app.c: 118:     if (appData.mc == MC_DRIVE) {
  4299  0001CE  0E03               	movlw	3
  4300  0001D0  0101               	movlb	1	; () banked
  4301  0001D2  198E               	xorwf	(_appData+1)& (0+255),w,b	;volatile
  4302  0001D4  A4D8               	btfss	status,2,c
  4303  0001D6  D002               	goto	l11459
  4304                           
  4305                           ; BSR set to: 1
  4306                           ;app.c: 119:      appData.mc = MC_SETUP;
  4307  0001D8  0E05               	movlw	5
  4308  0001DA  D001               	goto	L2
  4309  0001DC                     l11459:
  4310                           
  4311                           ; BSR set to: 1
  4312                           ;app.c: 121:      appData.mc = MC_INITIALIZE;
  4313  0001DC  0E00               	movlw	0
  4314  0001DE                     L2:
  4315  0001DE  6F8E               	movwf	(_appData+1)& (0+255),b	;volatile
  4316                           
  4317                           ; BSR set to: 1
  4318                           ;app.c: 123:     appData.got_packet = 1;
  4319                           
  4320                           ;app.c: 122:     }
  4321  0001E0  0E01               	movlw	1
  4322  0001E2  6FCF               	movwf	(_appData+66)& (0+255),b	;volatile
  4323  0001E4  EF92  F007         	goto	l11729
  4324  0001E8                     l11461:
  4325                           
  4326                           ; BSR set to: 0
  4327                           ;app.c: 128:   appData.state = APP_CONNECT;
  4328  0001E8  0E02               	movlw	2
  4329  0001EA  0101               	movlb	1	; () banked
  4330  0001EC  6F8D               	movwf	_appData& (0+255),b	;volatile
  4331                           
  4332                           ; BSR set to: 1
  4333                           ;app.c: 129:   if (TimerDone(TMR_DIS)) {
  4334  0001EE  0E03               	movlw	3
  4335  0001F0  EC90  F02E         	call	_TimerDone
  4336  0001F4  0900               	iorlw	0
  4337  0001F6  B4D8               	btfsc	status,2,c
  4338  0001F8  EF92  F007         	goto	l11729
  4339  0001FC  A489               	btfss	3977,2,c	;volatile
  4340  0001FE  D002               	goto	u15240
  4341  000200  0E01               	movlw	1
  4342  000202  D001               	goto	u15246
  4343  000204                     u15240:
  4344  000204  0E00               	movlw	0
  4345  000206                     u15246:
  4346  000206  0AFF               	xorlw	255
  4347  000208  0100               	movlb	0	; () banked
  4348  00020A  6FBB               	movwf	??_APP_Tasks& (0+255),b
  4349  00020C  47BB               	rlncf	??_APP_Tasks& (0+255),f,b
  4350  00020E  47BB               	rlncf	??_APP_Tasks& (0+255),f,b
  4351  000210  5089               	movf	3977,w,c	;volatile
  4352  000212  19BB               	xorwf	??_APP_Tasks& (0+255),w,b
  4353  000214  0BFB               	andlw	-5
  4354  000216  19BB               	xorwf	??_APP_Tasks& (0+255),w,b
  4355  000218  6E89               	movwf	3977,c	;volatile
  4356                           
  4357                           ; BSR set to: 0
  4358                           ;app.c: 131:    if (appData.got_packet) {
  4359  00021A  0101               	movlb	1	; () banked
  4360  00021C  51CF               	movf	(_appData+66)& (0+255),w,b	;volatile
  4361  00021E  B4D8               	btfsc	status,2,c
  4362  000220  EFD4  F006         	goto	l11693
  4363                           
  4364                           ; BSR set to: 1
  4365  000224  0E1E               	movlw	low APP_Tasks@mc_response
  4366  000226  0100               	movlb	0	; () banked
  4367  000228  6FA9               	movwf	sprintf@s& (0+255),b
  4368  00022A  0E01               	movlw	high APP_Tasks@mc_response
  4369  00022C  6FAA               	movwf	(sprintf@s+1)& (0+255),b
  4370  00022E  0E4E               	movlw	low (_CrData+62)
  4371  000230  6EF6               	movwf	tblptrl,c
  4372  000232  0E7D               	movlw	high (_CrData+62)
  4373  000234  6EF7               	movwf	tblptrh,c
  4374  000236                     	if	0	;tblptru may be non-zero
  4375  000236                     	endif
  4376  000236                     	if	0	;tblptru may be non-zero
  4377  000236                     	endif
  4378  000236  0009               	tblrd		*+
  4379  000238  CFF5 F0AB          	movff	tablat,sprintf@fmt
  4380  00023C  000A               	tblrd		*-
  4381  00023E  CFF5 F0AC          	movff	tablat,sprintf@fmt+1
  4382  000242  0E16               	movlw	low (_CrData+6)
  4383  000244  6EF6               	movwf	tblptrl,c
  4384  000246  0E7D               	movlw	high (_CrData+6)
  4385  000248  6EF7               	movwf	tblptrh,c
  4386  00024A                     	if	0	;tblptru may be non-zero
  4387  00024A                     	endif
  4388  00024A                     	if	0	;tblptru may be non-zero
  4389  00024A                     	endif
  4390  00024A  0009               	tblrd		*+
  4391  00024C  CFF5 F0AD          	movff	tablat,?_sprintf+4
  4392  000250  000A               	tblrd		*-
  4393  000252  CFF5 F0AE          	movff	tablat,?_sprintf+5
  4394  000256  ECB1  F029         	call	_sprintf	;wreg free
  4395                           
  4396                           ;app.c: 133:     display_ea_line(mc_response);
  4397  00025A  0E1E               	movlw	low APP_Tasks@mc_response
  4398  00025C  0100               	movlb	0	; () banked
  4399  00025E  6FB1               	movwf	display_ea_line@line& (0+255),b
  4400  000260  0E01               	movlw	high APP_Tasks@mc_response
  4401  000262  6FB2               	movwf	(display_ea_line@line+1)& (0+255),b
  4402  000264  EC2A  F02F         	call	_display_ea_line	;wreg free
  4403  000268  0E1E               	movlw	low APP_Tasks@mc_response
  4404  00026A  0100               	movlb	0	; () banked
  4405  00026C  6FA9               	movwf	sprintf@s& (0+255),b
  4406  00026E  0E01               	movlw	high APP_Tasks@mc_response
  4407  000270  6FAA               	movwf	(sprintf@s+1)& (0+255),b
  4408  000272  0E4E               	movlw	low (_CrData+62)
  4409  000274  6EF6               	movwf	tblptrl,c
  4410  000276  0E7D               	movlw	high (_CrData+62)
  4411  000278  6EF7               	movwf	tblptrh,c
  4412  00027A                     	if	0	;tblptru may be non-zero
  4413  00027A                     	endif
  4414  00027A                     	if	0	;tblptru may be non-zero
  4415  00027A                     	endif
  4416  00027A  0009               	tblrd		*+
  4417  00027C  CFF5 F0AB          	movff	tablat,sprintf@fmt
  4418  000280  000A               	tblrd		*-
  4419  000282  CFF5 F0AC          	movff	tablat,sprintf@fmt+1
  4420  000286  0E8F               	movlw	low (_appData+2)
  4421  000288  6FAD               	movwf	(?_sprintf+4)& (0+255),b
  4422  00028A  0E01               	movlw	high (_appData+2)
  4423  00028C  6FAE               	movwf	(?_sprintf+5)& (0+255),b
  4424  00028E  ECB1  F029         	call	_sprintf	;wreg free
  4425                           
  4426                           ;app.c: 135:     display_ea_line(mc_response);
  4427  000292  0E1E               	movlw	low APP_Tasks@mc_response
  4428  000294  0100               	movlb	0	; () banked
  4429  000296  6FB1               	movwf	display_ea_line@line& (0+255),b
  4430  000298  0E01               	movlw	high APP_Tasks@mc_response
  4431  00029A  6FB2               	movwf	(display_ea_line@line+1)& (0+255),b
  4432  00029C  EC2A  F02F         	call	_display_ea_line	;wreg free
  4433                           
  4434                           ;app.c: 136:     switch (appData.mc) {
  4435  0002A0  EFB3  F006         	goto	l11689
  4436  0002A4                     l11471:
  4437                           
  4438                           ; BSR set to: 0
  4439  0002A4  0E1E               	movlw	low APP_Tasks@mc_response
  4440  0002A6  6FA9               	movwf	sprintf@s& (0+255),b
  4441  0002A8  0E01               	movlw	high APP_Tasks@mc_response
  4442  0002AA  6FAA               	movwf	(sprintf@s+1)& (0+255),b
  4443  0002AC  0E50               	movlw	low (_CrData+64)
  4444  0002AE  6EF6               	movwf	tblptrl,c
  4445  0002B0  0E7D               	movlw	high (_CrData+64)
  4446  0002B2  6EF7               	movwf	tblptrh,c
  4447  0002B4                     	if	0	;tblptru may be non-zero
  4448  0002B4                     	endif
  4449  0002B4                     	if	0	;tblptru may be non-zero
  4450  0002B4                     	endif
  4451  0002B4  0009               	tblrd		*+
  4452  0002B6  CFF5 F0AB          	movff	tablat,sprintf@fmt
  4453  0002BA  000A               	tblrd		*-
  4454  0002BC  CFF5 F0AC          	movff	tablat,sprintf@fmt+1
  4455  0002C0  0E4A               	movlw	low (_CrData+58)
  4456  0002C2  6EF6               	movwf	tblptrl,c
  4457  0002C4  0E7D               	movlw	high (_CrData+58)
  4458  0002C6  6EF7               	movwf	tblptrh,c
  4459  0002C8                     	if	0	;tblptru may be non-zero
  4460  0002C8                     	endif
  4461  0002C8                     	if	0	;tblptru may be non-zero
  4462  0002C8                     	endif
  4463  0002C8  0009               	tblrd		*+
  4464  0002CA  CFF5 F0AD          	movff	tablat,?_sprintf+4
  4465  0002CE  000A               	tblrd		*-
  4466  0002D0  CFF5 F0AE          	movff	tablat,?_sprintf+5
  4467  0002D4  ECB1  F029         	call	_sprintf	;wreg free
  4468                           
  4469                           ;app.c: 140:      display_ea_line(mc_response);
  4470  0002D8  0E1E               	movlw	low APP_Tasks@mc_response
  4471  0002DA  0100               	movlb	0	; () banked
  4472  0002DC  6FB1               	movwf	display_ea_line@line& (0+255),b
  4473  0002DE  0E01               	movlw	high APP_Tasks@mc_response
  4474  0002E0  6FB2               	movwf	(display_ea_line@line+1)& (0+255),b
  4475  0002E2  EC2A  F02F         	call	_display_ea_line	;wreg free
  4476                           
  4477                           ;app.c: 141:      break;
  4478  0002E6  EFD0  F006         	goto	l11691
  4479  0002EA                     l11473:
  4480                           
  4481                           ; BSR set to: 0
  4482                           ;app.c: 143:      clear_MC_port();
  4483  0002EA  EC1F  F02D         	call	_clear_MC_port	;wreg free
  4484  0002EE  0E1C               	movlw	low (_CrData+12)
  4485  0002F0  6EF6               	movwf	tblptrl,c
  4486  0002F2  0E7D               	movlw	high (_CrData+12)
  4487  0002F4  6EF7               	movwf	tblptrh,c
  4488  0002F6                     	if	0	;tblptru may be non-zero
  4489  0002F6                     	endif
  4490  0002F6                     	if	0	;tblptru may be non-zero
  4491  0002F6                     	endif
  4492  0002F6  0009               	tblrd		*+
  4493  0002F8  CFF5 F01A          	movff	tablat,MC_SendCommand@data
  4494  0002FC  000A               	tblrd		*-
  4495  0002FE  CFF5 F01B          	movff	tablat,MC_SendCommand@data+1
  4496  000302  0E00               	movlw	0
  4497  000304  6E1C               	movwf	MC_SendCommand@wait,c
  4498  000306  EC69  F028         	call	_MC_SendCommand	;wreg free
  4499                           
  4500                           ;app.c: 145:      break;
  4501  00030A  EFD0  F006         	goto	l11691
  4502  00030E                     l11477:
  4503                           
  4504                           ; BSR set to: 0
  4505                           ;app.c: 147:      clear_MC_port();
  4506  00030E  EC1F  F02D         	call	_clear_MC_port	;wreg free
  4507  000312  0E20               	movlw	low (_CrData+16)
  4508  000314  6EF6               	movwf	tblptrl,c
  4509  000316  0E7D               	movlw	high (_CrData+16)
  4510  000318  6EF7               	movwf	tblptrh,c
  4511  00031A                     	if	0	;tblptru may be non-zero
  4512  00031A                     	endif
  4513  00031A                     	if	0	;tblptru may be non-zero
  4514  00031A                     	endif
  4515  00031A  0009               	tblrd		*+
  4516  00031C  CFF5 F01A          	movff	tablat,MC_SendCommand@data
  4517  000320  000A               	tblrd		*-
  4518  000322  CFF5 F01B          	movff	tablat,MC_SendCommand@data+1
  4519  000326  0E00               	movlw	0
  4520  000328  6E1C               	movwf	MC_SendCommand@wait,c
  4521  00032A  EC69  F028         	call	_MC_SendCommand	;wreg free
  4522                           
  4523                           ;app.c: 149:      break;
  4524  00032E  EFD0  F006         	goto	l11691
  4525  000332                     l11481:
  4526                           
  4527                           ; BSR set to: 0
  4528                           ;app.c: 151:      TMR3_StopTimer();
  4529  000332  ECBC  F02F         	call	_TMR3_StopTimer	;wreg free
  4530  000336  0E1E               	movlw	low APP_Tasks@mc_response
  4531  000338  0100               	movlb	0	; () banked
  4532  00033A  6FA9               	movwf	sprintf@s& (0+255),b
  4533  00033C  0E01               	movlw	high APP_Tasks@mc_response
  4534  00033E  6FAA               	movwf	(sprintf@s+1)& (0+255),b
  4535  000340  0E50               	movlw	low (_CrData+64)
  4536  000342  6EF6               	movwf	tblptrl,c
  4537  000344  0E7D               	movlw	high (_CrData+64)
  4538  000346  6EF7               	movwf	tblptrh,c
  4539  000348                     	if	0	;tblptru may be non-zero
  4540  000348                     	endif
  4541  000348                     	if	0	;tblptru may be non-zero
  4542  000348                     	endif
  4543  000348  0009               	tblrd		*+
  4544  00034A  CFF5 F0AB          	movff	tablat,sprintf@fmt
  4545  00034E  000A               	tblrd		*-
  4546  000350  CFF5 F0AC          	movff	tablat,sprintf@fmt+1
  4547  000354  0E26               	movlw	low (_CrData+22)
  4548  000356  6EF6               	movwf	tblptrl,c
  4549  000358  0E7D               	movlw	high (_CrData+22)
  4550  00035A  6EF7               	movwf	tblptrh,c
  4551  00035C                     	if	0	;tblptru may be non-zero
  4552  00035C                     	endif
  4553  00035C                     	if	0	;tblptru may be non-zero
  4554  00035C                     	endif
  4555  00035C  0009               	tblrd		*+
  4556  00035E  CFF5 F0AD          	movff	tablat,?_sprintf+4
  4557  000362  000A               	tblrd		*-
  4558  000364  CFF5 F0AE          	movff	tablat,?_sprintf+5
  4559  000368  ECB1  F029         	call	_sprintf	;wreg free
  4560                           
  4561                           ;app.c: 153:      display_ea_line(mc_response);
  4562  00036C  0E1E               	movlw	low APP_Tasks@mc_response
  4563  00036E  0100               	movlb	0	; () banked
  4564  000370  6FB1               	movwf	display_ea_line@line& (0+255),b
  4565  000372  0E01               	movlw	high APP_Tasks@mc_response
  4566  000374  6FB2               	movwf	(display_ea_line@line+1)& (0+255),b
  4567  000376  EC2A  F02F         	call	_display_ea_line	;wreg free
  4568  00037A  0E1E               	movlw	low APP_Tasks@mc_response
  4569  00037C  0100               	movlb	0	; () banked
  4570  00037E  6FA9               	movwf	sprintf@s& (0+255),b
  4571  000380  0E01               	movlw	high APP_Tasks@mc_response
  4572  000382  6FAA               	movwf	(sprintf@s+1)& (0+255),b
  4573  000384  0E52               	movlw	low (_CrData+66)
  4574  000386  6EF6               	movwf	tblptrl,c
  4575  000388  0E7D               	movlw	high (_CrData+66)
  4576  00038A  6EF7               	movwf	tblptrh,c
  4577  00038C                     	if	0	;tblptru may be non-zero
  4578  00038C                     	endif
  4579  00038C                     	if	0	;tblptru may be non-zero
  4580  00038C                     	endif
  4581  00038C  0009               	tblrd		*+
  4582  00038E  CFF5 F0AB          	movff	tablat,sprintf@fmt
  4583  000392  000A               	tblrd		*-
  4584  000394  CFF5 F0AC          	movff	tablat,sprintf@fmt+1
  4585  000398  0E2C               	movlw	low (_CrData+28)
  4586  00039A  6EF6               	movwf	tblptrl,c
  4587  00039C  0E7D               	movlw	high (_CrData+28)
  4588  00039E  6EF7               	movwf	tblptrh,c
  4589  0003A0                     	if	0	;tblptru may be non-zero
  4590  0003A0                     	endif
  4591  0003A0                     	if	0	;tblptru may be non-zero
  4592  0003A0                     	endif
  4593  0003A0  0009               	tblrd		*+
  4594  0003A2  CFF5 F0AD          	movff	tablat,?_sprintf+4
  4595  0003A6  000A               	tblrd		*-
  4596  0003A8  CFF5 F0AE          	movff	tablat,?_sprintf+5
  4597  0003AC  ECB1  F029         	call	_sprintf	;wreg free
  4598                           
  4599                           ;app.c: 155:      display_ea_line(mc_response);
  4600  0003B0  0E1E               	movlw	low APP_Tasks@mc_response
  4601  0003B2  0100               	movlb	0	; () banked
  4602  0003B4  6FB1               	movwf	display_ea_line@line& (0+255),b
  4603  0003B6  0E01               	movlw	high APP_Tasks@mc_response
  4604  0003B8  6FB2               	movwf	(display_ea_line@line+1)& (0+255),b
  4605  0003BA  EC2A  F02F         	call	_display_ea_line	;wreg free
  4606                           
  4607                           ;app.c: 156:      while (!appData.sw1) {
  4608  0003BE  D022               	goto	l11493
  4609  0003C0                     l11491:
  4610                           
  4611                           ; BSR set to: 1
  4612  0003C0  0E1E               	movlw	low APP_Tasks@mc_response
  4613  0003C2  0100               	movlb	0	; () banked
  4614  0003C4  6FA9               	movwf	sprintf@s& (0+255),b
  4615  0003C6  0E01               	movlw	high APP_Tasks@mc_response
  4616  0003C8  6FAA               	movwf	(sprintf@s+1)& (0+255),b
  4617  0003CA  0E54               	movlw	low (_CrData+68)
  4618  0003CC  6EF6               	movwf	tblptrl,c
  4619  0003CE  0E7D               	movlw	high (_CrData+68)
  4620  0003D0  6EF7               	movwf	tblptrh,c
  4621  0003D2                     	if	0	;tblptru may be non-zero
  4622  0003D2                     	endif
  4623  0003D2                     	if	0	;tblptru may be non-zero
  4624  0003D2                     	endif
  4625  0003D2  0009               	tblrd		*+
  4626  0003D4  CFF5 F0AB          	movff	tablat,sprintf@fmt
  4627  0003D8  000A               	tblrd		*-
  4628  0003DA  CFF5 F0AC          	movff	tablat,sprintf@fmt+1
  4629  0003DE  0E14               	movlw	low (_CrData+4)
  4630  0003E0  6EF6               	movwf	tblptrl,c
  4631  0003E2  0E7D               	movlw	high (_CrData+4)
  4632  0003E4  6EF7               	movwf	tblptrh,c
  4633  0003E6                     	if	0	;tblptru may be non-zero
  4634  0003E6                     	endif
  4635  0003E6                     	if	0	;tblptru may be non-zero
  4636  0003E6                     	endif
  4637  0003E6  0009               	tblrd		*+
  4638  0003E8  CFF5 F0AD          	movff	tablat,?_sprintf+4
  4639  0003EC  000A               	tblrd		*-
  4640  0003EE  CFF5 F0AE          	movff	tablat,?_sprintf+5
  4641  0003F2  ECB1  F029         	call	_sprintf	;wreg free
  4642                           
  4643                           ;app.c: 158:       display_ea_line(mc_response);
  4644  0003F6  0E1E               	movlw	low APP_Tasks@mc_response
  4645  0003F8  0100               	movlb	0	; () banked
  4646  0003FA  6FB1               	movwf	display_ea_line@line& (0+255),b
  4647  0003FC  0E01               	movlw	high APP_Tasks@mc_response
  4648  0003FE  6FB2               	movwf	(display_ea_line@line+1)& (0+255),b
  4649  000400  EC2A  F02F         	call	_display_ea_line	;wreg free
  4650  000404                     l11493:
  4651                           
  4652                           ;app.c: 156:      while (!appData.sw1) {
  4653  000404  0101               	movlb	1	; () banked
  4654  000406  51D1               	movf	(_appData+68)& (0+255),w,b	;volatile
  4655  000408  B4D8               	btfsc	status,2,c
  4656  00040A  D7DA               	goto	l11491
  4657                           
  4658                           ; BSR set to: 1
  4659  00040C  0E1E               	movlw	low APP_Tasks@mc_response
  4660  00040E  0100               	movlb	0	; () banked
  4661  000410  6FA9               	movwf	sprintf@s& (0+255),b
  4662  000412  0E01               	movlw	high APP_Tasks@mc_response
  4663  000414  6FAA               	movwf	(sprintf@s+1)& (0+255),b
  4664  000416  0E4E               	movlw	low (_CrData+62)
  4665  000418  6EF6               	movwf	tblptrl,c
  4666  00041A  0E7D               	movlw	high (_CrData+62)
  4667  00041C  6EF7               	movwf	tblptrh,c
  4668  00041E                     	if	0	;tblptru may be non-zero
  4669  00041E                     	endif
  4670  00041E                     	if	0	;tblptru may be non-zero
  4671  00041E                     	endif
  4672  00041E  0009               	tblrd		*+
  4673  000420  CFF5 F0AB          	movff	tablat,sprintf@fmt
  4674  000424  000A               	tblrd		*-
  4675  000426  CFF5 F0AC          	movff	tablat,sprintf@fmt+1
  4676  00042A  0E16               	movlw	low (_CrData+6)
  4677  00042C  6EF6               	movwf	tblptrl,c
  4678  00042E  0E7D               	movlw	high (_CrData+6)
  4679  000430  6EF7               	movwf	tblptrh,c
  4680  000432                     	if	0	;tblptru may be non-zero
  4681  000432                     	endif
  4682  000432                     	if	0	;tblptru may be non-zero
  4683  000432                     	endif
  4684  000432  0009               	tblrd		*+
  4685  000434  CFF5 F0AD          	movff	tablat,?_sprintf+4
  4686  000438  000A               	tblrd		*-
  4687  00043A  CFF5 F0AE          	movff	tablat,?_sprintf+5
  4688  00043E  ECB1  F029         	call	_sprintf	;wreg free
  4689                           
  4690                           ;app.c: 161:      display_ea_line(mc_response);
  4691  000442  0E1E               	movlw	low APP_Tasks@mc_response
  4692  000444  0100               	movlb	0	; () banked
  4693  000446  6FB1               	movwf	display_ea_line@line& (0+255),b
  4694  000448  0E01               	movlw	high APP_Tasks@mc_response
  4695  00044A  6FB2               	movwf	(display_ea_line@line+1)& (0+255),b
  4696  00044C  EC2A  F02F         	call	_display_ea_line	;wreg free
  4697                           
  4698                           ;app.c: 163:      TMR3_StartTimer();
  4699  000450  ECBE  F02F         	call	_TMR3_StartTimer	;wreg free
  4700                           
  4701                           ;app.c: 164:      appData.sw1 = 0;
  4702  000454  0E00               	movlw	0
  4703  000456  0101               	movlb	1	; () banked
  4704  000458  6FD1               	movwf	(_appData+68)& (0+255),b	;volatile
  4705                           
  4706                           ; BSR set to: 1
  4707                           ;app.c: 165:      WaitMs(100);
  4708  00045A  0E00               	movlw	0
  4709  00045C  6E19               	movwf	WaitMs@numMilliseconds+1,c
  4710  00045E  0E64               	movlw	100
  4711  000460  6E18               	movwf	WaitMs@numMilliseconds,c
  4712  000462  ECF4  F02E         	call	_WaitMs	;wreg free
  4713                           
  4714                           ;app.c: 166:      TMR3_StopTimer();
  4715  000466  ECBC  F02F         	call	_TMR3_StopTimer	;wreg free
  4716                           
  4717                           ;app.c: 168:      clear_MC_port();
  4718  00046A  EC1F  F02D         	call	_clear_MC_port	;wreg free
  4719  00046E  0E34               	movlw	low (_CrData+36)
  4720  000470  6EF6               	movwf	tblptrl,c
  4721  000472  0E7D               	movlw	high (_CrData+36)
  4722  000474  6EF7               	movwf	tblptrh,c
  4723  000476                     	if	0	;tblptru may be non-zero
  4724  000476                     	endif
  4725  000476                     	if	0	;tblptru may be non-zero
  4726  000476                     	endif
  4727  000476  0009               	tblrd		*+
  4728  000478  CFF5 F01A          	movff	tablat,MC_SendCommand@data
  4729  00047C  000A               	tblrd		*-
  4730  00047E  CFF5 F01B          	movff	tablat,MC_SendCommand@data+1
  4731  000482  0E01               	movlw	1
  4732  000484  6E1C               	movwf	MC_SendCommand@wait,c
  4733  000486  EC69  F028         	call	_MC_SendCommand	;wreg free
  4734  00048A  0E36               	movlw	low (_CrData+38)
  4735  00048C  6EF6               	movwf	tblptrl,c
  4736  00048E  0E7D               	movlw	high (_CrData+38)
  4737  000490  6EF7               	movwf	tblptrh,c
  4738  000492                     	if	0	;tblptru may be non-zero
  4739  000492                     	endif
  4740  000492                     	if	0	;tblptru may be non-zero
  4741  000492                     	endif
  4742  000492  0009               	tblrd		*+
  4743  000494  CFF5 F01A          	movff	tablat,MC_SendCommand@data
  4744  000498  000A               	tblrd		*-
  4745  00049A  CFF5 F01B          	movff	tablat,MC_SendCommand@data+1
  4746  00049E  0E01               	movlw	1
  4747  0004A0  6E1C               	movwf	MC_SendCommand@wait,c
  4748  0004A2  EC69  F028         	call	_MC_SendCommand	;wreg free
  4749  0004A6  0E38               	movlw	low (_CrData+40)
  4750  0004A8  6EF6               	movwf	tblptrl,c
  4751  0004AA  0E7D               	movlw	high (_CrData+40)
  4752  0004AC  6EF7               	movwf	tblptrh,c
  4753  0004AE                     	if	0	;tblptru may be non-zero
  4754  0004AE                     	endif
  4755  0004AE                     	if	0	;tblptru may be non-zero
  4756  0004AE                     	endif
  4757  0004AE  0009               	tblrd		*+
  4758  0004B0  CFF5 F01A          	movff	tablat,MC_SendCommand@data
  4759  0004B4  000A               	tblrd		*-
  4760  0004B6  CFF5 F01B          	movff	tablat,MC_SendCommand@data+1
  4761  0004BA  0E01               	movlw	1
  4762  0004BC  6E1C               	movwf	MC_SendCommand@wait,c
  4763  0004BE  EC69  F028         	call	_MC_SendCommand	;wreg free
  4764  0004C2  0E3A               	movlw	low (_CrData+42)
  4765  0004C4  6EF6               	movwf	tblptrl,c
  4766  0004C6  0E7D               	movlw	high (_CrData+42)
  4767  0004C8  6EF7               	movwf	tblptrh,c
  4768  0004CA                     	if	0	;tblptru may be non-zero
  4769  0004CA                     	endif
  4770  0004CA                     	if	0	;tblptru may be non-zero
  4771  0004CA                     	endif
  4772  0004CA  0009               	tblrd		*+
  4773  0004CC  CFF5 F01A          	movff	tablat,MC_SendCommand@data
  4774  0004D0  000A               	tblrd		*-
  4775  0004D2  CFF5 F01B          	movff	tablat,MC_SendCommand@data+1
  4776  0004D6  0E01               	movlw	1
  4777  0004D8  6E1C               	movwf	MC_SendCommand@wait,c
  4778  0004DA  EC69  F028         	call	_MC_SendCommand	;wreg free
  4779  0004DE  0E3C               	movlw	low (_CrData+44)
  4780  0004E0  6EF6               	movwf	tblptrl,c
  4781  0004E2  0E7D               	movlw	high (_CrData+44)
  4782  0004E4  6EF7               	movwf	tblptrh,c
  4783  0004E6                     	if	0	;tblptru may be non-zero
  4784  0004E6                     	endif
  4785  0004E6                     	if	0	;tblptru may be non-zero
  4786  0004E6                     	endif
  4787  0004E6  0009               	tblrd		*+
  4788  0004E8  CFF5 F01A          	movff	tablat,MC_SendCommand@data
  4789  0004EC  000A               	tblrd		*-
  4790  0004EE  CFF5 F01B          	movff	tablat,MC_SendCommand@data+1
  4791  0004F2  0E01               	movlw	1
  4792  0004F4  6E1C               	movwf	MC_SendCommand@wait,c
  4793  0004F6  EC69  F028         	call	_MC_SendCommand	;wreg free
  4794  0004FA  0E1E               	movlw	low APP_Tasks@mc_response
  4795  0004FC  0100               	movlb	0	; () banked
  4796  0004FE  6FA9               	movwf	sprintf@s& (0+255),b
  4797  000500  0E01               	movlw	high APP_Tasks@mc_response
  4798  000502  6FAA               	movwf	(sprintf@s+1)& (0+255),b
  4799  000504  0E50               	movlw	low (_CrData+64)
  4800  000506  6EF6               	movwf	tblptrl,c
  4801  000508  0E7D               	movlw	high (_CrData+64)
  4802  00050A  6EF7               	movwf	tblptrh,c
  4803  00050C                     	if	0	;tblptru may be non-zero
  4804  00050C                     	endif
  4805  00050C                     	if	0	;tblptru may be non-zero
  4806  00050C                     	endif
  4807  00050C  0009               	tblrd		*+
  4808  00050E  CFF5 F0AB          	movff	tablat,sprintf@fmt
  4809  000512  000A               	tblrd		*-
  4810  000514  CFF5 F0AC          	movff	tablat,sprintf@fmt+1
  4811  000518  0E24               	movlw	low (_CrData+20)
  4812  00051A  6EF6               	movwf	tblptrl,c
  4813  00051C  0E7D               	movlw	high (_CrData+20)
  4814  00051E  6EF7               	movwf	tblptrh,c
  4815  000520                     	if	0	;tblptru may be non-zero
  4816  000520                     	endif
  4817  000520                     	if	0	;tblptru may be non-zero
  4818  000520                     	endif
  4819  000520  0009               	tblrd		*+
  4820  000522  CFF5 F0AD          	movff	tablat,?_sprintf+4
  4821  000526  000A               	tblrd		*-
  4822  000528  CFF5 F0AE          	movff	tablat,?_sprintf+5
  4823  00052C  ECB1  F029         	call	_sprintf	;wreg free
  4824                           
  4825                           ;app.c: 176:      display_ea_line(mc_response);
  4826  000530  0E1E               	movlw	low APP_Tasks@mc_response
  4827  000532  0100               	movlb	0	; () banked
  4828  000534  6FB1               	movwf	display_ea_line@line& (0+255),b
  4829  000536  0E01               	movlw	high APP_Tasks@mc_response
  4830  000538  6FB2               	movwf	(display_ea_line@line+1)& (0+255),b
  4831  00053A  EC2A  F02F         	call	_display_ea_line	;wreg free
  4832  00053E  0E1E               	movlw	low APP_Tasks@mc_response
  4833  000540  0100               	movlb	0	; () banked
  4834  000542  6FA9               	movwf	sprintf@s& (0+255),b
  4835  000544  0E01               	movlw	high APP_Tasks@mc_response
  4836  000546  6FAA               	movwf	(sprintf@s+1)& (0+255),b
  4837  000548  0E52               	movlw	low (_CrData+66)
  4838  00054A  6EF6               	movwf	tblptrl,c
  4839  00054C  0E7D               	movlw	high (_CrData+66)
  4840  00054E  6EF7               	movwf	tblptrh,c
  4841  000550                     	if	0	;tblptru may be non-zero
  4842  000550                     	endif
  4843  000550                     	if	0	;tblptru may be non-zero
  4844  000550                     	endif
  4845  000550  0009               	tblrd		*+
  4846  000552  CFF5 F0AB          	movff	tablat,sprintf@fmt
  4847  000556  000A               	tblrd		*-
  4848  000558  CFF5 F0AC          	movff	tablat,sprintf@fmt+1
  4849  00055C  0E2A               	movlw	low (_CrData+26)
  4850  00055E  6EF6               	movwf	tblptrl,c
  4851  000560  0E7D               	movlw	high (_CrData+26)
  4852  000562  6EF7               	movwf	tblptrh,c
  4853  000564                     	if	0	;tblptru may be non-zero
  4854  000564                     	endif
  4855  000564                     	if	0	;tblptru may be non-zero
  4856  000564                     	endif
  4857  000564  0009               	tblrd		*+
  4858  000566  CFF5 F0AD          	movff	tablat,?_sprintf+4
  4859  00056A  000A               	tblrd		*-
  4860  00056C  CFF5 F0AE          	movff	tablat,?_sprintf+5
  4861  000570  ECB1  F029         	call	_sprintf	;wreg free
  4862                           
  4863                           ;app.c: 178:      display_ea_line(mc_response);
  4864  000574  0E1E               	movlw	low APP_Tasks@mc_response
  4865  000576  0100               	movlb	0	; () banked
  4866  000578  6FB1               	movwf	display_ea_line@line& (0+255),b
  4867  00057A  0E01               	movlw	high APP_Tasks@mc_response
  4868  00057C  6FB2               	movwf	(display_ea_line@line+1)& (0+255),b
  4869  00057E  EC2A  F02F         	call	_display_ea_line	;wreg free
  4870                           
  4871                           ;app.c: 179:      while (!appData.sw1) {
  4872  000582  D022               	goto	l11527
  4873  000584                     l11525:
  4874                           
  4875                           ; BSR set to: 1
  4876  000584  0E1E               	movlw	low APP_Tasks@mc_response
  4877  000586  0100               	movlb	0	; () banked
  4878  000588  6FA9               	movwf	sprintf@s& (0+255),b
  4879  00058A  0E01               	movlw	high APP_Tasks@mc_response
  4880  00058C  6FAA               	movwf	(sprintf@s+1)& (0+255),b
  4881  00058E  0E54               	movlw	low (_CrData+68)
  4882  000590  6EF6               	movwf	tblptrl,c
  4883  000592  0E7D               	movlw	high (_CrData+68)
  4884  000594  6EF7               	movwf	tblptrh,c
  4885  000596                     	if	0	;tblptru may be non-zero
  4886  000596                     	endif
  4887  000596                     	if	0	;tblptru may be non-zero
  4888  000596                     	endif
  4889  000596  0009               	tblrd		*+
  4890  000598  CFF5 F0AB          	movff	tablat,sprintf@fmt
  4891  00059C  000A               	tblrd		*-
  4892  00059E  CFF5 F0AC          	movff	tablat,sprintf@fmt+1
  4893  0005A2  0E14               	movlw	low (_CrData+4)
  4894  0005A4  6EF6               	movwf	tblptrl,c
  4895  0005A6  0E7D               	movlw	high (_CrData+4)
  4896  0005A8  6EF7               	movwf	tblptrh,c
  4897  0005AA                     	if	0	;tblptru may be non-zero
  4898  0005AA                     	endif
  4899  0005AA                     	if	0	;tblptru may be non-zero
  4900  0005AA                     	endif
  4901  0005AA  0009               	tblrd		*+
  4902  0005AC  CFF5 F0AD          	movff	tablat,?_sprintf+4
  4903  0005B0  000A               	tblrd		*-
  4904  0005B2  CFF5 F0AE          	movff	tablat,?_sprintf+5
  4905  0005B6  ECB1  F029         	call	_sprintf	;wreg free
  4906                           
  4907                           ;app.c: 181:       display_ea_line(mc_response);
  4908  0005BA  0E1E               	movlw	low APP_Tasks@mc_response
  4909  0005BC  0100               	movlb	0	; () banked
  4910  0005BE  6FB1               	movwf	display_ea_line@line& (0+255),b
  4911  0005C0  0E01               	movlw	high APP_Tasks@mc_response
  4912  0005C2  6FB2               	movwf	(display_ea_line@line+1)& (0+255),b
  4913  0005C4  EC2A  F02F         	call	_display_ea_line	;wreg free
  4914  0005C8                     l11527:
  4915                           
  4916                           ;app.c: 179:      while (!appData.sw1) {
  4917  0005C8  0101               	movlb	1	; () banked
  4918  0005CA  51D1               	movf	(_appData+68)& (0+255),w,b	;volatile
  4919  0005CC  B4D8               	btfsc	status,2,c
  4920  0005CE  D7DA               	goto	l11525
  4921                           
  4922                           ; BSR set to: 1
  4923  0005D0  0E1E               	movlw	low APP_Tasks@mc_response
  4924  0005D2  0100               	movlb	0	; () banked
  4925  0005D4  6FA9               	movwf	sprintf@s& (0+255),b
  4926  0005D6  0E01               	movlw	high APP_Tasks@mc_response
  4927  0005D8  6FAA               	movwf	(sprintf@s+1)& (0+255),b
  4928  0005DA  0E54               	movlw	low (_CrData+68)
  4929  0005DC  6EF6               	movwf	tblptrl,c
  4930  0005DE  0E7D               	movlw	high (_CrData+68)
  4931  0005E0  6EF7               	movwf	tblptrh,c
  4932  0005E2                     	if	0	;tblptru may be non-zero
  4933  0005E2                     	endif
  4934  0005E2                     	if	0	;tblptru may be non-zero
  4935  0005E2                     	endif
  4936  0005E2  0009               	tblrd		*+
  4937  0005E4  CFF5 F0AB          	movff	tablat,sprintf@fmt
  4938  0005E8  000A               	tblrd		*-
  4939  0005EA  CFF5 F0AC          	movff	tablat,sprintf@fmt+1
  4940  0005EE  0E16               	movlw	low (_CrData+6)
  4941  0005F0  6EF6               	movwf	tblptrl,c
  4942  0005F2  0E7D               	movlw	high (_CrData+6)
  4943  0005F4  6EF7               	movwf	tblptrh,c
  4944  0005F6                     	if	0	;tblptru may be non-zero
  4945  0005F6                     	endif
  4946  0005F6                     	if	0	;tblptru may be non-zero
  4947  0005F6                     	endif
  4948  0005F6  0009               	tblrd		*+
  4949  0005F8  CFF5 F0AD          	movff	tablat,?_sprintf+4
  4950  0005FC  000A               	tblrd		*-
  4951  0005FE  CFF5 F0AE          	movff	tablat,?_sprintf+5
  4952  000602  ECB1  F029         	call	_sprintf	;wreg free
  4953                           
  4954                           ;app.c: 184:      display_ea_line(mc_response);
  4955  000606  0E1E               	movlw	low APP_Tasks@mc_response
  4956  000608  0100               	movlb	0	; () banked
  4957  00060A  6FB1               	movwf	display_ea_line@line& (0+255),b
  4958  00060C  0E01               	movlw	high APP_Tasks@mc_response
  4959  00060E  6FB2               	movwf	(display_ea_line@line+1)& (0+255),b
  4960  000610  EC2A  F02F         	call	_display_ea_line	;wreg free
  4961                           
  4962                           ;app.c: 185:      TMR3_StartTimer();
  4963  000614  ECBE  F02F         	call	_TMR3_StartTimer	;wreg free
  4964                           
  4965                           ;app.c: 186:      appData.sw1 = 0;
  4966  000618  0E00               	movlw	0
  4967  00061A  0101               	movlb	1	; () banked
  4968  00061C  6FD1               	movwf	(_appData+68)& (0+255),b	;volatile
  4969                           
  4970                           ; BSR set to: 1
  4971                           ;app.c: 187:      WaitMs(100);
  4972  00061E  0E00               	movlw	0
  4973  000620  6E19               	movwf	WaitMs@numMilliseconds+1,c
  4974  000622  0E64               	movlw	100
  4975  000624  6E18               	movwf	WaitMs@numMilliseconds,c
  4976  000626  ECF4  F02E         	call	_WaitMs	;wreg free
  4977                           
  4978                           ;app.c: 188:      TMR3_StopTimer();
  4979  00062A  ECBC  F02F         	call	_TMR3_StopTimer	;wreg free
  4980                           
  4981                           ;app.c: 190:      clear_MC_port();
  4982  00062E  EC1F  F02D         	call	_clear_MC_port	;wreg free
  4983  000632  0E3E               	movlw	low (_CrData+46)
  4984  000634  6EF6               	movwf	tblptrl,c
  4985  000636  0E7D               	movlw	high (_CrData+46)
  4986  000638  6EF7               	movwf	tblptrh,c
  4987  00063A                     	if	0	;tblptru may be non-zero
  4988  00063A                     	endif
  4989  00063A                     	if	0	;tblptru may be non-zero
  4990  00063A                     	endif
  4991  00063A  0009               	tblrd		*+
  4992  00063C  CFF5 F01A          	movff	tablat,MC_SendCommand@data
  4993  000640  000A               	tblrd		*-
  4994  000642  CFF5 F01B          	movff	tablat,MC_SendCommand@data+1
  4995  000646  0E01               	movlw	1
  4996  000648  6E1C               	movwf	MC_SendCommand@wait,c
  4997  00064A  EC69  F028         	call	_MC_SendCommand	;wreg free
  4998  00064E  0E40               	movlw	low (_CrData+48)
  4999  000650  6EF6               	movwf	tblptrl,c
  5000  000652  0E7D               	movlw	high (_CrData+48)
  5001  000654  6EF7               	movwf	tblptrh,c
  5002  000656                     	if	0	;tblptru may be non-zero
  5003  000656                     	endif
  5004  000656                     	if	0	;tblptru may be non-zero
  5005  000656                     	endif
  5006  000656  0009               	tblrd		*+
  5007  000658  CFF5 F01A          	movff	tablat,MC_SendCommand@data
  5008  00065C  000A               	tblrd		*-
  5009  00065E  CFF5 F01B          	movff	tablat,MC_SendCommand@data+1
  5010  000662  0E01               	movlw	1
  5011  000664  6E1C               	movwf	MC_SendCommand@wait,c
  5012  000666  EC69  F028         	call	_MC_SendCommand	;wreg free
  5013  00066A  0E1E               	movlw	low APP_Tasks@mc_response
  5014  00066C  0100               	movlb	0	; () banked
  5015  00066E  6FA9               	movwf	sprintf@s& (0+255),b
  5016  000670  0E01               	movlw	high APP_Tasks@mc_response
  5017  000672  6FAA               	movwf	(sprintf@s+1)& (0+255),b
  5018  000674  0E4E               	movlw	low (_CrData+62)
  5019  000676  6EF6               	movwf	tblptrl,c
  5020  000678  0E7D               	movlw	high (_CrData+62)
  5021  00067A  6EF7               	movwf	tblptrh,c
  5022  00067C                     	if	0	;tblptru may be non-zero
  5023  00067C                     	endif
  5024  00067C                     	if	0	;tblptru may be non-zero
  5025  00067C                     	endif
  5026  00067C  0009               	tblrd		*+
  5027  00067E  CFF5 F0AB          	movff	tablat,sprintf@fmt
  5028  000682  000A               	tblrd		*-
  5029  000684  CFF5 F0AC          	movff	tablat,sprintf@fmt+1
  5030  000688  0E16               	movlw	low (_CrData+6)
  5031  00068A  6EF6               	movwf	tblptrl,c
  5032  00068C  0E7D               	movlw	high (_CrData+6)
  5033  00068E  6EF7               	movwf	tblptrh,c
  5034  000690                     	if	0	;tblptru may be non-zero
  5035  000690                     	endif
  5036  000690                     	if	0	;tblptru may be non-zero
  5037  000690                     	endif
  5038  000690  0009               	tblrd		*+
  5039  000692  CFF5 F0AD          	movff	tablat,?_sprintf+4
  5040  000696  000A               	tblrd		*-
  5041  000698  CFF5 F0AE          	movff	tablat,?_sprintf+5
  5042  00069C  ECB1  F029         	call	_sprintf	;wreg free
  5043                           
  5044                           ;app.c: 194:      display_ea_line(mc_response);
  5045  0006A0  0E1E               	movlw	low APP_Tasks@mc_response
  5046  0006A2  0100               	movlb	0	; () banked
  5047  0006A4  6FB1               	movwf	display_ea_line@line& (0+255),b
  5048  0006A6  0E01               	movlw	high APP_Tasks@mc_response
  5049  0006A8  6FB2               	movwf	(display_ea_line@line+1)& (0+255),b
  5050  0006AA  EC2A  F02F         	call	_display_ea_line	;wreg free
  5051  0006AE  0E1E               	movlw	low APP_Tasks@mc_response
  5052  0006B0  0100               	movlb	0	; () banked
  5053  0006B2  6FA9               	movwf	sprintf@s& (0+255),b
  5054  0006B4  0E01               	movlw	high APP_Tasks@mc_response
  5055  0006B6  6FAA               	movwf	(sprintf@s+1)& (0+255),b
  5056  0006B8  0E50               	movlw	low (_CrData+64)
  5057  0006BA  6EF6               	movwf	tblptrl,c
  5058  0006BC  0E7D               	movlw	high (_CrData+64)
  5059  0006BE  6EF7               	movwf	tblptrh,c
  5060  0006C0                     	if	0	;tblptru may be non-zero
  5061  0006C0                     	endif
  5062  0006C0                     	if	0	;tblptru may be non-zero
  5063  0006C0                     	endif
  5064  0006C0  0009               	tblrd		*+
  5065  0006C2  CFF5 F0AB          	movff	tablat,sprintf@fmt
  5066  0006C6  000A               	tblrd		*-
  5067  0006C8  CFF5 F0AC          	movff	tablat,sprintf@fmt+1
  5068  0006CC  0E16               	movlw	low (_CrData+6)
  5069  0006CE  6EF6               	movwf	tblptrl,c
  5070  0006D0  0E7D               	movlw	high (_CrData+6)
  5071  0006D2  6EF7               	movwf	tblptrh,c
  5072  0006D4                     	if	0	;tblptru may be non-zero
  5073  0006D4                     	endif
  5074  0006D4                     	if	0	;tblptru may be non-zero
  5075  0006D4                     	endif
  5076  0006D4  0009               	tblrd		*+
  5077  0006D6  CFF5 F0AD          	movff	tablat,?_sprintf+4
  5078  0006DA  000A               	tblrd		*-
  5079  0006DC  CFF5 F0AE          	movff	tablat,?_sprintf+5
  5080  0006E0  ECB1  F029         	call	_sprintf	;wreg free
  5081                           
  5082                           ;app.c: 196:      display_ea_line(mc_response);
  5083  0006E4  0E1E               	movlw	low APP_Tasks@mc_response
  5084  0006E6  0100               	movlb	0	; () banked
  5085  0006E8  6FB1               	movwf	display_ea_line@line& (0+255),b
  5086  0006EA  0E01               	movlw	high APP_Tasks@mc_response
  5087  0006EC  6FB2               	movwf	(display_ea_line@line+1)& (0+255),b
  5088  0006EE  EC2A  F02F         	call	_display_ea_line	;wreg free
  5089  0006F2  0E1E               	movlw	low APP_Tasks@mc_response
  5090  0006F4  0100               	movlb	0	; () banked
  5091  0006F6  6FA9               	movwf	sprintf@s& (0+255),b
  5092  0006F8  0E01               	movlw	high APP_Tasks@mc_response
  5093  0006FA  6FAA               	movwf	(sprintf@s+1)& (0+255),b
  5094  0006FC  0E52               	movlw	low (_CrData+66)
  5095  0006FE  6EF6               	movwf	tblptrl,c
  5096  000700  0E7D               	movlw	high (_CrData+66)
  5097  000702  6EF7               	movwf	tblptrh,c
  5098  000704                     	if	0	;tblptru may be non-zero
  5099  000704                     	endif
  5100  000704                     	if	0	;tblptru may be non-zero
  5101  000704                     	endif
  5102  000704  0009               	tblrd		*+
  5103  000706  CFF5 F0AB          	movff	tablat,sprintf@fmt
  5104  00070A  000A               	tblrd		*-
  5105  00070C  CFF5 F0AC          	movff	tablat,sprintf@fmt+1
  5106  000710  0E16               	movlw	low (_CrData+6)
  5107  000712  6EF6               	movwf	tblptrl,c
  5108  000714  0E7D               	movlw	high (_CrData+6)
  5109  000716  6EF7               	movwf	tblptrh,c
  5110  000718                     	if	0	;tblptru may be non-zero
  5111  000718                     	endif
  5112  000718                     	if	0	;tblptru may be non-zero
  5113  000718                     	endif
  5114  000718  0009               	tblrd		*+
  5115  00071A  CFF5 F0AD          	movff	tablat,?_sprintf+4
  5116  00071E  000A               	tblrd		*-
  5117  000720  CFF5 F0AE          	movff	tablat,?_sprintf+5
  5118  000724  ECB1  F029         	call	_sprintf	;wreg free
  5119                           
  5120                           ;app.c: 198:      display_ea_line(mc_response);
  5121  000728  0E1E               	movlw	low APP_Tasks@mc_response
  5122  00072A  0100               	movlb	0	; () banked
  5123  00072C  6FB1               	movwf	display_ea_line@line& (0+255),b
  5124  00072E  0E01               	movlw	high APP_Tasks@mc_response
  5125  000730  6FB2               	movwf	(display_ea_line@line+1)& (0+255),b
  5126  000732  EC2A  F02F         	call	_display_ea_line	;wreg free
  5127                           
  5128                           ;app.c: 200:      c_down = 15;
  5129  000736  0E0F               	movlw	15
  5130  000738  0100               	movlb	0	; () banked
  5131  00073A  6FBF               	movwf	APP_Tasks@c_down& (0+255),b
  5132                           
  5133                           ;app.c: 201:      while (c_down--) {
  5134  00073C  D02A               	goto	l11563
  5135  00073E                     l11559:
  5136                           
  5137                           ; BSR set to: 0
  5138  00073E  0E1E               	movlw	low APP_Tasks@mc_response
  5139  000740  6FA9               	movwf	sprintf@s& (0+255),b
  5140  000742  0E01               	movlw	high APP_Tasks@mc_response
  5141  000744  6FAA               	movwf	(sprintf@s+1)& (0+255),b
  5142  000746  0E56               	movlw	low (_CrData+70)
  5143  000748  6EF6               	movwf	tblptrl,c
  5144  00074A  0E7D               	movlw	high (_CrData+70)
  5145  00074C  6EF7               	movwf	tblptrh,c
  5146  00074E                     	if	0	;tblptru may be non-zero
  5147  00074E                     	endif
  5148  00074E                     	if	0	;tblptru may be non-zero
  5149  00074E                     	endif
  5150  00074E  0009               	tblrd		*+
  5151  000750  CFF5 F0AB          	movff	tablat,sprintf@fmt
  5152  000754  000A               	tblrd		*-
  5153  000756  CFF5 F0AC          	movff	tablat,sprintf@fmt+1
  5154  00075A  0E32               	movlw	low (_CrData+34)
  5155  00075C  6EF6               	movwf	tblptrl,c
  5156  00075E  0E7D               	movlw	high (_CrData+34)
  5157  000760  6EF7               	movwf	tblptrh,c
  5158  000762                     	if	0	;tblptru may be non-zero
  5159  000762                     	endif
  5160  000762                     	if	0	;tblptru may be non-zero
  5161  000762                     	endif
  5162  000762  0009               	tblrd		*+
  5163  000764  CFF5 F0AD          	movff	tablat,?_sprintf+4
  5164  000768  000A               	tblrd		*-
  5165  00076A  CFF5 F0AE          	movff	tablat,?_sprintf+5
  5166  00076E  C0BF  F0AF         	movff	APP_Tasks@c_down,?_sprintf+6
  5167  000772  6BB0               	clrf	(?_sprintf+7)& (0+255),b
  5168  000774  ECB1  F029         	call	_sprintf	;wreg free
  5169                           
  5170                           ;app.c: 203:       display_ea_line(mc_response);
  5171  000778  0E1E               	movlw	low APP_Tasks@mc_response
  5172  00077A  0100               	movlb	0	; () banked
  5173  00077C  6FB1               	movwf	display_ea_line@line& (0+255),b
  5174  00077E  0E01               	movlw	high APP_Tasks@mc_response
  5175  000780  6FB2               	movwf	(display_ea_line@line+1)& (0+255),b
  5176  000782  EC2A  F02F         	call	_display_ea_line	;wreg free
  5177                           
  5178                           ;app.c: 204:       WaitMs(1000);
  5179  000786  0E03               	movlw	3
  5180  000788  6E19               	movwf	WaitMs@numMilliseconds+1,c
  5181  00078A  0EE8               	movlw	232
  5182  00078C  6E18               	movwf	WaitMs@numMilliseconds,c
  5183  00078E  ECF4  F02E         	call	_WaitMs	;wreg free
  5184  000792                     l11563:
  5185                           
  5186                           ;app.c: 201:      while (c_down--) {
  5187  000792  0100               	movlb	0	; () banked
  5188  000794  07BF               	decf	APP_Tasks@c_down& (0+255),f,b
  5189  000796  29BF               	incf	APP_Tasks@c_down& (0+255),w,b
  5190  000798  A4D8               	btfss	status,2,c
  5191  00079A  D7D1               	goto	l11559
  5192                           
  5193                           ; BSR set to: 0
  5194                           ;app.c: 206:      clear_MC_port();
  5195  00079C  EC1F  F02D         	call	_clear_MC_port	;wreg free
  5196  0007A0  0E42               	movlw	low (_CrData+50)
  5197  0007A2  6EF6               	movwf	tblptrl,c
  5198  0007A4  0E7D               	movlw	high (_CrData+50)
  5199  0007A6  6EF7               	movwf	tblptrh,c
  5200  0007A8                     	if	0	;tblptru may be non-zero
  5201  0007A8                     	endif
  5202  0007A8                     	if	0	;tblptru may be non-zero
  5203  0007A8                     	endif
  5204  0007A8  0009               	tblrd		*+
  5205  0007AA  CFF5 F01A          	movff	tablat,MC_SendCommand@data
  5206  0007AE  000A               	tblrd		*-
  5207  0007B0  CFF5 F01B          	movff	tablat,MC_SendCommand@data+1
  5208  0007B4  0E01               	movlw	1
  5209  0007B6  6E1C               	movwf	MC_SendCommand@wait,c
  5210  0007B8  EC69  F028         	call	_MC_SendCommand	;wreg free
  5211                           
  5212                           ;app.c: 208:      WaitMs(300);
  5213  0007BC  0E01               	movlw	1
  5214  0007BE  6E19               	movwf	WaitMs@numMilliseconds+1,c
  5215  0007C0  0E2C               	movlw	44
  5216  0007C2  6E18               	movwf	WaitMs@numMilliseconds,c
  5217  0007C4  ECF4  F02E         	call	_WaitMs	;wreg free
  5218                           
  5219                           ;app.c: 211:      StartTimer(TMR_MC_COMMS, 1000);
  5220  0007C8  0E03               	movlw	3
  5221  0007CA  6E14               	movwf	StartTimer@count+1,c
  5222  0007CC  0EE8               	movlw	232
  5223  0007CE  6E13               	movwf	StartTimer@count,c
  5224  0007D0  0E02               	movlw	2
  5225  0007D2  ECD3  F02D         	call	_StartTimer
  5226                           
  5227                           ;app.c: 212:      while (!MC_ReceivePacket(appData.receive_packet)) {
  5228  0007D6  D00A               	goto	l11577
  5229  0007D8                     l11573:
  5230                           
  5231                           ;app.c: 213:       if (TimerDone(TMR_MC_COMMS)) {
  5232  0007D8  0E02               	movlw	2
  5233  0007DA  EC90  F02E         	call	_TimerDone
  5234  0007DE  0900               	iorlw	0
  5235  0007E0  B4D8               	btfsc	status,2,c
  5236  0007E2  D004               	goto	l11577
  5237                           
  5238                           ;app.c: 214:        appData.state = APP_INITIALIZATION_ERROR;
  5239  0007E4  0E01               	movlw	1
  5240  0007E6  0101               	movlb	1	; () banked
  5241  0007E8  6F8D               	movwf	_appData& (0+255),b	;volatile
  5242                           
  5243                           ;app.c: 215:        break;
  5244  0007EA  D009               	goto	u15300
  5245  0007EC                     l11577:
  5246                           
  5247                           ;app.c: 212:      while (!MC_ReceivePacket(appData.receive_packet)) {
  5248  0007EC  0E8F               	movlw	low (_appData+2)
  5249  0007EE  6E14               	movwf	MC_ReceivePacket@Message,c
  5250  0007F0  0E01               	movlw	high (_appData+2)
  5251  0007F2  6E15               	movwf	MC_ReceivePacket@Message+1,c
  5252  0007F4  EC86  F024         	call	_MC_ReceivePacket	;wreg free
  5253  0007F8  0900               	iorlw	0
  5254  0007FA  B4D8               	btfsc	status,2,c
  5255  0007FC  D7ED               	goto	l11573
  5256  0007FE                     u15300:
  5257                           
  5258                           ;app.c: 220:      StartTimer(TMR_MC_COMMS, 1000);
  5259  0007FE  0E03               	movlw	3
  5260  000800  6E14               	movwf	StartTimer@count+1,c
  5261  000802  0EE8               	movlw	232
  5262  000804  6E13               	movwf	StartTimer@count,c
  5263  000806  0E02               	movlw	2
  5264  000808  ECD3  F02D         	call	_StartTimer
  5265                           
  5266                           ;app.c: 221:      while (!MC_ReceivePacket(appData.receive_packet)) {
  5267  00080C  D00A               	goto	l11585
  5268  00080E                     l11581:
  5269                           
  5270                           ;app.c: 222:       if (TimerDone(TMR_MC_COMMS)) {
  5271  00080E  0E02               	movlw	2
  5272  000810  EC90  F02E         	call	_TimerDone
  5273  000814  0900               	iorlw	0
  5274  000816  B4D8               	btfsc	status,2,c
  5275  000818  D004               	goto	l11585
  5276                           
  5277                           ;app.c: 223:        appData.state = APP_INITIALIZATION_ERROR;
  5278  00081A  0E01               	movlw	1
  5279  00081C  0101               	movlb	1	; () banked
  5280  00081E  6F8D               	movwf	_appData& (0+255),b	;volatile
  5281                           
  5282                           ;app.c: 224:        break;
  5283  000820  D009               	goto	u15320
  5284  000822                     l11585:
  5285                           
  5286                           ;app.c: 221:      while (!MC_ReceivePacket(appData.receive_packet)) {
  5287  000822  0E8F               	movlw	low (_appData+2)
  5288  000824  6E14               	movwf	MC_ReceivePacket@Message,c
  5289  000826  0E01               	movlw	high (_appData+2)
  5290  000828  6E15               	movwf	MC_ReceivePacket@Message+1,c
  5291  00082A  EC86  F024         	call	_MC_ReceivePacket	;wreg free
  5292  00082E  0900               	iorlw	0
  5293  000830  B4D8               	btfsc	status,2,c
  5294  000832  D7ED               	goto	l11581
  5295  000834                     u15320:
  5296                           
  5297                           ;app.c: 229:      if (appData.state == APP_INITIALIZATION_ERROR)
  5298  000834  0101               	movlb	1	; () banked
  5299  000836  058D               	decf	_appData& (0+255),w,b	;volatile
  5300  000838  B4D8               	btfsc	status,2,c
  5301  00083A  D2B2               	goto	l11691
  5302                           
  5303                           ; BSR set to: 1
  5304                           ;app.c: 233:      clear_MC_port();
  5305  00083C  EC1F  F02D         	call	_clear_MC_port	;wreg free
  5306  000840  0E1E               	movlw	low APP_Tasks@mc_response
  5307  000842  0100               	movlb	0	; () banked
  5308  000844  6FA9               	movwf	sprintf@s& (0+255),b
  5309  000846  0E01               	movlw	high APP_Tasks@mc_response
  5310  000848  6FAA               	movwf	(sprintf@s+1)& (0+255),b
  5311  00084A  0E4E               	movlw	low (_CrData+62)
  5312  00084C  6EF6               	movwf	tblptrl,c
  5313  00084E  0E7D               	movlw	high (_CrData+62)
  5314  000850  6EF7               	movwf	tblptrh,c
  5315  000852                     	if	0	;tblptru may be non-zero
  5316  000852                     	endif
  5317  000852                     	if	0	;tblptru may be non-zero
  5318  000852                     	endif
  5319  000852  0009               	tblrd		*+
  5320  000854  CFF5 F0AB          	movff	tablat,sprintf@fmt
  5321  000858  000A               	tblrd		*-
  5322  00085A  CFF5 F0AC          	movff	tablat,sprintf@fmt+1
  5323  00085E  0E16               	movlw	low (_CrData+6)
  5324  000860  6EF6               	movwf	tblptrl,c
  5325  000862  0E7D               	movlw	high (_CrData+6)
  5326  000864  6EF7               	movwf	tblptrh,c
  5327  000866                     	if	0	;tblptru may be non-zero
  5328  000866                     	endif
  5329  000866                     	if	0	;tblptru may be non-zero
  5330  000866                     	endif
  5331  000866  0009               	tblrd		*+
  5332  000868  CFF5 F0AD          	movff	tablat,?_sprintf+4
  5333  00086C  000A               	tblrd		*-
  5334  00086E  CFF5 F0AE          	movff	tablat,?_sprintf+5
  5335  000872  ECB1  F029         	call	_sprintf	;wreg free
  5336                           
  5337                           ;app.c: 235:      display_ea_line(mc_response);
  5338  000876  0E1E               	movlw	low APP_Tasks@mc_response
  5339  000878  0100               	movlb	0	; () banked
  5340  00087A  6FB1               	movwf	display_ea_line@line& (0+255),b
  5341  00087C  0E01               	movlw	high APP_Tasks@mc_response
  5342  00087E  6FB2               	movwf	(display_ea_line@line+1)& (0+255),b
  5343  000880  EC2A  F02F         	call	_display_ea_line	;wreg free
  5344  000884  0E1E               	movlw	low APP_Tasks@mc_response
  5345  000886  0100               	movlb	0	; () banked
  5346  000888  6FA9               	movwf	sprintf@s& (0+255),b
  5347  00088A  0E01               	movlw	high APP_Tasks@mc_response
  5348  00088C  6FAA               	movwf	(sprintf@s+1)& (0+255),b
  5349  00088E  0E4E               	movlw	low (_CrData+62)
  5350  000890  6EF6               	movwf	tblptrl,c
  5351  000892  0E7D               	movlw	high (_CrData+62)
  5352  000894  6EF7               	movwf	tblptrh,c
  5353  000896                     	if	0	;tblptru may be non-zero
  5354  000896                     	endif
  5355  000896                     	if	0	;tblptru may be non-zero
  5356  000896                     	endif
  5357  000896  0009               	tblrd		*+
  5358  000898  CFF5 F0AB          	movff	tablat,sprintf@fmt
  5359  00089C  000A               	tblrd		*-
  5360  00089E  CFF5 F0AC          	movff	tablat,sprintf@fmt+1
  5361  0008A2  0E8F               	movlw	low (_appData+2)
  5362  0008A4  6FAD               	movwf	(?_sprintf+4)& (0+255),b
  5363  0008A6  0E01               	movlw	high (_appData+2)
  5364  0008A8  6FAE               	movwf	(?_sprintf+5)& (0+255),b
  5365  0008AA  ECB1  F029         	call	_sprintf	;wreg free
  5366                           
  5367                           ;app.c: 237:      display_ea_line(mc_response);
  5368  0008AE  0E1E               	movlw	low APP_Tasks@mc_response
  5369  0008B0  0100               	movlb	0	; () banked
  5370  0008B2  6FB1               	movwf	display_ea_line@line& (0+255),b
  5371  0008B4  0E01               	movlw	high APP_Tasks@mc_response
  5372  0008B6  6FB2               	movwf	(display_ea_line@line+1)& (0+255),b
  5373  0008B8  EC2A  F02F         	call	_display_ea_line	;wreg free
  5374  0008BC  0E8F               	movlw	low (_appData+2)
  5375  0008BE  6E1E               	movwf	strstr@h,c
  5376  0008C0  0E01               	movlw	high (_appData+2)
  5377  0008C2  6E1F               	movwf	strstr@h+1,c
  5378  0008C4  0E30               	movlw	low (_CrData+32)
  5379  0008C6  6EF6               	movwf	tblptrl,c
  5380  0008C8  0E7D               	movlw	high (_CrData+32)
  5381  0008CA  6EF7               	movwf	tblptrh,c
  5382  0008CC                     	if	0	;tblptru may be non-zero
  5383  0008CC                     	endif
  5384  0008CC                     	if	0	;tblptru may be non-zero
  5385  0008CC                     	endif
  5386  0008CC  0009               	tblrd		*+
  5387  0008CE  CFF5 F020          	movff	tablat,strstr@n
  5388  0008D2  000A               	tblrd		*-
  5389  0008D4  CFF5 F021          	movff	tablat,strstr@n+1
  5390  0008D8  ECDA  F027         	call	_strstr	;wreg free
  5391  0008DC  C01E  F0C6         	movff	?_strstr,APP_Tasks@m_start
  5392  0008E0  C01F  F0C7         	movff	?_strstr+1,APP_Tasks@m_start+1
  5393  0008E4  0100               	movlb	0	; () banked
  5394  0008E6  51C6               	movf	APP_Tasks@m_start& (0+255),w,b
  5395  0008E8  11C7               	iorwf	(APP_Tasks@m_start+1)& (0+255),w,b
  5396  0008EA  B4D8               	btfsc	status,2,c
  5397  0008EC  D079               	goto	l11621
  5398                           
  5399                           ; BSR set to: 0
  5400                           ;app.c: 241:       m_start[4] = ' ';
  5401  0008EE  EE20 F004          	lfsr	2,4
  5402  0008F2  51C6               	movf	APP_Tasks@m_start& (0+255),w,b
  5403  0008F4  26D9               	addwf	fsr2l,f,c
  5404  0008F6  51C7               	movf	(APP_Tasks@m_start+1)& (0+255),w,b
  5405  0008F8  22DA               	addwfc	fsr2h,f,c
  5406  0008FA  0E20               	movlw	32
  5407  0008FC  6EDF               	movwf	indf2,c
  5408                           
  5409                           ;app.c: 242:       m_start[5] = '\000';
  5410  0008FE  EE20 F005          	lfsr	2,5
  5411  000902  51C6               	movf	APP_Tasks@m_start& (0+255),w,b
  5412  000904  26D9               	addwf	fsr2l,f,c
  5413  000906  51C7               	movf	(APP_Tasks@m_start+1)& (0+255),w,b
  5414  000908  22DA               	addwfc	fsr2h,f,c
  5415  00090A  0E00               	movlw	0
  5416  00090C  6EDF               	movwf	indf2,c
  5417                           
  5418                           ; BSR set to: 0
  5419                           ;app.c: 243:       offset = get_pfb(&m_start[-8]);
  5420  00090E  0EF8               	movlw	248
  5421  000910  25C6               	addwf	APP_Tasks@m_start& (0+255),w,b
  5422  000912  6FAC               	movwf	get_pfb@buf& (0+255),b
  5423  000914  0EFF               	movlw	255
  5424  000916  21C7               	addwfc	(APP_Tasks@m_start+1)& (0+255),w,b
  5425  000918  6FAD               	movwf	(get_pfb@buf+1)& (0+255),b
  5426  00091A  ECEC  F01E         	call	_get_pfb	;wreg free
  5427  00091E  C0AC  F0BD         	movff	?_get_pfb,APP_Tasks@offset
  5428  000922  C0AD  F0BE         	movff	?_get_pfb+1,APP_Tasks@offset+1
  5429                           
  5430                           ;app.c: 244:       if (offset == 666) {
  5431  000926  0E9A               	movlw	154
  5432  000928  0100               	movlb	0	; () banked
  5433  00092A  19BD               	xorwf	APP_Tasks@offset& (0+255),w,b
  5434  00092C  E103               	bnz	u15351
  5435  00092E  0E02               	movlw	2
  5436  000930  19BE               	xorwf	(APP_Tasks@offset+1)& (0+255),w,b
  5437  000932  A4D8               	btfss	status,2,c
  5438  000934                     u15351:
  5439  000934  D0B2               	goto	l11635
  5440                           
  5441                           ; BSR set to: 0
  5442  000936  0E1E               	movlw	low APP_Tasks@mc_response
  5443  000938  6FA9               	movwf	sprintf@s& (0+255),b
  5444  00093A  0E01               	movlw	high APP_Tasks@mc_response
  5445  00093C  6FAA               	movwf	(sprintf@s+1)& (0+255),b
  5446  00093E  0E50               	movlw	low (_CrData+64)
  5447  000940  6EF6               	movwf	tblptrl,c
  5448  000942  0E7D               	movlw	high (_CrData+64)
  5449  000944  6EF7               	movwf	tblptrh,c
  5450  000946                     	if	0	;tblptru may be non-zero
  5451  000946                     	endif
  5452  000946                     	if	0	;tblptru may be non-zero
  5453  000946                     	endif
  5454  000946  0009               	tblrd		*+
  5455  000948  CFF5 F0AB          	movff	tablat,sprintf@fmt
  5456  00094C  000A               	tblrd		*-
  5457  00094E  CFF5 F0AC          	movff	tablat,sprintf@fmt+1
  5458  000952  0E4A               	movlw	low (_CrData+58)
  5459  000954  6EF6               	movwf	tblptrl,c
  5460  000956  0E7D               	movlw	high (_CrData+58)
  5461  000958  6EF7               	movwf	tblptrh,c
  5462  00095A                     	if	0	;tblptru may be non-zero
  5463  00095A                     	endif
  5464  00095A                     	if	0	;tblptru may be non-zero
  5465  00095A                     	endif
  5466  00095A  0009               	tblrd		*+
  5467  00095C  CFF5 F0AD          	movff	tablat,?_sprintf+4
  5468  000960  000A               	tblrd		*-
  5469  000962  CFF5 F0AE          	movff	tablat,?_sprintf+5
  5470  000966  ECB1  F029         	call	_sprintf	;wreg free
  5471                           
  5472                           ;app.c: 246:        display_ea_line(mc_response);
  5473  00096A  0E1E               	movlw	low APP_Tasks@mc_response
  5474  00096C  0100               	movlb	0	; () banked
  5475  00096E  6FB1               	movwf	display_ea_line@line& (0+255),b
  5476  000970  0E01               	movlw	high APP_Tasks@mc_response
  5477  000972  6FB2               	movwf	(display_ea_line@line+1)& (0+255),b
  5478  000974  EC2A  F02F         	call	_display_ea_line	;wreg free
  5479                           
  5480                           ;app.c: 247:        c_down = 15;
  5481  000978  0E0F               	movlw	15
  5482  00097A  0100               	movlb	0	; () banked
  5483  00097C  6FBF               	movwf	APP_Tasks@c_down& (0+255),b
  5484                           
  5485                           ;app.c: 248:        while (c_down--) {
  5486  00097E  D02A               	goto	l11617
  5487  000980                     l11613:
  5488                           
  5489                           ; BSR set to: 0
  5490  000980  0E1E               	movlw	low APP_Tasks@mc_response
  5491  000982  6FA9               	movwf	sprintf@s& (0+255),b
  5492  000984  0E01               	movlw	high APP_Tasks@mc_response
  5493  000986  6FAA               	movwf	(sprintf@s+1)& (0+255),b
  5494  000988  0E56               	movlw	low (_CrData+70)
  5495  00098A  6EF6               	movwf	tblptrl,c
  5496  00098C  0E7D               	movlw	high (_CrData+70)
  5497  00098E  6EF7               	movwf	tblptrh,c
  5498  000990                     	if	0	;tblptru may be non-zero
  5499  000990                     	endif
  5500  000990                     	if	0	;tblptru may be non-zero
  5501  000990                     	endif
  5502  000990  0009               	tblrd		*+
  5503  000992  CFF5 F0AB          	movff	tablat,sprintf@fmt
  5504  000996  000A               	tblrd		*-
  5505  000998  CFF5 F0AC          	movff	tablat,sprintf@fmt+1
  5506  00099C  0E18               	movlw	low (_CrData+8)
  5507  00099E  6EF6               	movwf	tblptrl,c
  5508  0009A0  0E7D               	movlw	high (_CrData+8)
  5509  0009A2  6EF7               	movwf	tblptrh,c
  5510  0009A4                     	if	0	;tblptru may be non-zero
  5511  0009A4                     	endif
  5512  0009A4                     	if	0	;tblptru may be non-zero
  5513  0009A4                     	endif
  5514  0009A4  0009               	tblrd		*+
  5515  0009A6  CFF5 F0AD          	movff	tablat,?_sprintf+4
  5516  0009AA  000A               	tblrd		*-
  5517  0009AC  CFF5 F0AE          	movff	tablat,?_sprintf+5
  5518  0009B0  C0BF  F0AF         	movff	APP_Tasks@c_down,?_sprintf+6
  5519  0009B4  6BB0               	clrf	(?_sprintf+7)& (0+255),b
  5520  0009B6  ECB1  F029         	call	_sprintf	;wreg free
  5521                           
  5522                           ;app.c: 250:         display_ea_line(mc_response);
  5523  0009BA  0E1E               	movlw	low APP_Tasks@mc_response
  5524  0009BC  0100               	movlb	0	; () banked
  5525  0009BE  6FB1               	movwf	display_ea_line@line& (0+255),b
  5526  0009C0  0E01               	movlw	high APP_Tasks@mc_response
  5527  0009C2  6FB2               	movwf	(display_ea_line@line+1)& (0+255),b
  5528  0009C4  EC2A  F02F         	call	_display_ea_line	;wreg free
  5529                           
  5530                           ;app.c: 251:         WaitMs(333);
  5531  0009C8  0E01               	movlw	1
  5532  0009CA  6E19               	movwf	WaitMs@numMilliseconds+1,c
  5533  0009CC  0E4D               	movlw	77
  5534  0009CE  6E18               	movwf	WaitMs@numMilliseconds,c
  5535  0009D0  ECF4  F02E         	call	_WaitMs	;wreg free
  5536  0009D4                     l11617:
  5537                           
  5538                           ;app.c: 248:        while (c_down--) {
  5539  0009D4  0100               	movlb	0	; () banked
  5540  0009D6  07BF               	decf	APP_Tasks@c_down& (0+255),f,b
  5541  0009D8  29BF               	incf	APP_Tasks@c_down& (0+255),w,b
  5542  0009DA  A4D8               	btfss	status,2,c
  5543  0009DC  D7D1               	goto	l11613
  5544  0009DE  D058               	goto	L30
  5545  0009E0                     l11621:
  5546                           
  5547                           ; BSR set to: 0
  5548                           ;app.c: 260:       offset = 999;
  5549  0009E0  0E03               	movlw	3
  5550  0009E2  6FBE               	movwf	(APP_Tasks@offset+1)& (0+255),b
  5551  0009E4  0EE7               	movlw	231
  5552  0009E6  6FBD               	movwf	APP_Tasks@offset& (0+255),b
  5553                           
  5554                           ; BSR set to: 0
  5555  0009E8  0E1E               	movlw	low APP_Tasks@mc_response
  5556  0009EA  6FA9               	movwf	sprintf@s& (0+255),b
  5557  0009EC  0E01               	movlw	high APP_Tasks@mc_response
  5558  0009EE  6FAA               	movwf	(sprintf@s+1)& (0+255),b
  5559  0009F0  0E50               	movlw	low (_CrData+64)
  5560  0009F2  6EF6               	movwf	tblptrl,c
  5561  0009F4  0E7D               	movlw	high (_CrData+64)
  5562  0009F6  6EF7               	movwf	tblptrh,c
  5563  0009F8                     	if	0	;tblptru may be non-zero
  5564  0009F8                     	endif
  5565  0009F8                     	if	0	;tblptru may be non-zero
  5566  0009F8                     	endif
  5567  0009F8  0009               	tblrd		*+
  5568  0009FA  CFF5 F0AB          	movff	tablat,sprintf@fmt
  5569  0009FE  000A               	tblrd		*-
  5570  000A00  CFF5 F0AC          	movff	tablat,sprintf@fmt+1
  5571  000A04  0E4A               	movlw	low (_CrData+58)
  5572  000A06  6EF6               	movwf	tblptrl,c
  5573  000A08  0E7D               	movlw	high (_CrData+58)
  5574  000A0A  6EF7               	movwf	tblptrh,c
  5575  000A0C                     	if	0	;tblptru may be non-zero
  5576  000A0C                     	endif
  5577  000A0C                     	if	0	;tblptru may be non-zero
  5578  000A0C                     	endif
  5579  000A0C  0009               	tblrd		*+
  5580  000A0E  CFF5 F0AD          	movff	tablat,?_sprintf+4
  5581  000A12  000A               	tblrd		*-
  5582  000A14  CFF5 F0AE          	movff	tablat,?_sprintf+5
  5583  000A18  ECB1  F029         	call	_sprintf	;wreg free
  5584                           
  5585                           ;app.c: 262:       display_ea_line(mc_response);
  5586  000A1C  0E1E               	movlw	low APP_Tasks@mc_response
  5587  000A1E  0100               	movlb	0	; () banked
  5588  000A20  6FB1               	movwf	display_ea_line@line& (0+255),b
  5589  000A22  0E01               	movlw	high APP_Tasks@mc_response
  5590  000A24  6FB2               	movwf	(display_ea_line@line+1)& (0+255),b
  5591  000A26  EC2A  F02F         	call	_display_ea_line	;wreg free
  5592                           
  5593                           ;app.c: 263:       c_down = 15;
  5594  000A2A  0E0F               	movlw	15
  5595  000A2C  0100               	movlb	0	; () banked
  5596  000A2E  6FBF               	movwf	APP_Tasks@c_down& (0+255),b
  5597                           
  5598                           ;app.c: 264:       while (c_down--) {
  5599  000A30  D02A               	goto	l11631
  5600  000A32                     l11627:
  5601                           
  5602                           ; BSR set to: 0
  5603  000A32  0E1E               	movlw	low APP_Tasks@mc_response
  5604  000A34  6FA9               	movwf	sprintf@s& (0+255),b
  5605  000A36  0E01               	movlw	high APP_Tasks@mc_response
  5606  000A38  6FAA               	movwf	(sprintf@s+1)& (0+255),b
  5607  000A3A  0E56               	movlw	low (_CrData+70)
  5608  000A3C  6EF6               	movwf	tblptrl,c
  5609  000A3E  0E7D               	movlw	high (_CrData+70)
  5610  000A40  6EF7               	movwf	tblptrh,c
  5611  000A42                     	if	0	;tblptru may be non-zero
  5612  000A42                     	endif
  5613  000A42                     	if	0	;tblptru may be non-zero
  5614  000A42                     	endif
  5615  000A42  0009               	tblrd		*+
  5616  000A44  CFF5 F0AB          	movff	tablat,sprintf@fmt
  5617  000A48  000A               	tblrd		*-
  5618  000A4A  CFF5 F0AC          	movff	tablat,sprintf@fmt+1
  5619  000A4E  0E18               	movlw	low (_CrData+8)
  5620  000A50  6EF6               	movwf	tblptrl,c
  5621  000A52  0E7D               	movlw	high (_CrData+8)
  5622  000A54  6EF7               	movwf	tblptrh,c
  5623  000A56                     	if	0	;tblptru may be non-zero
  5624  000A56                     	endif
  5625  000A56                     	if	0	;tblptru may be non-zero
  5626  000A56                     	endif
  5627  000A56  0009               	tblrd		*+
  5628  000A58  CFF5 F0AD          	movff	tablat,?_sprintf+4
  5629  000A5C  000A               	tblrd		*-
  5630  000A5E  CFF5 F0AE          	movff	tablat,?_sprintf+5
  5631  000A62  C0BF  F0AF         	movff	APP_Tasks@c_down,?_sprintf+6
  5632  000A66  6BB0               	clrf	(?_sprintf+7)& (0+255),b
  5633  000A68  ECB1  F029         	call	_sprintf	;wreg free
  5634                           
  5635                           ;app.c: 266:        display_ea_line(mc_response);
  5636  000A6C  0E1E               	movlw	low APP_Tasks@mc_response
  5637  000A6E  0100               	movlb	0	; () banked
  5638  000A70  6FB1               	movwf	display_ea_line@line& (0+255),b
  5639  000A72  0E01               	movlw	high APP_Tasks@mc_response
  5640  000A74  6FB2               	movwf	(display_ea_line@line+1)& (0+255),b
  5641  000A76  EC2A  F02F         	call	_display_ea_line	;wreg free
  5642                           
  5643                           ;app.c: 267:        WaitMs(333);
  5644  000A7A  0E01               	movlw	1
  5645  000A7C  6E19               	movwf	WaitMs@numMilliseconds+1,c
  5646  000A7E  0E4D               	movlw	77
  5647  000A80  6E18               	movwf	WaitMs@numMilliseconds,c
  5648  000A82  ECF4  F02E         	call	_WaitMs	;wreg free
  5649  000A86                     l11631:
  5650                           
  5651                           ;app.c: 264:       while (c_down--) {
  5652  000A86  0100               	movlb	0	; () banked
  5653  000A88  07BF               	decf	APP_Tasks@c_down& (0+255),f,b
  5654  000A8A  29BF               	incf	APP_Tasks@c_down& (0+255),w,b
  5655  000A8C  A4D8               	btfss	status,2,c
  5656  000A8E  D7D1               	goto	l11627
  5657  000A90                     L30:
  5658                           
  5659                           ; BSR set to: 0
  5660  000A90  00FF               	reset		;# 
  5661                           
  5662                           ;app.c: 272:       appData.state = APP_INITIALIZATION_ERROR;
  5663  000A92  0E01               	movlw	1
  5664  000A94  0101               	movlb	1	; () banked
  5665  000A96  6F8D               	movwf	_appData& (0+255),b	;volatile
  5666                           
  5667                           ;app.c: 273:       break;
  5668  000A98  D183               	goto	l11691
  5669  000A9A                     l11635:
  5670                           
  5671                           ; BSR set to: 0
  5672  000A9A  0E1E               	movlw	low APP_Tasks@mc_response
  5673  000A9C  6FA9               	movwf	sprintf@s& (0+255),b
  5674  000A9E  0E01               	movlw	high APP_Tasks@mc_response
  5675  000AA0  6FAA               	movwf	(sprintf@s+1)& (0+255),b
  5676  000AA2  0E50               	movlw	low (_CrData+64)
  5677  000AA4  6EF6               	movwf	tblptrl,c
  5678  000AA6  0E7D               	movlw	high (_CrData+64)
  5679  000AA8  6EF7               	movwf	tblptrh,c
  5680  000AAA                     	if	0	;tblptru may be non-zero
  5681  000AAA                     	endif
  5682  000AAA                     	if	0	;tblptru may be non-zero
  5683  000AAA                     	endif
  5684  000AAA  0009               	tblrd		*+
  5685  000AAC  CFF5 F0AB          	movff	tablat,sprintf@fmt
  5686  000AB0  000A               	tblrd		*-
  5687  000AB2  CFF5 F0AC          	movff	tablat,sprintf@fmt+1
  5688  000AB6  0E16               	movlw	low (_CrData+6)
  5689  000AB8  6EF6               	movwf	tblptrl,c
  5690  000ABA  0E7D               	movlw	high (_CrData+6)
  5691  000ABC  6EF7               	movwf	tblptrh,c
  5692  000ABE                     	if	0	;tblptru may be non-zero
  5693  000ABE                     	endif
  5694  000ABE                     	if	0	;tblptru may be non-zero
  5695  000ABE                     	endif
  5696  000ABE  0009               	tblrd		*+
  5697  000AC0  CFF5 F0AD          	movff	tablat,?_sprintf+4
  5698  000AC4  000A               	tblrd		*-
  5699  000AC6  CFF5 F0AE          	movff	tablat,?_sprintf+5
  5700  000ACA  ECB1  F029         	call	_sprintf	;wreg free
  5701                           
  5702                           ;app.c: 277:      display_ea_line(mc_response);
  5703  000ACE  0E1E               	movlw	low APP_Tasks@mc_response
  5704  000AD0  0100               	movlb	0	; () banked
  5705  000AD2  6FB1               	movwf	display_ea_line@line& (0+255),b
  5706  000AD4  0E01               	movlw	high APP_Tasks@mc_response
  5707  000AD6  6FB2               	movwf	(display_ea_line@line+1)& (0+255),b
  5708  000AD8  EC2A  F02F         	call	_display_ea_line	;wreg free
  5709  000ADC  0E1E               	movlw	low APP_Tasks@mc_response
  5710  000ADE  0100               	movlb	0	; () banked
  5711  000AE0  6FA9               	movwf	sprintf@s& (0+255),b
  5712  000AE2  0E01               	movlw	high APP_Tasks@mc_response
  5713  000AE4  6FAA               	movwf	(sprintf@s+1)& (0+255),b
  5714  000AE6  0EA6               	movlw	low (_RsData+2)
  5715  000AE8  6EF6               	movwf	tblptrl,c
  5716  000AEA  0E7D               	movlw	high (_RsData+2)
  5717  000AEC  6EF7               	movwf	tblptrh,c
  5718  000AEE                     	if	0	;tblptru may be non-zero
  5719  000AEE                     	endif
  5720  000AEE                     	if	0	;tblptru may be non-zero
  5721  000AEE                     	endif
  5722  000AEE  0009               	tblrd		*+
  5723  000AF0  CFF5 F0AB          	movff	tablat,sprintf@fmt
  5724  000AF4  000A               	tblrd		*-
  5725  000AF6  CFF5 F0AC          	movff	tablat,sprintf@fmt+1
  5726  000AFA  C0BD  F0AD         	movff	APP_Tasks@offset,?_sprintf+4
  5727  000AFE  C0BE  F0AE         	movff	APP_Tasks@offset+1,?_sprintf+5
  5728  000B02  ECB1  F029         	call	_sprintf	;wreg free
  5729                           
  5730                           ;app.c: 279:      display_ea_line(mc_response);
  5731  000B06  0E1E               	movlw	low APP_Tasks@mc_response
  5732  000B08  0100               	movlb	0	; () banked
  5733  000B0A  6FB1               	movwf	display_ea_line@line& (0+255),b
  5734  000B0C  0E01               	movlw	high APP_Tasks@mc_response
  5735  000B0E  6FB2               	movwf	(display_ea_line@line+1)& (0+255),b
  5736  000B10  EC2A  F02F         	call	_display_ea_line	;wreg free
  5737                           
  5738                           ;app.c: 280:      WaitMs(6000);
  5739  000B14  0E17               	movlw	23
  5740  000B16  6E19               	movwf	WaitMs@numMilliseconds+1,c
  5741  000B18  0E70               	movlw	112
  5742  000B1A  6E18               	movwf	WaitMs@numMilliseconds,c
  5743  000B1C  ECF4  F02E         	call	_WaitMs	;wreg free
  5744  000B20  0E34               	movlw	low (_CrData+36)
  5745  000B22  6EF6               	movwf	tblptrl,c
  5746  000B24  0E7D               	movlw	high (_CrData+36)
  5747  000B26  6EF7               	movwf	tblptrh,c
  5748  000B28                     	if	0	;tblptru may be non-zero
  5749  000B28                     	endif
  5750  000B28                     	if	0	;tblptru may be non-zero
  5751  000B28                     	endif
  5752  000B28  0009               	tblrd		*+
  5753  000B2A  CFF5 F01A          	movff	tablat,MC_SendCommand@data
  5754  000B2E  000A               	tblrd		*-
  5755  000B30  CFF5 F01B          	movff	tablat,MC_SendCommand@data+1
  5756  000B34  0E01               	movlw	1
  5757  000B36  6E1C               	movwf	MC_SendCommand@wait,c
  5758  000B38  EC69  F028         	call	_MC_SendCommand	;wreg free
  5759  000B3C  0E1E               	movlw	low APP_Tasks@mc_response
  5760  000B3E  0100               	movlb	0	; () banked
  5761  000B40  6FA9               	movwf	sprintf@s& (0+255),b
  5762  000B42  0E01               	movlw	high APP_Tasks@mc_response
  5763  000B44  6FAA               	movwf	(sprintf@s+1)& (0+255),b
  5764  000B46  0E50               	movlw	low (_CrData+64)
  5765  000B48  6EF6               	movwf	tblptrl,c
  5766  000B4A  0E7D               	movlw	high (_CrData+64)
  5767  000B4C  6EF7               	movwf	tblptrh,c
  5768  000B4E                     	if	0	;tblptru may be non-zero
  5769  000B4E                     	endif
  5770  000B4E                     	if	0	;tblptru may be non-zero
  5771  000B4E                     	endif
  5772  000B4E  0009               	tblrd		*+
  5773  000B50  CFF5 F0AB          	movff	tablat,sprintf@fmt
  5774  000B54  000A               	tblrd		*-
  5775  000B56  CFF5 F0AC          	movff	tablat,sprintf@fmt+1
  5776  000B5A  0E28               	movlw	low (_CrData+24)
  5777  000B5C  6EF6               	movwf	tblptrl,c
  5778  000B5E  0E7D               	movlw	high (_CrData+24)
  5779  000B60  6EF7               	movwf	tblptrh,c
  5780  000B62                     	if	0	;tblptru may be non-zero
  5781  000B62                     	endif
  5782  000B62                     	if	0	;tblptru may be non-zero
  5783  000B62                     	endif
  5784  000B62  0009               	tblrd		*+
  5785  000B64  CFF5 F0AD          	movff	tablat,?_sprintf+4
  5786  000B68  000A               	tblrd		*-
  5787  000B6A  CFF5 F0AE          	movff	tablat,?_sprintf+5
  5788  000B6E  ECB1  F029         	call	_sprintf	;wreg free
  5789                           
  5790                           ;app.c: 285:      display_ea_line(mc_response);
  5791  000B72  0E1E               	movlw	low APP_Tasks@mc_response
  5792  000B74  0100               	movlb	0	; () banked
  5793  000B76  6FB1               	movwf	display_ea_line@line& (0+255),b
  5794  000B78  0E01               	movlw	high APP_Tasks@mc_response
  5795  000B7A  6FB2               	movwf	(display_ea_line@line+1)& (0+255),b
  5796  000B7C  EC2A  F02F         	call	_display_ea_line	;wreg free
  5797  000B80  0E1E               	movlw	low APP_Tasks@mc_response
  5798  000B82  0100               	movlb	0	; () banked
  5799  000B84  6FA9               	movwf	sprintf@s& (0+255),b
  5800  000B86  0E01               	movlw	high APP_Tasks@mc_response
  5801  000B88  6FAA               	movwf	(sprintf@s+1)& (0+255),b
  5802  000B8A  0E52               	movlw	low (_CrData+66)
  5803  000B8C  6EF6               	movwf	tblptrl,c
  5804  000B8E  0E7D               	movlw	high (_CrData+66)
  5805  000B90  6EF7               	movwf	tblptrh,c
  5806  000B92                     	if	0	;tblptru may be non-zero
  5807  000B92                     	endif
  5808  000B92                     	if	0	;tblptru may be non-zero
  5809  000B92                     	endif
  5810  000B92  0009               	tblrd		*+
  5811  000B94  CFF5 F0AB          	movff	tablat,sprintf@fmt
  5812  000B98  000A               	tblrd		*-
  5813  000B9A  CFF5 F0AC          	movff	tablat,sprintf@fmt+1
  5814  000B9E  0E2E               	movlw	low (_CrData+30)
  5815  000BA0  6EF6               	movwf	tblptrl,c
  5816  000BA2  0E7D               	movlw	high (_CrData+30)
  5817  000BA4  6EF7               	movwf	tblptrh,c
  5818  000BA6                     	if	0	;tblptru may be non-zero
  5819  000BA6                     	endif
  5820  000BA6                     	if	0	;tblptru may be non-zero
  5821  000BA6                     	endif
  5822  000BA6  0009               	tblrd		*+
  5823  000BA8  CFF5 F0AD          	movff	tablat,?_sprintf+4
  5824  000BAC  000A               	tblrd		*-
  5825  000BAE  CFF5 F0AE          	movff	tablat,?_sprintf+5
  5826  000BB2  ECB1  F029         	call	_sprintf	;wreg free
  5827                           
  5828                           ;app.c: 287:      display_ea_line(mc_response);
  5829  000BB6  0E1E               	movlw	low APP_Tasks@mc_response
  5830  000BB8  0100               	movlb	0	; () banked
  5831  000BBA  6FB1               	movwf	display_ea_line@line& (0+255),b
  5832  000BBC  0E01               	movlw	high APP_Tasks@mc_response
  5833  000BBE  6FB2               	movwf	(display_ea_line@line+1)& (0+255),b
  5834  000BC0  EC2A  F02F         	call	_display_ea_line	;wreg free
  5835                           
  5836                           ;app.c: 288:      while (!appData.sw1) {
  5837  000BC4  D022               	goto	l11651
  5838  000BC6                     l11649:
  5839                           
  5840                           ; BSR set to: 1
  5841  000BC6  0E1E               	movlw	low APP_Tasks@mc_response
  5842  000BC8  0100               	movlb	0	; () banked
  5843  000BCA  6FA9               	movwf	sprintf@s& (0+255),b
  5844  000BCC  0E01               	movlw	high APP_Tasks@mc_response
  5845  000BCE  6FAA               	movwf	(sprintf@s+1)& (0+255),b
  5846  000BD0  0E54               	movlw	low (_CrData+68)
  5847  000BD2  6EF6               	movwf	tblptrl,c
  5848  000BD4  0E7D               	movlw	high (_CrData+68)
  5849  000BD6  6EF7               	movwf	tblptrh,c
  5850  000BD8                     	if	0	;tblptru may be non-zero
  5851  000BD8                     	endif
  5852  000BD8                     	if	0	;tblptru may be non-zero
  5853  000BD8                     	endif
  5854  000BD8  0009               	tblrd		*+
  5855  000BDA  CFF5 F0AB          	movff	tablat,sprintf@fmt
  5856  000BDE  000A               	tblrd		*-
  5857  000BE0  CFF5 F0AC          	movff	tablat,sprintf@fmt+1
  5858  000BE4  0E14               	movlw	low (_CrData+4)
  5859  000BE6  6EF6               	movwf	tblptrl,c
  5860  000BE8  0E7D               	movlw	high (_CrData+4)
  5861  000BEA  6EF7               	movwf	tblptrh,c
  5862  000BEC                     	if	0	;tblptru may be non-zero
  5863  000BEC                     	endif
  5864  000BEC                     	if	0	;tblptru may be non-zero
  5865  000BEC                     	endif
  5866  000BEC  0009               	tblrd		*+
  5867  000BEE  CFF5 F0AD          	movff	tablat,?_sprintf+4
  5868  000BF2  000A               	tblrd		*-
  5869  000BF4  CFF5 F0AE          	movff	tablat,?_sprintf+5
  5870  000BF8  ECB1  F029         	call	_sprintf	;wreg free
  5871                           
  5872                           ;app.c: 290:       display_ea_line(mc_response);
  5873  000BFC  0E1E               	movlw	low APP_Tasks@mc_response
  5874  000BFE  0100               	movlb	0	; () banked
  5875  000C00  6FB1               	movwf	display_ea_line@line& (0+255),b
  5876  000C02  0E01               	movlw	high APP_Tasks@mc_response
  5877  000C04  6FB2               	movwf	(display_ea_line@line+1)& (0+255),b
  5878  000C06  EC2A  F02F         	call	_display_ea_line	;wreg free
  5879  000C0A                     l11651:
  5880                           
  5881                           ;app.c: 288:      while (!appData.sw1) {
  5882  000C0A  0101               	movlb	1	; () banked
  5883  000C0C  51D1               	movf	(_appData+68)& (0+255),w,b	;volatile
  5884  000C0E  B4D8               	btfsc	status,2,c
  5885  000C10  D7DA               	goto	l11649
  5886                           
  5887                           ; BSR set to: 1
  5888  000C12  0E1E               	movlw	low APP_Tasks@mc_response
  5889  000C14  0100               	movlb	0	; () banked
  5890  000C16  6FA9               	movwf	sprintf@s& (0+255),b
  5891  000C18  0E01               	movlw	high APP_Tasks@mc_response
  5892  000C1A  6FAA               	movwf	(sprintf@s+1)& (0+255),b
  5893  000C1C  0E4E               	movlw	low (_CrData+62)
  5894  000C1E  6EF6               	movwf	tblptrl,c
  5895  000C20  0E7D               	movlw	high (_CrData+62)
  5896  000C22  6EF7               	movwf	tblptrh,c
  5897  000C24                     	if	0	;tblptru may be non-zero
  5898  000C24                     	endif
  5899  000C24                     	if	0	;tblptru may be non-zero
  5900  000C24                     	endif
  5901  000C24  0009               	tblrd		*+
  5902  000C26  CFF5 F0AB          	movff	tablat,sprintf@fmt
  5903  000C2A  000A               	tblrd		*-
  5904  000C2C  CFF5 F0AC          	movff	tablat,sprintf@fmt+1
  5905  000C30  0E16               	movlw	low (_CrData+6)
  5906  000C32  6EF6               	movwf	tblptrl,c
  5907  000C34  0E7D               	movlw	high (_CrData+6)
  5908  000C36  6EF7               	movwf	tblptrh,c
  5909  000C38                     	if	0	;tblptru may be non-zero
  5910  000C38                     	endif
  5911  000C38                     	if	0	;tblptru may be non-zero
  5912  000C38                     	endif
  5913  000C38  0009               	tblrd		*+
  5914  000C3A  CFF5 F0AD          	movff	tablat,?_sprintf+4
  5915  000C3E  000A               	tblrd		*-
  5916  000C40  CFF5 F0AE          	movff	tablat,?_sprintf+5
  5917  000C44  ECB1  F029         	call	_sprintf	;wreg free
  5918                           
  5919                           ;app.c: 293:      display_ea_line(mc_response);
  5920  000C48  0E1E               	movlw	low APP_Tasks@mc_response
  5921  000C4A  0100               	movlb	0	; () banked
  5922  000C4C  6FB1               	movwf	display_ea_line@line& (0+255),b
  5923  000C4E  0E01               	movlw	high APP_Tasks@mc_response
  5924  000C50  6FB2               	movwf	(display_ea_line@line+1)& (0+255),b
  5925  000C52  EC2A  F02F         	call	_display_ea_line	;wreg free
  5926                           
  5927                           ;app.c: 294:      TMR3_StartTimer();
  5928  000C56  ECBE  F02F         	call	_TMR3_StartTimer	;wreg free
  5929                           
  5930                           ;app.c: 295:      appData.sw1 = 0;
  5931  000C5A  0E00               	movlw	0
  5932  000C5C  0101               	movlb	1	; () banked
  5933  000C5E  6FD1               	movwf	(_appData+68)& (0+255),b	;volatile
  5934                           
  5935                           ; BSR set to: 1
  5936                           ;app.c: 296:      WaitMs(100);
  5937  000C60  0E00               	movlw	0
  5938  000C62  6E19               	movwf	WaitMs@numMilliseconds+1,c
  5939  000C64  0E64               	movlw	100
  5940  000C66  6E18               	movwf	WaitMs@numMilliseconds,c
  5941  000C68  ECF4  F02E         	call	_WaitMs	;wreg free
  5942                           
  5943                           ;app.c: 297:      TMR3_StopTimer();
  5944  000C6C  ECBC  F02F         	call	_TMR3_StopTimer	;wreg free
  5945                           
  5946                           ;app.c: 299:      clear_MC_port();
  5947  000C70  EC1F  F02D         	call	_clear_MC_port	;wreg free
  5948  000C74  0E1E               	movlw	low APP_Tasks@mc_response
  5949  000C76  0100               	movlb	0	; () banked
  5950  000C78  6FA9               	movwf	sprintf@s& (0+255),b
  5951  000C7A  0E01               	movlw	high APP_Tasks@mc_response
  5952  000C7C  6FAA               	movwf	(sprintf@s+1)& (0+255),b
  5953  000C7E  0EA4               	movlw	low _RsData
  5954  000C80  6EF6               	movwf	tblptrl,c
  5955  000C82                     	if	1	;There is more than 1 active tblptr byte
  5956  000C82  0E7D               	movlw	high _RsData
  5957  000C84  6EF7               	movwf	tblptrh,c
  5958  000C86                     	endif
  5959  000C86                     	if	0	;There are less than 3 active tblptr bytes
  5960  000C86                     	endif
  5961  000C86  0009               	tblrd		*+
  5962  000C88  CFF5 F0AB          	movff	tablat,sprintf@fmt
  5963  000C8C  000A               	tblrd		*-
  5964  000C8E  CFF5 F0AC          	movff	tablat,sprintf@fmt+1
  5965  000C92  C0BD  F0AD         	movff	APP_Tasks@offset,?_sprintf+4
  5966  000C96  C0BE  F0AE         	movff	APP_Tasks@offset+1,?_sprintf+5
  5967  000C9A  ECB1  F029         	call	_sprintf	;wreg free
  5968                           
  5969                           ;app.c: 301:      MC_SendCommand(mc_response, 1);
  5970  000C9E  0E1E               	movlw	low APP_Tasks@mc_response
  5971  000CA0  6E1A               	movwf	MC_SendCommand@data,c
  5972  000CA2  0E01               	movlw	high APP_Tasks@mc_response
  5973  000CA4  6E1B               	movwf	MC_SendCommand@data+1,c
  5974  000CA6  0E01               	movlw	1
  5975  000CA8  6E1C               	movwf	MC_SendCommand@wait,c
  5976  000CAA  EC69  F028         	call	_MC_SendCommand	;wreg free
  5977  000CAE  0E44               	movlw	low (_CrData+52)
  5978  000CB0  6EF6               	movwf	tblptrl,c
  5979  000CB2  0E7D               	movlw	high (_CrData+52)
  5980  000CB4  6EF7               	movwf	tblptrh,c
  5981  000CB6                     	if	0	;tblptru may be non-zero
  5982  000CB6                     	endif
  5983  000CB6                     	if	0	;tblptru may be non-zero
  5984  000CB6                     	endif
  5985  000CB6  0009               	tblrd		*+
  5986  000CB8  CFF5 F01A          	movff	tablat,MC_SendCommand@data
  5987  000CBC  000A               	tblrd		*-
  5988  000CBE  CFF5 F01B          	movff	tablat,MC_SendCommand@data+1
  5989  000CC2  0E01               	movlw	1
  5990  000CC4  6E1C               	movwf	MC_SendCommand@wait,c
  5991  000CC6  EC69  F028         	call	_MC_SendCommand	;wreg free
  5992  000CCA  0E46               	movlw	low (_CrData+54)
  5993  000CCC  6EF6               	movwf	tblptrl,c
  5994  000CCE  0E7D               	movlw	high (_CrData+54)
  5995  000CD0  6EF7               	movwf	tblptrh,c
  5996  000CD2                     	if	0	;tblptru may be non-zero
  5997  000CD2                     	endif
  5998  000CD2                     	if	0	;tblptru may be non-zero
  5999  000CD2                     	endif
  6000  000CD2  0009               	tblrd		*+
  6001  000CD4  CFF5 F01A          	movff	tablat,MC_SendCommand@data
  6002  000CD8  000A               	tblrd		*-
  6003  000CDA  CFF5 F01B          	movff	tablat,MC_SendCommand@data+1
  6004  000CDE  0E01               	movlw	1
  6005  000CE0  6E1C               	movwf	MC_SendCommand@wait,c
  6006  000CE2  EC69  F028         	call	_MC_SendCommand	;wreg free
  6007  000CE6  0E48               	movlw	low (_CrData+56)
  6008  000CE8  6EF6               	movwf	tblptrl,c
  6009  000CEA  0E7D               	movlw	high (_CrData+56)
  6010  000CEC  6EF7               	movwf	tblptrh,c
  6011  000CEE                     	if	0	;tblptru may be non-zero
  6012  000CEE                     	endif
  6013  000CEE                     	if	0	;tblptru may be non-zero
  6014  000CEE                     	endif
  6015  000CEE  0009               	tblrd		*+
  6016  000CF0  CFF5 F01A          	movff	tablat,MC_SendCommand@data
  6017  000CF4  000A               	tblrd		*-
  6018  000CF6  CFF5 F01B          	movff	tablat,MC_SendCommand@data+1
  6019  000CFA  0E01               	movlw	1
  6020  000CFC  6E1C               	movwf	MC_SendCommand@wait,c
  6021  000CFE  EC69  F028         	call	_MC_SendCommand	;wreg free
  6022                           
  6023                           ;app.c: 305:      TMR3_StartTimer();
  6024  000D02  ECBE  F02F         	call	_TMR3_StartTimer	;wreg free
  6025                           
  6026                           ;app.c: 306:      WaitMs(100);
  6027  000D06  0E00               	movlw	0
  6028  000D08  6E19               	movwf	WaitMs@numMilliseconds+1,c
  6029  000D0A  0E64               	movlw	100
  6030  000D0C  6E18               	movwf	WaitMs@numMilliseconds,c
  6031  000D0E  ECF4  F02E         	call	_WaitMs	;wreg free
  6032                           
  6033                           ;app.c: 307:      TMR3_StopTimer();
  6034  000D12  ECBC  F02F         	call	_TMR3_StopTimer	;wreg free
  6035                           
  6036                           ;app.c: 309:      appData.state = APP_DONE;
  6037  000D16  0E05               	movlw	5
  6038  000D18  0101               	movlb	1	; () banked
  6039  000D1A  6F8D               	movwf	_appData& (0+255),b	;volatile
  6040                           
  6041                           ; BSR set to: 1
  6042                           ;app.c: 310:      appData.mc = MC_DONE;
  6043  000D1C  0E08               	movlw	8
  6044  000D1E  6F8E               	movwf	(_appData+1)& (0+255),b	;volatile
  6045                           
  6046                           ;app.c: 311:      break;
  6047  000D20  D03F               	goto	l11691
  6048  000D22                     l11685:
  6049                           
  6050                           ; BSR set to: 0
  6051  000D22  0E1E               	movlw	low APP_Tasks@mc_response
  6052  000D24  6FA9               	movwf	sprintf@s& (0+255),b
  6053  000D26  0E01               	movlw	high APP_Tasks@mc_response
  6054  000D28  6FAA               	movwf	(sprintf@s+1)& (0+255),b
  6055  000D2A  0EA8               	movlw	low (_RsData+4)
  6056  000D2C  6EF6               	movwf	tblptrl,c
  6057  000D2E  0E7D               	movlw	high (_RsData+4)
  6058  000D30  6EF7               	movwf	tblptrh,c
  6059  000D32                     	if	0	;tblptru may be non-zero
  6060  000D32                     	endif
  6061  000D32                     	if	0	;tblptru may be non-zero
  6062  000D32                     	endif
  6063  000D32  0009               	tblrd		*+
  6064  000D34  CFF5 F0AB          	movff	tablat,sprintf@fmt
  6065  000D38  000A               	tblrd		*-
  6066  000D3A  CFF5 F0AC          	movff	tablat,sprintf@fmt+1
  6067  000D3E  0E4C               	movlw	low (_CrData+60)
  6068  000D40  6EF6               	movwf	tblptrl,c
  6069  000D42  0E7D               	movlw	high (_CrData+60)
  6070  000D44  6EF7               	movwf	tblptrh,c
  6071  000D46                     	if	0	;tblptru may be non-zero
  6072  000D46                     	endif
  6073  000D46                     	if	0	;tblptru may be non-zero
  6074  000D46                     	endif
  6075  000D46  0009               	tblrd		*+
  6076  000D48  CFF5 F0AD          	movff	tablat,?_sprintf+4
  6077  000D4C  000A               	tblrd		*-
  6078  000D4E  CFF5 F0AE          	movff	tablat,?_sprintf+5
  6079  000D52  ECB1  F029         	call	_sprintf	;wreg free
  6080                           
  6081                           ;app.c: 314:      display_ea_line(mc_response);
  6082  000D56  0E1E               	movlw	low APP_Tasks@mc_response
  6083  000D58  0100               	movlb	0	; () banked
  6084  000D5A  6FB1               	movwf	display_ea_line@line& (0+255),b
  6085  000D5C  0E01               	movlw	high APP_Tasks@mc_response
  6086  000D5E  6FB2               	movwf	(display_ea_line@line+1)& (0+255),b
  6087  000D60  EC2A  F02F         	call	_display_ea_line	;wreg free
  6088                           
  6089                           ;app.c: 315:      break;
  6090  000D64  D01D               	goto	l11691
  6091  000D66                     l11689:
  6092  000D66  0101               	movlb	1	; () banked
  6093  000D68  518E               	movf	(_appData+1)& (0+255),w,b	;volatile
  6094  000D6A  0100               	movlb	0	; () banked
  6095  000D6C  6FBB               	movwf	??_APP_Tasks& (0+255),b
  6096  000D6E  6BBC               	clrf	(??_APP_Tasks+1)& (0+255),b
  6097                           
  6098                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6099                           ; Switch size 1, requested type "simple"
  6100                           ; Number of cases is 1, Range of values is 0 to 0
  6101                           ; switch strategies available:
  6102                           ; Name         Instructions Cycles
  6103                           ; simple_byte            4     3 (average)
  6104                           ;	Chosen strategy is simple_byte
  6105  000D70  51BC               	movf	(??_APP_Tasks+1)& (0+255),w,b
  6106  000D72  0A00               	xorlw	0	; case 0
  6107  000D74  A4D8               	btfss	status,2,c
  6108  000D76  D014               	goto	l11691
  6109                           
  6110                           ; BSR set to: 0
  6111                           ; Switch size 1, requested type "simple"
  6112                           ; Number of cases is 5, Range of values is 0 to 8
  6113                           ; switch strategies available:
  6114                           ; Name         Instructions Cycles
  6115                           ; simple_byte           16     9 (average)
  6116                           ;	Chosen strategy is simple_byte
  6117  000D78  51BB               	movf	??_APP_Tasks& (0+255),w,b
  6118  000D7A  0A00               	xorlw	0	; case 0
  6119  000D7C  B4D8               	btfsc	status,2,c
  6120  000D7E  EF52  F001         	goto	l11471
  6121  000D82  0A02               	xorlw	2	; case 2
  6122  000D84  B4D8               	btfsc	status,2,c
  6123  000D86  EF75  F001         	goto	l11473
  6124  000D8A  0A01               	xorlw	1	; case 3
  6125  000D8C  B4D8               	btfsc	status,2,c
  6126  000D8E  EF87  F001         	goto	l11477
  6127  000D92  0A06               	xorlw	6	; case 5
  6128  000D94  B4D8               	btfsc	status,2,c
  6129  000D96  EF99  F001         	goto	l11481
  6130  000D9A  0A0D               	xorlw	13	; case 8
  6131  000D9C  B4D8               	btfsc	status,2,c
  6132  000D9E  D7C1               	goto	l11685
  6133  000DA0                     l11691:
  6134                           
  6135                           ;app.c: 319:     appData.got_packet = 0;
  6136  000DA0  0E00               	movlw	0
  6137  000DA2  0101               	movlb	1	; () banked
  6138  000DA4  6FCF               	movwf	(_appData+66)& (0+255),b	;volatile
  6139                           
  6140                           ;app.c: 320:    } else {
  6141  000DA6  D06C               	goto	l11713
  6142  000DA8                     l11693:
  6143                           
  6144                           ; BSR set to: 1
  6145                           ;app.c: 321:     if (appData.sw1) {
  6146  000DA8  51D1               	movf	(_appData+68)& (0+255),w,b	;volatile
  6147  000DAA  B4D8               	btfsc	status,2,c
  6148  000DAC  D00B               	goto	l11701
  6149                           
  6150                           ; BSR set to: 1
  6151                           ;app.c: 322:      TMR3_StartTimer();
  6152  000DAE  ECBE  F02F         	call	_TMR3_StartTimer	;wreg free
  6153                           
  6154                           ;app.c: 323:      appData.sw1 = 0;
  6155  000DB2  0E00               	movlw	0
  6156  000DB4  0101               	movlb	1	; () banked
  6157  000DB6  6FD1               	movwf	(_appData+68)& (0+255),b	;volatile
  6158                           
  6159                           ; BSR set to: 1
  6160                           ;app.c: 324:      WaitMs(100);
  6161  000DB8  0E00               	movlw	0
  6162  000DBA  6E19               	movwf	WaitMs@numMilliseconds+1,c
  6163  000DBC  0E64               	movlw	100
  6164  000DBE  6E18               	movwf	WaitMs@numMilliseconds,c
  6165  000DC0  ECF4  F02E         	call	_WaitMs	;wreg free
  6166  000DC4                     l11701:
  6167  000DC4  0E1E               	movlw	low APP_Tasks@mc_response
  6168  000DC6  0100               	movlb	0	; () banked
  6169  000DC8  6FA9               	movwf	sprintf@s& (0+255),b
  6170  000DCA  0E01               	movlw	high APP_Tasks@mc_response
  6171  000DCC  6FAA               	movwf	(sprintf@s+1)& (0+255),b
  6172  000DCE  0E58               	movlw	low (_CrData+72)
  6173  000DD0  6EF6               	movwf	tblptrl,c
  6174  000DD2  0E7D               	movlw	high (_CrData+72)
  6175  000DD4  6EF7               	movwf	tblptrh,c
  6176  000DD6                     	if	0	;tblptru may be non-zero
  6177  000DD6                     	endif
  6178  000DD6                     	if	0	;tblptru may be non-zero
  6179  000DD6                     	endif
  6180  000DD6  0009               	tblrd		*+
  6181  000DD8  CFF5 F0AB          	movff	tablat,sprintf@fmt
  6182  000DDC  000A               	tblrd		*-
  6183  000DDE  CFF5 F0AC          	movff	tablat,sprintf@fmt+1
  6184  000DE2  0E10               	movlw	low _CrData
  6185  000DE4  6EF6               	movwf	tblptrl,c
  6186  000DE6                     	if	1	;There is more than 1 active tblptr byte
  6187  000DE6  0E7D               	movlw	high _CrData
  6188  000DE8  6EF7               	movwf	tblptrh,c
  6189  000DEA                     	endif
  6190  000DEA                     	if	0	;There are less than 3 active tblptr bytes
  6191  000DEA                     	endif
  6192  000DEA  0009               	tblrd		*+
  6193  000DEC  CFF5 F0AD          	movff	tablat,?_sprintf+4
  6194  000DF0  000A               	tblrd		*-
  6195  000DF2  CFF5 F0AE          	movff	tablat,?_sprintf+5
  6196  000DF6  0EE3               	movlw	low STR_1
  6197  000DF8  6FAF               	movwf	(?_sprintf+6)& (0+255),b
  6198  000DFA  0E7F               	movlw	high STR_1
  6199  000DFC  6FB0               	movwf	(?_sprintf+7)& (0+255),b
  6200  000DFE  ECB1  F029         	call	_sprintf	;wreg free
  6201                           
  6202                           ;app.c: 327:     display_ea_line(mc_response);
  6203  000E02  0E1E               	movlw	low APP_Tasks@mc_response
  6204  000E04  0100               	movlb	0	; () banked
  6205  000E06  6FB1               	movwf	display_ea_line@line& (0+255),b
  6206  000E08  0E01               	movlw	high APP_Tasks@mc_response
  6207  000E0A  6FB2               	movwf	(display_ea_line@line+1)& (0+255),b
  6208  000E0C  EC2A  F02F         	call	_display_ea_line	;wreg free
  6209  000E10  0E1E               	movlw	low APP_Tasks@mc_response
  6210  000E12  0100               	movlb	0	; () banked
  6211  000E14  6FA9               	movwf	sprintf@s& (0+255),b
  6212  000E16  0E01               	movlw	high APP_Tasks@mc_response
  6213  000E18  6FAA               	movwf	(sprintf@s+1)& (0+255),b
  6214  000E1A  0E50               	movlw	low (_CrData+64)
  6215  000E1C  6EF6               	movwf	tblptrl,c
  6216  000E1E  0E7D               	movlw	high (_CrData+64)
  6217  000E20  6EF7               	movwf	tblptrh,c
  6218  000E22                     	if	0	;tblptru may be non-zero
  6219  000E22                     	endif
  6220  000E22                     	if	0	;tblptru may be non-zero
  6221  000E22                     	endif
  6222  000E22  0009               	tblrd		*+
  6223  000E24  CFF5 F0AB          	movff	tablat,sprintf@fmt
  6224  000E28  000A               	tblrd		*-
  6225  000E2A  CFF5 F0AC          	movff	tablat,sprintf@fmt+1
  6226  000E2E  0EFB               	movlw	low STR_2
  6227  000E30  6FAD               	movwf	(?_sprintf+4)& (0+255),b
  6228  000E32  0E7E               	movlw	high STR_2
  6229  000E34  6FAE               	movwf	(?_sprintf+5)& (0+255),b
  6230  000E36  ECB1  F029         	call	_sprintf	;wreg free
  6231                           
  6232                           ;app.c: 329:     display_ea_line(mc_response);
  6233  000E3A  0E1E               	movlw	low APP_Tasks@mc_response
  6234  000E3C  0100               	movlb	0	; () banked
  6235  000E3E  6FB1               	movwf	display_ea_line@line& (0+255),b
  6236  000E40  0E01               	movlw	high APP_Tasks@mc_response
  6237  000E42  6FB2               	movwf	(display_ea_line@line+1)& (0+255),b
  6238  000E44  EC2A  F02F         	call	_display_ea_line	;wreg free
  6239  000E48  0E1E               	movlw	low APP_Tasks@mc_response
  6240  000E4A  0100               	movlb	0	; () banked
  6241  000E4C  6FA9               	movwf	sprintf@s& (0+255),b
  6242  000E4E  0E01               	movlw	high APP_Tasks@mc_response
  6243  000E50  6FAA               	movwf	(sprintf@s+1)& (0+255),b
  6244  000E52  0E52               	movlw	low (_CrData+66)
  6245  000E54  6EF6               	movwf	tblptrl,c
  6246  000E56  0E7D               	movlw	high (_CrData+66)
  6247  000E58  6EF7               	movwf	tblptrh,c
  6248  000E5A                     	if	0	;tblptru may be non-zero
  6249  000E5A                     	endif
  6250  000E5A                     	if	0	;tblptru may be non-zero
  6251  000E5A                     	endif
  6252  000E5A  0009               	tblrd		*+
  6253  000E5C  CFF5 F0AB          	movff	tablat,sprintf@fmt
  6254  000E60  000A               	tblrd		*-
  6255  000E62  CFF5 F0AC          	movff	tablat,sprintf@fmt+1
  6256  000E66  0E60               	movlw	low STR_3
  6257  000E68  6FAD               	movwf	(?_sprintf+4)& (0+255),b
  6258  000E6A  0E7F               	movlw	high STR_3
  6259  000E6C  6FAE               	movwf	(?_sprintf+5)& (0+255),b
  6260  000E6E  ECB1  F029         	call	_sprintf	;wreg free
  6261                           
  6262                           ;app.c: 331:     display_ea_line(mc_response);
  6263  000E72  0E1E               	movlw	low APP_Tasks@mc_response
  6264  000E74  0100               	movlb	0	; () banked
  6265  000E76  6FB1               	movwf	display_ea_line@line& (0+255),b
  6266  000E78  0E01               	movlw	high APP_Tasks@mc_response
  6267  000E7A  6FB2               	movwf	(display_ea_line@line+1)& (0+255),b
  6268  000E7C  EC2A  F02F         	call	_display_ea_line	;wreg free
  6269  000E80                     l11713:
  6270                           
  6271                           ;app.c: 333:    StartTimer(TMR_DIS, 70);
  6272  000E80  0E00               	movlw	0
  6273  000E82  6E14               	movwf	StartTimer@count+1,c
  6274  000E84  0E46               	movlw	70
  6275  000E86  6E13               	movwf	StartTimer@count,c
  6276  000E88  0E03               	movlw	3
  6277  000E8A  ECD3  F02D         	call	_StartTimer
  6278  000E8E  D04A               	goto	l11729
  6279  000E90                     l11715:
  6280  000E90  0E1E               	movlw	low APP_Tasks@mc_response
  6281  000E92  0100               	movlb	0	; () banked
  6282  000E94  6FA9               	movwf	sprintf@s& (0+255),b
  6283  000E96  0E01               	movlw	high APP_Tasks@mc_response
  6284  000E98  6FAA               	movwf	(sprintf@s+1)& (0+255),b
  6285  000E9A  0EA4               	movlw	low _RsData
  6286  000E9C  6EF6               	movwf	tblptrl,c
  6287  000E9E                     	if	1	;There is more than 1 active tblptr byte
  6288  000E9E  0E7D               	movlw	high _RsData
  6289  000EA0  6EF7               	movwf	tblptrh,c
  6290  000EA2                     	endif
  6291  000EA2                     	if	0	;There are less than 3 active tblptr bytes
  6292  000EA2                     	endif
  6293  000EA2  0009               	tblrd		*+
  6294  000EA4  CFF5 F0AB          	movff	tablat,sprintf@fmt
  6295  000EA8  000A               	tblrd		*-
  6296  000EAA  CFF5 F0AC          	movff	tablat,sprintf@fmt+1
  6297  000EAE  C0BD  F0AD         	movff	APP_Tasks@offset,?_sprintf+4
  6298  000EB2  C0BE  F0AE         	movff	APP_Tasks@offset+1,?_sprintf+5
  6299  000EB6  ECB1  F029         	call	_sprintf	;wreg free
  6300                           
  6301                           ;app.c: 339:    display_ea_line(mc_response);
  6302  000EBA  0E1E               	movlw	low APP_Tasks@mc_response
  6303  000EBC  0100               	movlb	0	; () banked
  6304  000EBE  6FB1               	movwf	display_ea_line@line& (0+255),b
  6305  000EC0  0E01               	movlw	high APP_Tasks@mc_response
  6306  000EC2  6FB2               	movwf	(display_ea_line@line+1)& (0+255),b
  6307  000EC4  EC2A  F02F         	call	_display_ea_line	;wreg free
  6308                           
  6309                           ;app.c: 340:    WaitMs(100);
  6310  000EC8  0E00               	movlw	0
  6311  000ECA  6E19               	movwf	WaitMs@numMilliseconds+1,c
  6312  000ECC  0E64               	movlw	100
  6313  000ECE  6E18               	movwf	WaitMs@numMilliseconds,c
  6314  000ED0  ECF4  F02E         	call	_WaitMs	;wreg free
  6315                           
  6316                           ;app.c: 341:    TMR3_StopTimer();
  6317  000ED4  ECBC  F02F         	call	_TMR3_StopTimer	;wreg free
  6318                           
  6319                           ;app.c: 342:    WaitMs(1333);
  6320  000ED8  0E05               	movlw	5
  6321  000EDA  6E19               	movwf	WaitMs@numMilliseconds+1,c
  6322  000EDC  0E35               	movlw	53
  6323  000EDE  6E18               	movwf	WaitMs@numMilliseconds,c
  6324  000EE0  ECF4  F02E         	call	_WaitMs	;wreg free
  6325                           
  6326                           ;app.c: 343:    TMR3_StartTimer();
  6327  000EE4  ECBE  F02F         	call	_TMR3_StartTimer	;wreg free
  6328  000EE8  D7D3               	goto	l11715
  6329  000EEA                     l11727:
  6330  000EEA  0101               	movlb	1	; () banked
  6331  000EEC  518D               	movf	_appData& (0+255),w,b	;volatile
  6332  000EEE  0100               	movlb	0	; () banked
  6333  000EF0  6FBB               	movwf	??_APP_Tasks& (0+255),b
  6334  000EF2  6BBC               	clrf	(??_APP_Tasks+1)& (0+255),b
  6335                           
  6336                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6337                           ; Switch size 1, requested type "simple"
  6338                           ; Number of cases is 1, Range of values is 0 to 0
  6339                           ; switch strategies available:
  6340                           ; Name         Instructions Cycles
  6341                           ; simple_byte            4     3 (average)
  6342                           ;	Chosen strategy is simple_byte
  6343  000EF4  51BC               	movf	(??_APP_Tasks+1)& (0+255),w,b
  6344  000EF6  0A00               	xorlw	0	; case 0
  6345  000EF8  A4D8               	btfss	status,2,c
  6346  000EFA  D014               	goto	l11729
  6347                           
  6348                           ; BSR set to: 0
  6349                           ; Switch size 1, requested type "simple"
  6350                           ; Number of cases is 5, Range of values is 0 to 5
  6351                           ; switch strategies available:
  6352                           ; Name         Instructions Cycles
  6353                           ; simple_byte           16     9 (average)
  6354                           ;	Chosen strategy is simple_byte
  6355  000EFC  51BB               	movf	??_APP_Tasks& (0+255),w,b
  6356  000EFE  0A00               	xorlw	0	; case 0
  6357  000F00  B4D8               	btfsc	status,2,c
  6358  000F02  EF4B  F000         	goto	l11409
  6359  000F06  0A01               	xorlw	1	; case 1
  6360  000F08  B4D8               	btfsc	status,2,c
  6361  000F0A  EF7F  F000         	goto	l11427
  6362  000F0E  0A03               	xorlw	3	; case 2
  6363  000F10  B4D8               	btfsc	status,2,c
  6364  000F12  EF86  F000         	goto	l11431
  6365  000F16  0A01               	xorlw	1	; case 3
  6366  000F18  B4D8               	btfsc	status,2,c
  6367  000F1A  EFF4  F000         	goto	l11461
  6368  000F1E  0A06               	xorlw	6	; case 5
  6369  000F20  B4D8               	btfsc	status,2,c
  6370  000F22  D7B6               	goto	l11715
  6371  000F24                     l11729:
  6372                           
  6373                           ;app.c: 351:  if (appData.sw2) {
  6374  000F24  0101               	movlb	1	; () banked
  6375  000F26  51D2               	movf	(_appData+69)& (0+255),w,b	;volatile
  6376  000F28  B4D8               	btfsc	status,2,c
  6377  000F2A  D027               	goto	l11745
  6378                           
  6379                           ; BSR set to: 1
  6380                           ;app.c: 352:   TMR3_StartTimer();
  6381  000F2C  ECBE  F02F         	call	_TMR3_StartTimer	;wreg free
  6382                           
  6383                           ;app.c: 353:   appData.sw2 = 0;
  6384  000F30  0E00               	movlw	0
  6385  000F32  0101               	movlb	1	; () banked
  6386  000F34  6FD2               	movwf	(_appData+69)& (0+255),b	;volatile
  6387                           
  6388                           ; BSR set to: 1
  6389                           ;app.c: 354:   appData.mc = MC_BOOT;
  6390  000F36  0E02               	movlw	2
  6391  000F38  6F8E               	movwf	(_appData+1)& (0+255),b	;volatile
  6392                           
  6393                           ; BSR set to: 1
  6394                           ;app.c: 355:   appData.got_packet = 1;
  6395  000F3A  0E01               	movlw	1
  6396  000F3C  6FCF               	movwf	(_appData+66)& (0+255),b	;volatile
  6397                           
  6398                           ; BSR set to: 1
  6399                           ;app.c: 356:   display_ea_ff(1);
  6400  000F3E  0E00               	movlw	0
  6401  000F40  0100               	movlb	0	; () banked
  6402  000F42  6FB2               	movwf	(display_ea_ff@pause+1)& (0+255),b
  6403  000F44  0E01               	movlw	1
  6404  000F46  6FB1               	movwf	display_ea_ff@pause& (0+255),b
  6405  000F48  EC5B  F02E         	call	_display_ea_ff	;wreg free
  6406  000F4C  0E8F               	movlw	low (_appData+2)
  6407  000F4E  0100               	movlb	0	; () banked
  6408  000F50  6FA9               	movwf	sprintf@s& (0+255),b
  6409  000F52  0E01               	movlw	high (_appData+2)
  6410  000F54  6FAA               	movwf	(sprintf@s+1)& (0+255),b
  6411  000F56  0E12               	movlw	low (_CrData+2)
  6412  000F58  6EF6               	movwf	tblptrl,c
  6413  000F5A  0E7D               	movlw	high (_CrData+2)
  6414  000F5C  6EF7               	movwf	tblptrh,c
  6415  000F5E                     	if	0	;tblptru may be non-zero
  6416  000F5E                     	endif
  6417  000F5E                     	if	0	;tblptru may be non-zero
  6418  000F5E                     	endif
  6419  000F5E  0009               	tblrd		*+
  6420  000F60  CFF5 F0AB          	movff	tablat,sprintf@fmt
  6421  000F64  000A               	tblrd		*-
  6422  000F66  CFF5 F0AC          	movff	tablat,sprintf@fmt+1
  6423  000F6A  ECB1  F029         	call	_sprintf	;wreg free
  6424                           
  6425                           ;app.c: 358:   WaitMs(25);
  6426  000F6E  0E00               	movlw	0
  6427  000F70  6E19               	movwf	WaitMs@numMilliseconds+1,c
  6428  000F72  0E19               	movlw	25
  6429  000F74  6E18               	movwf	WaitMs@numMilliseconds,c
  6430  000F76  ECF4  F02E         	call	_WaitMs	;wreg free
  6431  000F7A                     l11745:
  6432                           
  6433                           ;app.c: 360:  TMR3_StopTimer();
  6434  000F7A  ECBC  F02F         	call	_TMR3_StopTimer	;wreg free
  6435  000F7E  0012               	return		;funcret
  6436  000F80                     __end_of_APP_Tasks:
  6437                           	opt callstack 0
  6438                           
  6439 ;; *************** function _strstr *****************
  6440 ;; Defined at:
  6441 ;;		line 143 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strstr.c"
  6442 ;; Parameters:    Size  Location     Type
  6443 ;;  h               2   29[COMRAM] PTR const unsigned char 
  6444 ;;		 -> get_pfb@s(2), appData.receive_packet(64), NULL(0), appData(76), 
  6445 ;;  n               2   31[COMRAM] PTR const unsigned char 
  6446 ;;		 -> STR_25(2), STR_18(3), STR_16(9), STR_14(11), 
  6447 ;; Auto vars:     Size  Location     Type
  6448 ;;  nl              2   33[COMRAM] unsigned int 
  6449 ;; Return value:  Size  Location     Type
  6450 ;;                  2   29[COMRAM] PTR unsigned char 
  6451 ;; Registers used:
  6452 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6453 ;; Tracked objects:
  6454 ;;		On entry : 0/0
  6455 ;;		On exit  : 0/0
  6456 ;;		Unchanged: 0/0
  6457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6458 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6459 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6461 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6462 ;;Total ram usage:        6 bytes
  6463 ;; Hardware stack levels used:    1
  6464 ;; Hardware stack levels required when called:    9
  6465 ;; This function calls:
  6466 ;;		_strchr
  6467 ;;		_strlen
  6468 ;;		_strncmp
  6469 ;; This function is called by:
  6470 ;;		_APP_Tasks
  6471 ;; This function uses a non-reentrant model
  6472 ;;
  6473                           
  6474                           	psect	text25
  6475  004FB4                     __ptext25:
  6476                           	opt callstack 0
  6477  004FB4                     _strstr:
  6478                           	opt callstack 20
  6479                           
  6480                           ;incstack = 0
  6481  004FB4  5020               	movf	strstr@n,w,c
  6482  004FB6  1021               	iorwf	strstr@n+1,w,c
  6483  004FB8  B4D8               	btfsc	status,2,c
  6484  004FBA  D041               	goto	u15080
  6485  004FBC  C020  F013         	movff	strstr@n,strlen@s
  6486  004FC0  C021  F014         	movff	strstr@n+1,strlen@s+1
  6487  004FC4  EC0C  F02B         	call	_strlen	;wreg free
  6488  004FC8  C013  F022         	movff	?_strlen,strstr@nl
  6489  004FCC  C014  F023         	movff	?_strlen+1,strstr@nl+1
  6490  004FD0  D02B               	goto	l11331
  6491  004FD2                     l11323:
  6492  004FD2  C01E  F013         	movff	strstr@h,strncmp@_l
  6493  004FD6  C01F  F014         	movff	strstr@h+1,strncmp@_l+1
  6494  004FDA  C020  F015         	movff	strstr@n,strncmp@_r
  6495  004FDE  C021  F016         	movff	strstr@n+1,strncmp@_r+1
  6496  004FE2  C022  F017         	movff	strstr@nl,strncmp@n
  6497  004FE6  C023  F018         	movff	strstr@nl+1,strncmp@n+1
  6498  004FEA  EC13  F024         	call	_strncmp	;wreg free
  6499  004FEE  5013               	movf	?_strncmp,w,c
  6500  004FF0  1014               	iorwf	?_strncmp+1,w,c
  6501  004FF2  A4D8               	btfss	status,2,c
  6502  004FF4  D005               	goto	l11329
  6503  004FF6  C01E  F01E         	movff	strstr@h,?_strstr
  6504  004FFA  C01F  F01F         	movff	strstr@h+1,?_strstr+1
  6505  004FFE  0012               	return	
  6506  005000                     l11329:
  6507  005000  0E01               	movlw	1
  6508  005002  241E               	addwf	strstr@h,w,c
  6509  005004  6E13               	movwf	strchr@s,c
  6510  005006  0E00               	movlw	0
  6511  005008  201F               	addwfc	strstr@h+1,w,c
  6512  00500A  6E14               	movwf	strchr@s+1,c
  6513  00500C  C020  FFF6         	movff	strstr@n,tblptrl
  6514  005010  C021  FFF7         	movff	strstr@n+1,tblptrh
  6515  005014                     	if	0	;tblptru may be non-zero
  6516  005014                     	endif
  6517  005014                     	if	0	;tblptru may be non-zero
  6518  005014                     	endif
  6519  005014  0008               	tblrd		*
  6520  005016  50F5               	movf	tablat,w,c
  6521  005018  6E15               	movwf	strchr@c,c
  6522  00501A  6A16               	clrf	strchr@c+1,c
  6523  00501C  EC6F  F02C         	call	_strchr	;wreg free
  6524  005020  C013  F01E         	movff	?_strchr,strstr@h
  6525  005024  C014  F01F         	movff	?_strchr+1,strstr@h+1
  6526  005028                     l11331:
  6527  005028  501E               	movf	strstr@h,w,c
  6528  00502A  101F               	iorwf	strstr@h+1,w,c
  6529  00502C  B4D8               	btfsc	status,2,c
  6530  00502E  D007               	goto	u15080
  6531  005030  C01E  FFD9         	movff	strstr@h,fsr2l
  6532  005034  C01F  FFDA         	movff	strstr@h+1,fsr2h
  6533  005038  50DF               	movf	indf2,w,c
  6534  00503A  A4D8               	btfss	status,2,c
  6535  00503C  D7CA               	goto	l11323
  6536  00503E                     u15080:
  6537  00503E  0E00               	movlw	0
  6538  005040  6E1E               	movwf	?_strstr,c
  6539  005042  0E00               	movlw	0
  6540  005044  6E1F               	movwf	?_strstr+1,c
  6541  005046  0012               	return		;funcret
  6542  005048                     __end_of_strstr:
  6543                           	opt callstack 0
  6544                           
  6545 ;; *************** function _sprintf *****************
  6546 ;; Defined at:
  6547 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  6548 ;; Parameters:    Size  Location     Type
  6549 ;;  s               2   73[BANK0 ] PTR unsigned char 
  6550 ;;		 -> APP_Tasks@mc_response(66), appData(76), 
  6551 ;;  fmt             2   75[BANK0 ] PTR const unsigned char 
  6552 ;;		 -> STR_50(2), STR_49(3), STR_48(15), STR_47(24), 
  6553 ;;		 -> STR_45(9), STR_44(11), STR_43(7), STR_42(7), 
  6554 ;;		 -> STR_41(7), STR_40(7), STR_10(21), 
  6555 ;; Auto vars:     Size  Location     Type
  6556 ;;  f               6   83[BANK0 ] struct _IO_FILE
  6557 ;;  ap              2   89[BANK0 ] PTR void [1]
  6558 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6559 ;;  ret             2    0        int 
  6560 ;; Return value:  Size  Location     Type
  6561 ;;                  2   73[BANK0 ] int 
  6562 ;; Registers used:
  6563 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6564 ;; Tracked objects:
  6565 ;;		On entry : 0/0
  6566 ;;		On exit  : 0/0
  6567 ;;		Unchanged: 0/0
  6568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6569 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6570 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6572 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6573 ;;Total ram usage:       18 bytes
  6574 ;; Hardware stack levels used:    1
  6575 ;; Hardware stack levels required when called:   16
  6576 ;; This function calls:
  6577 ;;		_vfprintf
  6578 ;; This function is called by:
  6579 ;;		_APP_Tasks
  6580 ;; This function uses a non-reentrant model
  6581 ;;
  6582                           
  6583                           	psect	text26
  6584  005362                     __ptext26:
  6585                           	opt callstack 0
  6586  005362                     _sprintf:
  6587                           	opt callstack 13
  6588                           
  6589                           ;incstack = 0
  6590  005362  0EAD               	movlw	low (?_sprintf+4)
  6591  005364  0100               	movlb	0	; () banked
  6592  005366  6FB9               	movwf	sprintf@ap& (0+255),b
  6593  005368  0E00               	movlw	high (?_sprintf+4)
  6594  00536A  6FBA               	movwf	(sprintf@ap+1)& (0+255),b
  6595  00536C  C0A9  F0B3         	movff	sprintf@s,sprintf@f
  6596  005370  C0AA  F0B4         	movff	sprintf@s+1,sprintf@f+1
  6597                           
  6598                           ; BSR set to: 0
  6599  005374  0E00               	movlw	0
  6600  005376  6FB6               	movwf	(sprintf@f+3)& (0+255),b
  6601  005378  0E00               	movlw	0
  6602  00537A  6FB5               	movwf	(sprintf@f+2)& (0+255),b
  6603                           
  6604                           ; BSR set to: 0
  6605  00537C  0E00               	movlw	0
  6606  00537E  6FB8               	movwf	(sprintf@f+5)& (0+255),b
  6607  005380  0E00               	movlw	0
  6608  005382  6FB7               	movwf	(sprintf@f+4)& (0+255),b
  6609                           
  6610                           ; BSR set to: 0
  6611  005384  0EB3               	movlw	low sprintf@f
  6612  005386  6FA1               	movwf	vfprintf@fp& (0+255),b
  6613  005388  0E00               	movlw	high sprintf@f
  6614  00538A  6FA2               	movwf	(vfprintf@fp+1)& (0+255),b
  6615  00538C  C0AB  F0A3         	movff	sprintf@fmt,vfprintf@fmt
  6616  005390  C0AC  F0A4         	movff	sprintf@fmt+1,vfprintf@fmt+1
  6617  005394  0EB9               	movlw	low sprintf@ap
  6618  005396  6FA5               	movwf	vfprintf@ap& (0+255),b
  6619  005398  0E00               	movlw	high sprintf@ap
  6620  00539A  6FA6               	movwf	(vfprintf@ap+1)& (0+255),b
  6621  00539C  EC5B  F029         	call	_vfprintf	;wreg free
  6622  0053A0  0100               	movlb	0	; () banked
  6623  0053A2  51B5               	movf	(sprintf@f+2)& (0+255),w,b
  6624  0053A4  25A9               	addwf	sprintf@s& (0+255),w,b
  6625  0053A6  6ED9               	movwf	fsr2l,c
  6626  0053A8  51B6               	movf	(sprintf@f+3)& (0+255),w,b
  6627  0053AA  21AA               	addwfc	(sprintf@s+1)& (0+255),w,b
  6628  0053AC  6EDA               	movwf	fsr2h,c
  6629  0053AE  0E00               	movlw	0
  6630  0053B0  6EDF               	movwf	indf2,c
  6631                           
  6632                           ; BSR set to: 0
  6633  0053B2  0012               	return		;funcret
  6634  0053B4                     __end_of_sprintf:
  6635                           	opt callstack 0
  6636                           
  6637 ;; *************** function _get_pfb *****************
  6638 ;; Defined at:
  6639 ;;		line 5 in file "pfb.c"
  6640 ;; Parameters:    Size  Location     Type
  6641 ;;  buf             2   76[BANK0 ] PTR const unsigned char 
  6642 ;;		 -> get_pfb@s(2), appData.receive_packet(64), NULL(0), appData(76), 
  6643 ;; Auto vars:     Size  Location     Type
  6644 ;;  pfb_ascii      66    0[BANK3 ] unsigned char [66]
  6645 ;;  offset          4   78[BANK3 ] float 
  6646 ;;  offset_whole    4   70[BANK3 ] float 
  6647 ;;  mphase          4   66[BANK3 ] float 
  6648 ;;  s               2   76[BANK3 ] unsigned char [2]
  6649 ;;  token           2   74[BANK3 ] PTR unsigned char 
  6650 ;;		 -> get_pfb@pfb_ascii(66), NULL(0), 
  6651 ;; Return value:  Size  Location     Type
  6652 ;;                  2   76[BANK0 ] unsigned short 
  6653 ;; Registers used:
  6654 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6655 ;; Tracked objects:
  6656 ;;		On entry : 0/0
  6657 ;;		On exit  : 0/0
  6658 ;;		Unchanged: 0/0
  6659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6660 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6661 ;;      Locals:         0       0       0       0      82       0       0       0       0       0       0       0       
      +0       0       0       0
  6662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6663 ;;      Totals:         0       2       0       0      82       0       0       0       0       0       0       0       
      +0       0       0       0
  6664 ;;Total ram usage:       84 bytes
  6665 ;; Hardware stack levels used:    1
  6666 ;; Hardware stack levels required when called:   12
  6667 ;; This function calls:
  6668 ;;		___fldiv
  6669 ;;		___flmul
  6670 ;;		___flsub
  6671 ;;		___fltol
  6672 ;;		_atof
  6673 ;;		_roundf
  6674 ;;		_strcpy
  6675 ;;		_strtok
  6676 ;;		_truncf
  6677 ;; This function is called by:
  6678 ;;		_APP_Tasks
  6679 ;; This function uses a non-reentrant model
  6680 ;;
  6681                           
  6682                           	psect	text27
  6683  003DD8                     __ptext27:
  6684                           	opt callstack 0
  6685  003DD8                     _get_pfb:
  6686                           	opt callstack 17
  6687                           
  6688                           ;pfb.c: 5: uint16_t get_pfb(const char * buf);pfb.c: 6: {;pfb.c: 7:  float offset, mphas
      +                          e, offset_whole;;pfb.c: 8:  char *token, pfb_ascii[64 + 2], s[2] = " ";
  6689                           
  6690                           ; BSR set to: 0
  6691                           ;incstack = 0
  6692  003DD8  C187  F34C         	movff	get_pfb@F13321,get_pfb@s
  6693  003DDC  C188  F34D         	movff	get_pfb@F13321+1,get_pfb@s+1
  6694                           
  6695                           ;pfb.c: 10:  strcpy(pfb_ascii, buf);
  6696  003DE0  0E00               	movlw	low get_pfb@pfb_ascii
  6697  003DE2  6E13               	movwf	strcpy@dest,c
  6698  003DE4  0E03               	movlw	high get_pfb@pfb_ascii
  6699  003DE6  6E14               	movwf	strcpy@dest+1,c
  6700  003DE8  C0AC  F015         	movff	get_pfb@buf,strcpy@src
  6701  003DEC  C0AD  F016         	movff	get_pfb@buf+1,strcpy@src+1
  6702  003DF0  EC8A  F02C         	call	_strcpy	;wreg free
  6703  003DF4  0E00               	movlw	low get_pfb@pfb_ascii
  6704  003DF6  6E1F               	movwf	strtok@s,c
  6705  003DF8  0E03               	movlw	high get_pfb@pfb_ascii
  6706  003DFA  6E20               	movwf	strtok@s+1,c
  6707  003DFC  0E4C               	movlw	low get_pfb@s
  6708  003DFE  6E21               	movwf	strtok@sep,c
  6709  003E00  0E03               	movlw	high get_pfb@s
  6710  003E02  6E22               	movwf	strtok@sep+1,c
  6711  003E04  EC8E  F026         	call	_strtok	;wreg free
  6712                           
  6713                           ;pfb.c: 12:  token = strtok(((void*)0), s);
  6714  003E08  0E00               	movlw	0
  6715  003E0A  6E1F               	movwf	strtok@s,c
  6716  003E0C  0E00               	movlw	0
  6717  003E0E  6E20               	movwf	strtok@s+1,c
  6718  003E10  0E4C               	movlw	low get_pfb@s
  6719  003E12  6E21               	movwf	strtok@sep,c
  6720  003E14  0E03               	movlw	high get_pfb@s
  6721  003E16  6E22               	movwf	strtok@sep+1,c
  6722  003E18  EC8E  F026         	call	_strtok	;wreg free
  6723  003E1C  C01F  F34A         	movff	?_strtok,get_pfb@token
  6724  003E20  C020  F34B         	movff	?_strtok+1,get_pfb@token+1
  6725                           
  6726                           ;pfb.c: 14:  if (token != ((void*)0)) {
  6727  003E24  0103               	movlb	3	; () banked
  6728  003E26  514A               	movf	get_pfb@token& (0+255),w,b
  6729  003E28  114B               	iorwf	(get_pfb@token+1)& (0+255),w,b
  6730  003E2A  B4D8               	btfsc	status,2,c
  6731  003E2C  D092               	goto	l11399
  6732                           
  6733                           ; BSR set to: 3
  6734                           ;pfb.c: 15:   mphase = atof(token);
  6735  003E2E  C34A  F0A8         	movff	get_pfb@token,atof@s
  6736  003E32  C34B  F0A9         	movff	get_pfb@token+1,atof@s+1
  6737  003E36  ECE8  F02D         	call	_atof	;wreg free
  6738  003E3A  C0A8  F342         	movff	?_atof,get_pfb@mphase
  6739  003E3E  C0A9  F343         	movff	?_atof+1,get_pfb@mphase+1
  6740  003E42  C0AA  F344         	movff	?_atof+2,get_pfb@mphase+2
  6741  003E46  C0AB  F345         	movff	?_atof+3,get_pfb@mphase+3
  6742                           
  6743                           ;pfb.c: 16:   offset = ((24.0 / 2.0) * mphase) / 360.0;
  6744  003E4A  0E00               	movlw	0
  6745  003E4C  6E2F               	movwf	___flmul@a,c
  6746  003E4E  0E00               	movlw	0
  6747  003E50  6E30               	movwf	___flmul@a+1,c
  6748  003E52  0E40               	movlw	64
  6749  003E54  6E31               	movwf	___flmul@a+2,c
  6750  003E56  0E41               	movlw	65
  6751  003E58  6E32               	movwf	___flmul@a+3,c
  6752  003E5A  C342  F02B         	movff	get_pfb@mphase,___flmul@b
  6753  003E5E  C343  F02C         	movff	get_pfb@mphase+1,___flmul@b+1
  6754  003E62  C344  F02D         	movff	get_pfb@mphase+2,___flmul@b+2
  6755  003E66  C345  F02E         	movff	get_pfb@mphase+3,___flmul@b+3
  6756  003E6A  ECBD  F015         	call	___flmul	;wreg free
  6757  003E6E  C02B  F06D         	movff	?___flmul,___fldiv@b
  6758  003E72  C02C  F06E         	movff	?___flmul+1,___fldiv@b+1
  6759  003E76  C02D  F06F         	movff	?___flmul+2,___fldiv@b+2
  6760  003E7A  C02E  F070         	movff	?___flmul+3,___fldiv@b+3
  6761  003E7E  0E00               	movlw	0
  6762  003E80  0100               	movlb	0	; () banked
  6763  003E82  6F71               	movwf	___fldiv@a& (0+255),b
  6764  003E84  0E00               	movlw	0
  6765  003E86  6F72               	movwf	(___fldiv@a+1)& (0+255),b
  6766  003E88  0EB4               	movlw	180
  6767  003E8A  6F73               	movwf	(___fldiv@a+2)& (0+255),b
  6768  003E8C  0E43               	movlw	67
  6769  003E8E  6F74               	movwf	(___fldiv@a+3)& (0+255),b
  6770  003E90  EC8D  F01A         	call	___fldiv	;wreg free
  6771  003E94  C06D  F34E         	movff	?___fldiv,get_pfb@offset
  6772  003E98  C06E  F34F         	movff	?___fldiv+1,get_pfb@offset+1
  6773  003E9C  C06F  F350         	movff	?___fldiv+2,get_pfb@offset+2
  6774  003EA0  C070  F351         	movff	?___fldiv+3,get_pfb@offset+3
  6775                           
  6776                           ;pfb.c: 17:   offset_whole = truncf(offset);
  6777  003EA4  C34E  F013         	movff	get_pfb@offset,truncf@x
  6778  003EA8  C34F  F014         	movff	get_pfb@offset+1,truncf@x+1
  6779  003EAC  C350  F015         	movff	get_pfb@offset+2,truncf@x+2
  6780  003EB0  C351  F016         	movff	get_pfb@offset+3,truncf@x+3
  6781  003EB4  EC86  F023         	call	_truncf	;wreg free
  6782  003EB8  C013  F346         	movff	?_truncf,get_pfb@offset_whole
  6783  003EBC  C014  F347         	movff	?_truncf+1,get_pfb@offset_whole+1
  6784  003EC0  C015  F348         	movff	?_truncf+2,get_pfb@offset_whole+2
  6785  003EC4  C016  F349         	movff	?_truncf+3,get_pfb@offset_whole+3
  6786                           
  6787                           ;pfb.c: 18:   offset = (offset - offset_whole)*360.0;
  6788  003EC8  C346  F027         	movff	get_pfb@offset_whole,___flsub@a
  6789  003ECC  C347  F028         	movff	get_pfb@offset_whole+1,___flsub@a+1
  6790  003ED0  C348  F029         	movff	get_pfb@offset_whole+2,___flsub@a+2
  6791  003ED4  C349  F02A         	movff	get_pfb@offset_whole+3,___flsub@a+3
  6792  003ED8  C34E  F023         	movff	get_pfb@offset,___flsub@b
  6793  003EDC  C34F  F024         	movff	get_pfb@offset+1,___flsub@b+1
  6794  003EE0  C350  F025         	movff	get_pfb@offset+2,___flsub@b+2
  6795  003EE4  C351  F026         	movff	get_pfb@offset+3,___flsub@b+3
  6796  003EE8  ECE9  F02A         	call	___flsub	;wreg free
  6797  003EEC  C023  F02B         	movff	?___flsub,___flmul@b
  6798  003EF0  C024  F02C         	movff	?___flsub+1,___flmul@b+1
  6799  003EF4  C025  F02D         	movff	?___flsub+2,___flmul@b+2
  6800  003EF8  C026  F02E         	movff	?___flsub+3,___flmul@b+3
  6801  003EFC  0E00               	movlw	0
  6802  003EFE  6E2F               	movwf	___flmul@a,c
  6803  003F00  0E00               	movlw	0
  6804  003F02  6E30               	movwf	___flmul@a+1,c
  6805  003F04  0EB4               	movlw	180
  6806  003F06  6E31               	movwf	___flmul@a+2,c
  6807  003F08  0E43               	movlw	67
  6808  003F0A  6E32               	movwf	___flmul@a+3,c
  6809  003F0C  ECBD  F015         	call	___flmul	;wreg free
  6810  003F10  C02B  F34E         	movff	?___flmul,get_pfb@offset
  6811  003F14  C02C  F34F         	movff	?___flmul+1,get_pfb@offset+1
  6812  003F18  C02D  F350         	movff	?___flmul+2,get_pfb@offset+2
  6813  003F1C  C02E  F351         	movff	?___flmul+3,get_pfb@offset+3
  6814                           
  6815                           ;pfb.c: 20:   return(uint16_t) roundf(offset);
  6816  003F20  C34E  F037         	movff	get_pfb@offset,roundf@x
  6817  003F24  C34F  F038         	movff	get_pfb@offset+1,roundf@x+1
  6818  003F28  C350  F039         	movff	get_pfb@offset+2,roundf@x+2
  6819  003F2C  C351  F03A         	movff	get_pfb@offset+3,roundf@x+3
  6820  003F30  EC67  F017         	call	_roundf	;wreg free
  6821  003F34  C037  F083         	movff	?_roundf,___fltol@f1
  6822  003F38  C038  F084         	movff	?_roundf+1,___fltol@f1+1
  6823  003F3C  C039  F085         	movff	?_roundf+2,___fltol@f1+2
  6824  003F40  C03A  F086         	movff	?_roundf+3,___fltol@f1+3
  6825  003F44  EC30  F026         	call	___fltol	;wreg free
  6826  003F48  C083  F0AC         	movff	?___fltol,?_get_pfb
  6827  003F4C  C084  F0AD         	movff	?___fltol+1,?_get_pfb+1
  6828  003F50  0012               	return	
  6829  003F52                     l11399:
  6830                           
  6831                           ; BSR set to: 3
  6832                           ;pfb.c: 22:   return(666);
  6833  003F52  0E02               	movlw	2
  6834  003F54  0100               	movlb	0	; () banked
  6835  003F56  6FAD               	movwf	(?_get_pfb+1)& (0+255),b
  6836  003F58  0E9A               	movlw	154
  6837  003F5A  6FAC               	movwf	?_get_pfb& (0+255),b
  6838  003F5C  0012               	return		;funcret
  6839  003F5E                     __end_of_get_pfb:
  6840                           	opt callstack 0
  6841                           
  6842 ;; *************** function _truncf *****************
  6843 ;; Defined at:
  6844 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/truncf.c"
  6845 ;; Parameters:    Size  Location     Type
  6846 ;;  x               4   18[COMRAM] float 
  6847 ;; Auto vars:     Size  Location     Type
  6848 ;;  u               4   34[COMRAM] struct .
  6849 ;;  m               4   28[COMRAM] unsigned long 
  6850 ;;  e               2   32[COMRAM] int 
  6851 ;; Return value:  Size  Location     Type
  6852 ;;                  4   18[COMRAM] float 
  6853 ;; Registers used:
  6854 ;;		wreg, status,2, status,0
  6855 ;; Tracked objects:
  6856 ;;		On entry : 0/0
  6857 ;;		On exit  : 0/0
  6858 ;;		Unchanged: 0/0
  6859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6860 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6861 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6862 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6863 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6864 ;;Total ram usage:       20 bytes
  6865 ;; Hardware stack levels used:    1
  6866 ;; Hardware stack levels required when called:    8
  6867 ;; This function calls:
  6868 ;;		Nothing
  6869 ;; This function is called by:
  6870 ;;		_get_pfb
  6871 ;; This function uses a non-reentrant model
  6872 ;;
  6873                           
  6874                           	psect	text28
  6875  00470C                     __ptext28:
  6876                           	opt callstack 0
  6877  00470C                     _truncf:
  6878                           	opt callstack 20
  6879                           
  6880                           ;incstack = 0
  6881  00470C  C116  F023         	movff	truncf@F524,truncf@u
  6882  004710  C117  F024         	movff	truncf@F524+1,truncf@u+1
  6883  004714  C118  F025         	movff	truncf@F524+2,truncf@u+2
  6884  004718  C119  F026         	movff	truncf@F524+3,truncf@u+3
  6885  00471C  C013  F023         	movff	truncf@x,truncf@u
  6886  004720  C014  F024         	movff	truncf@x+1,truncf@u+1
  6887  004724  C015  F025         	movff	truncf@x+2,truncf@u+2
  6888  004728  C016  F026         	movff	truncf@x+3,truncf@u+3
  6889  00472C  0E8A               	movlw	138
  6890  00472E  6E17               	movwf	??_truncf& (0+255),c
  6891  004730  0EFF               	movlw	255
  6892  004732  6E18               	movwf	(??_truncf+1)& (0+255),c
  6893  004734  C023  F019         	movff	truncf@u,??_truncf+2
  6894  004738  C024  F01A         	movff	truncf@u+1,??_truncf+3
  6895  00473C  C025  F01B         	movff	truncf@u+2,??_truncf+4
  6896  004740  C026  F01C         	movff	truncf@u+3,??_truncf+5
  6897  004744  0E18               	movlw	24
  6898  004746  D005               	goto	u14760
  6899  004748                     u14765:
  6900  004748  90D8               	bcf	status,0,c
  6901  00474A  321C               	rrcf	??_truncf+5,f,c
  6902  00474C  321B               	rrcf	??_truncf+4,f,c
  6903  00474E  321A               	rrcf	??_truncf+3,f,c
  6904  004750  3219               	rrcf	??_truncf+2,f,c
  6905  004752                     u14760:
  6906  004752  2EE8               	decfsz	wreg,f,c
  6907  004754  D7F9               	goto	u14765
  6908  004756  5019               	movf	??_truncf+2,w,c
  6909  004758  2417               	addwf	??_truncf,w,c
  6910  00475A  6E21               	movwf	truncf@e,c
  6911  00475C  0E00               	movlw	0
  6912  00475E  2018               	addwfc	??_truncf+1,w,c
  6913  004760  6E22               	movwf	truncf@e+1,c
  6914  004762  BE22               	btfsc	truncf@e+1,7,c
  6915  004764  D00F               	goto	l11145
  6916  004766  5022               	movf	truncf@e+1,w,c
  6917  004768  E104               	bnz	u14770
  6918  00476A  0E20               	movlw	32
  6919  00476C  5C21               	subwf	truncf@e,w,c
  6920  00476E  A0D8               	btfss	status,0,c
  6921  004770  D009               	goto	l11145
  6922  004772                     u14770:
  6923  004772  C013  F013         	movff	truncf@x,?_truncf
  6924  004776  C014  F014         	movff	truncf@x+1,?_truncf+1
  6925  00477A  C015  F015         	movff	truncf@x+2,?_truncf+2
  6926  00477E  C016  F016         	movff	truncf@x+3,?_truncf+3
  6927  004782  0012               	return	
  6928  004784                     l11145:
  6929  004784  BE22               	btfsc	truncf@e+1,7,c
  6930  004786  D006               	goto	u14780
  6931  004788  5022               	movf	truncf@e+1,w,c
  6932  00478A  E108               	bnz	l11149
  6933  00478C  0E09               	movlw	9
  6934  00478E  5C21               	subwf	truncf@e,w,c
  6935  004790  B0D8               	btfsc	status,0,c
  6936  004792  D004               	goto	l11149
  6937  004794                     u14780:
  6938  004794  0E00               	movlw	0
  6939  004796  6E22               	movwf	truncf@e+1,c
  6940  004798  0E01               	movlw	1
  6941  00479A  6E21               	movwf	truncf@e,c
  6942  00479C                     l11149:
  6943  00479C  0EFF               	movlw	255
  6944  00479E  6E17               	movwf	??_truncf& (0+255),c
  6945  0047A0  0EFF               	movlw	255
  6946  0047A2  6E18               	movwf	(??_truncf+1)& (0+255),c
  6947  0047A4  0EFF               	movlw	255
  6948  0047A6  6E19               	movwf	(??_truncf+2)& (0+255),c
  6949  0047A8  0EFF               	movlw	255
  6950  0047AA  6E1A               	movwf	(??_truncf+3)& (0+255),c
  6951  0047AC  5021               	movf	truncf@e,w,c
  6952  0047AE  2AE8               	incf	wreg,f,c
  6953  0047B0  D005               	goto	u14790
  6954  0047B2                     u14795:
  6955  0047B2  90D8               	bcf	status,0,c
  6956  0047B4  321A               	rrcf	??_truncf+3,f,c
  6957  0047B6  3219               	rrcf	??_truncf+2,f,c
  6958  0047B8  3218               	rrcf	??_truncf+1,f,c
  6959  0047BA  3217               	rrcf	??_truncf,f,c
  6960  0047BC                     u14790:
  6961  0047BC  2EE8               	decfsz	wreg,f,c
  6962  0047BE  D7F9               	goto	u14795
  6963  0047C0  C017  F01D         	movff	??_truncf,truncf@m
  6964  0047C4  C018  F01E         	movff	??_truncf+1,truncf@m+1
  6965  0047C8  C019  F01F         	movff	??_truncf+2,truncf@m+2
  6966  0047CC  C01A  F020         	movff	??_truncf+3,truncf@m+3
  6967  0047D0  501D               	movf	truncf@m,w,c
  6968  0047D2  1423               	andwf	truncf@u,w,c
  6969  0047D4  6E17               	movwf	??_truncf& (0+255),c
  6970  0047D6  501E               	movf	truncf@m+1,w,c
  6971  0047D8  1424               	andwf	truncf@u+1,w,c
  6972  0047DA  6E18               	movwf	(??_truncf+1)& (0+255),c
  6973  0047DC  501F               	movf	truncf@m+2,w,c
  6974  0047DE  1425               	andwf	truncf@u+2,w,c
  6975  0047E0  6E19               	movwf	(??_truncf+2)& (0+255),c
  6976  0047E2  5020               	movf	truncf@m+3,w,c
  6977  0047E4  1426               	andwf	truncf@u+3,w,c
  6978  0047E6  6E1A               	movwf	(??_truncf+3)& (0+255),c
  6979  0047E8  5017               	movf	??_truncf,w,c
  6980  0047EA  1018               	iorwf	??_truncf+1,w,c
  6981  0047EC  1019               	iorwf	??_truncf+2,w,c
  6982  0047EE  101A               	iorwf	??_truncf+3,w,c
  6983  0047F0  B4D8               	btfsc	status,2,c
  6984  0047F2  D7BF               	goto	u14770
  6985  0047F4  1C1D               	comf	truncf@m,w,c
  6986  0047F6  6E17               	movwf	??_truncf& (0+255),c
  6987  0047F8  1C1E               	comf	truncf@m+1,w,c
  6988  0047FA  6E18               	movwf	(??_truncf+1)& (0+255),c
  6989  0047FC  1C1F               	comf	truncf@m+2,w,c
  6990  0047FE  6E19               	movwf	(??_truncf+2)& (0+255),c
  6991  004800  1C20               	comf	truncf@m+3,w,c
  6992  004802  6E1A               	movwf	(??_truncf+3)& (0+255),c
  6993  004804  5017               	movf	??_truncf,w,c
  6994  004806  1623               	andwf	truncf@u,f,c
  6995  004808  5018               	movf	??_truncf+1,w,c
  6996  00480A  1624               	andwf	truncf@u+1,f,c
  6997  00480C  5019               	movf	??_truncf+2,w,c
  6998  00480E  1625               	andwf	truncf@u+2,f,c
  6999  004810  501A               	movf	??_truncf+3,w,c
  7000  004812  1626               	andwf	truncf@u+3,f,c
  7001  004814  C023  F013         	movff	truncf@u,?_truncf
  7002  004818  C024  F014         	movff	truncf@u+1,?_truncf+1
  7003  00481C  C025  F015         	movff	truncf@u+2,?_truncf+2
  7004  004820  C026  F016         	movff	truncf@u+3,?_truncf+3
  7005  004824  0012               	return		;funcret
  7006  004826                     __end_of_truncf:
  7007                           	opt callstack 0
  7008                           
  7009 ;; *************** function _strtok *****************
  7010 ;; Defined at:
  7011 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strtok.c"
  7012 ;; Parameters:    Size  Location     Type
  7013 ;;  s               2   30[COMRAM] PTR unsigned char 
  7014 ;;		 -> get_pfb@pfb_ascii(66), NULL(0), 
  7015 ;;  sep             2   32[COMRAM] PTR const unsigned char 
  7016 ;;		 -> get_pfb@s(2), 
  7017 ;; Auto vars:     Size  Location     Type
  7018 ;;		None
  7019 ;; Return value:  Size  Location     Type
  7020 ;;                  2   30[COMRAM] PTR unsigned char 
  7021 ;; Registers used:
  7022 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7023 ;; Tracked objects:
  7024 ;;		On entry : 0/0
  7025 ;;		On exit  : 0/0
  7026 ;;		Unchanged: 0/0
  7027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7028 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7031 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7032 ;;Total ram usage:        4 bytes
  7033 ;; Hardware stack levels used:    1
  7034 ;; Hardware stack levels required when called:   10
  7035 ;; This function calls:
  7036 ;;		_strcspn
  7037 ;;		_strspn
  7038 ;; This function is called by:
  7039 ;;		_get_pfb
  7040 ;; This function uses a non-reentrant model
  7041 ;;
  7042                           
  7043                           	psect	text29
  7044  004D1C                     __ptext29:
  7045                           	opt callstack 0
  7046  004D1C                     _strtok:
  7047                           	opt callstack 18
  7048                           
  7049                           ;incstack = 0
  7050  004D1C  501F               	movf	strtok@s,w,c
  7051  004D1E  1020               	iorwf	strtok@s+1,w,c
  7052  004D20  A4D8               	btfss	status,2,c
  7053  004D22  D00D               	goto	l11115
  7054  004D24  C0C0  F01F         	movff	strtok@p,strtok@s
  7055  004D28  C0C1  F020         	movff	strtok@p+1,strtok@s+1
  7056  004D2C  501F               	movf	strtok@s,w,c
  7057  004D2E  1020               	iorwf	strtok@s+1,w,c
  7058  004D30  A4D8               	btfss	status,2,c
  7059  004D32  D005               	goto	l11115
  7060  004D34  0E00               	movlw	0
  7061  004D36  6E1F               	movwf	?_strtok,c
  7062  004D38  0E00               	movlw	0
  7063  004D3A  6E20               	movwf	?_strtok+1,c
  7064  004D3C  0012               	return	
  7065  004D3E                     l11115:
  7066  004D3E  C01F  F018         	movff	strtok@s,strspn@s
  7067  004D42  C020  F019         	movff	strtok@s+1,strspn@s+1
  7068  004D46  C021  F01A         	movff	strtok@sep,strspn@c
  7069  004D4A  C022  F01B         	movff	strtok@sep+1,strspn@c+1
  7070  004D4E  ECDA  F029         	call	_strspn	;wreg free
  7071  004D52  5018               	movf	?_strspn,w,c
  7072  004D54  261F               	addwf	strtok@s,f,c
  7073  004D56  5019               	movf	?_strspn+1,w,c
  7074  004D58  2220               	addwfc	strtok@s+1,f,c
  7075  004D5A  C01F  FFD9         	movff	strtok@s,fsr2l
  7076  004D5E  C020  FFDA         	movff	strtok@s+1,fsr2h
  7077  004D62  50DF               	movf	indf2,w,c
  7078  004D64  A4D8               	btfss	status,2,c
  7079  004D66  D00A               	goto	l11123
  7080  004D68  0E00               	movlw	0
  7081  004D6A  0100               	movlb	0	; () banked
  7082  004D6C  6FC0               	movwf	strtok@p& (0+255),b
  7083  004D6E  0E00               	movlw	0
  7084  004D70  6FC1               	movwf	(strtok@p+1)& (0+255),b
  7085  004D72  C0C0  F01F         	movff	strtok@p,?_strtok
  7086  004D76  C0C1  F020         	movff	strtok@p+1,?_strtok+1
  7087  004D7A  0012               	return	
  7088  004D7C                     l11123:
  7089  004D7C  C01F  F018         	movff	strtok@s,strcspn@s
  7090  004D80  C020  F019         	movff	strtok@s+1,strcspn@s+1
  7091  004D84  C021  F01A         	movff	strtok@sep,strcspn@c
  7092  004D88  C022  F01B         	movff	strtok@sep+1,strcspn@c+1
  7093  004D8C  EC02  F02A         	call	_strcspn	;wreg free
  7094  004D90  5018               	movf	?_strcspn,w,c
  7095  004D92  241F               	addwf	strtok@s,w,c
  7096  004D94  0100               	movlb	0	; () banked
  7097  004D96  6FC0               	movwf	strtok@p& (0+255),b
  7098  004D98  5019               	movf	?_strcspn+1,w,c
  7099  004D9A  2020               	addwfc	strtok@s+1,w,c
  7100  004D9C  6FC1               	movwf	(strtok@p+1)& (0+255),b
  7101                           
  7102                           ; BSR set to: 0
  7103  004D9E  C0C0  FFD9         	movff	strtok@p,fsr2l
  7104  004DA2  C0C1  FFDA         	movff	strtok@p+1,fsr2h
  7105  004DA6  50DF               	movf	indf2,w,c
  7106  004DA8  B4D8               	btfsc	status,2,c
  7107  004DAA  D009               	goto	l11131
  7108                           
  7109                           ; BSR set to: 0
  7110  004DAC  C0C0  FFD9         	movff	strtok@p,fsr2l
  7111  004DB0  C0C1  FFDA         	movff	strtok@p+1,fsr2h
  7112  004DB4  0E00               	movlw	0
  7113  004DB6  6EDF               	movwf	indf2,c
  7114                           
  7115                           ; BSR set to: 0
  7116  004DB8  4BC0               	infsnz	strtok@p& (0+255),f,b
  7117  004DBA  2BC1               	incf	(strtok@p+1)& (0+255),f,b
  7118  004DBC  D004               	goto	l2267
  7119  004DBE                     l11131:
  7120                           
  7121                           ; BSR set to: 0
  7122  004DBE  0E00               	movlw	0
  7123  004DC0  6FC0               	movwf	strtok@p& (0+255),b
  7124  004DC2  0E00               	movlw	0
  7125  004DC4  6FC1               	movwf	(strtok@p+1)& (0+255),b
  7126  004DC6                     l2267:
  7127                           
  7128                           ; BSR set to: 0
  7129  004DC6  C01F  F01F         	movff	strtok@s,?_strtok
  7130  004DCA  C020  F020         	movff	strtok@s+1,?_strtok+1
  7131  004DCE  0012               	return		;funcret
  7132  004DD0                     __end_of_strtok:
  7133                           	opt callstack 0
  7134                           
  7135 ;; *************** function _strspn *****************
  7136 ;; Defined at:
  7137 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strspn.c"
  7138 ;; Parameters:    Size  Location     Type
  7139 ;;  s               2   23[COMRAM] PTR const unsigned char 
  7140 ;;		 -> get_pfb@pfb_ascii(66), NULL(0), 
  7141 ;;  c               2   25[COMRAM] PTR const unsigned char 
  7142 ;;		 -> get_pfb@s(2), 
  7143 ;; Auto vars:     Size  Location     Type
  7144 ;;  i               2   28[COMRAM] unsigned int 
  7145 ;; Return value:  Size  Location     Type
  7146 ;;                  2   23[COMRAM] unsigned int 
  7147 ;; Registers used:
  7148 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7149 ;; Tracked objects:
  7150 ;;		On entry : 0/0
  7151 ;;		On exit  : 0/0
  7152 ;;		Unchanged: 0/0
  7153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7154 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7155 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7156 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7157 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7158 ;;Total ram usage:        7 bytes
  7159 ;; Hardware stack levels used:    1
  7160 ;; Hardware stack levels required when called:    9
  7161 ;; This function calls:
  7162 ;;		_strchr
  7163 ;; This function is called by:
  7164 ;;		_strtok
  7165 ;; This function uses a non-reentrant model
  7166 ;;
  7167                           
  7168                           	psect	text30
  7169  0053B4                     __ptext30:
  7170                           	opt callstack 0
  7171  0053B4                     _strspn:
  7172                           	opt callstack 18
  7173                           
  7174                           ;incstack = 0
  7175  0053B4  0E00               	movlw	0
  7176  0053B6  6E1E               	movwf	strspn@i+1,c
  7177  0053B8  0E00               	movlw	0
  7178  0053BA  6E1D               	movwf	strspn@i,c
  7179  0053BC  D004               	goto	l11033
  7180  0053BE                     l11031:
  7181  0053BE  4A18               	infsnz	strspn@s,f,c
  7182  0053C0  2A19               	incf	strspn@s+1,f,c
  7183  0053C2  4A1D               	infsnz	strspn@i,f,c
  7184  0053C4  2A1E               	incf	strspn@i+1,f,c
  7185  0053C6                     l11033:
  7186  0053C6  C018  FFD9         	movff	strspn@s,fsr2l
  7187  0053CA  C019  FFDA         	movff	strspn@s+1,fsr2h
  7188  0053CE  50DF               	movf	indf2,w,c
  7189  0053D0  B4D8               	btfsc	status,2,c
  7190  0053D2  D013               	goto	u14620
  7191  0053D4  C01A  F013         	movff	strspn@c,strchr@s
  7192  0053D8  C01B  F014         	movff	strspn@c+1,strchr@s+1
  7193  0053DC  C018  FFD9         	movff	strspn@s,fsr2l
  7194  0053E0  C019  FFDA         	movff	strspn@s+1,fsr2h
  7195  0053E4  50DF               	movf	indf2,w,c
  7196  0053E6  6E1C               	movwf	??_strspn& (0+255),c
  7197  0053E8  501C               	movf	??_strspn,w,c
  7198  0053EA  6E15               	movwf	strchr@c,c
  7199  0053EC  6A16               	clrf	strchr@c+1,c
  7200  0053EE  EC6F  F02C         	call	_strchr	;wreg free
  7201  0053F2  5013               	movf	?_strchr,w,c
  7202  0053F4  1014               	iorwf	?_strchr+1,w,c
  7203  0053F6  A4D8               	btfss	status,2,c
  7204  0053F8  D7E2               	goto	l11031
  7205  0053FA                     u14620:
  7206  0053FA  C01D  F018         	movff	strspn@i,?_strspn
  7207  0053FE  C01E  F019         	movff	strspn@i+1,?_strspn+1
  7208  005402  0012               	return		;funcret
  7209  005404                     __end_of_strspn:
  7210                           	opt callstack 0
  7211                           
  7212 ;; *************** function _strcspn *****************
  7213 ;; Defined at:
  7214 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strcspn.c"
  7215 ;; Parameters:    Size  Location     Type
  7216 ;;  s               2   23[COMRAM] PTR const unsigned char 
  7217 ;;		 -> get_pfb@pfb_ascii(66), NULL(0), 
  7218 ;;  c               2   25[COMRAM] PTR const unsigned char 
  7219 ;;		 -> get_pfb@s(2), 
  7220 ;; Auto vars:     Size  Location     Type
  7221 ;;  i               2   28[COMRAM] unsigned int 
  7222 ;; Return value:  Size  Location     Type
  7223 ;;                  2   23[COMRAM] unsigned int 
  7224 ;; Registers used:
  7225 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7226 ;; Tracked objects:
  7227 ;;		On entry : 0/0
  7228 ;;		On exit  : 0/0
  7229 ;;		Unchanged: 0/0
  7230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7231 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7232 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7233 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7234 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7235 ;;Total ram usage:        7 bytes
  7236 ;; Hardware stack levels used:    1
  7237 ;; Hardware stack levels required when called:    9
  7238 ;; This function calls:
  7239 ;;		_strchr
  7240 ;; This function is called by:
  7241 ;;		_strtok
  7242 ;; This function uses a non-reentrant model
  7243 ;;
  7244                           
  7245                           	psect	text31
  7246  005404                     __ptext31:
  7247                           	opt callstack 0
  7248  005404                     _strcspn:
  7249                           	opt callstack 18
  7250                           
  7251                           ;incstack = 0
  7252  005404  0E00               	movlw	0
  7253  005406  6E1E               	movwf	strcspn@i+1,c
  7254  005408  0E00               	movlw	0
  7255  00540A  6E1D               	movwf	strcspn@i,c
  7256  00540C  D004               	goto	l11041
  7257  00540E                     l11039:
  7258  00540E  4A18               	infsnz	strcspn@s,f,c
  7259  005410  2A19               	incf	strcspn@s+1,f,c
  7260  005412  4A1D               	infsnz	strcspn@i,f,c
  7261  005414  2A1E               	incf	strcspn@i+1,f,c
  7262  005416                     l11041:
  7263  005416  C018  FFD9         	movff	strcspn@s,fsr2l
  7264  00541A  C019  FFDA         	movff	strcspn@s+1,fsr2h
  7265  00541E  50DF               	movf	indf2,w,c
  7266  005420  B4D8               	btfsc	status,2,c
  7267  005422  D013               	goto	u14640
  7268  005424  C01A  F013         	movff	strcspn@c,strchr@s
  7269  005428  C01B  F014         	movff	strcspn@c+1,strchr@s+1
  7270  00542C  C018  FFD9         	movff	strcspn@s,fsr2l
  7271  005430  C019  FFDA         	movff	strcspn@s+1,fsr2h
  7272  005434  50DF               	movf	indf2,w,c
  7273  005436  6E1C               	movwf	??_strcspn& (0+255),c
  7274  005438  501C               	movf	??_strcspn,w,c
  7275  00543A  6E15               	movwf	strchr@c,c
  7276  00543C  6A16               	clrf	strchr@c+1,c
  7277  00543E  EC6F  F02C         	call	_strchr	;wreg free
  7278  005442  5013               	movf	?_strchr,w,c
  7279  005444  1014               	iorwf	?_strchr+1,w,c
  7280  005446  B4D8               	btfsc	status,2,c
  7281  005448  D7E2               	goto	l11039
  7282  00544A                     u14640:
  7283  00544A  C01D  F018         	movff	strcspn@i,?_strcspn
  7284  00544E  C01E  F019         	movff	strcspn@i+1,?_strcspn+1
  7285  005452  0012               	return		;funcret
  7286  005454                     __end_of_strcspn:
  7287                           	opt callstack 0
  7288                           
  7289 ;; *************** function _strchr *****************
  7290 ;; Defined at:
  7291 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strchr.c"
  7292 ;; Parameters:    Size  Location     Type
  7293 ;;  s               2   18[COMRAM] PTR const unsigned char 
  7294 ;;		 -> get_pfb@s(2), appData.receive_packet(64), NULL(0), appData(76), 
  7295 ;;  c               2   20[COMRAM] int 
  7296 ;; Auto vars:     Size  Location     Type
  7297 ;;		None
  7298 ;; Return value:  Size  Location     Type
  7299 ;;                  2   18[COMRAM] PTR unsigned char 
  7300 ;; Registers used:
  7301 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7302 ;; Tracked objects:
  7303 ;;		On entry : 0/0
  7304 ;;		On exit  : 0/0
  7305 ;;		Unchanged: 0/0
  7306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7307 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7309 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7310 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7311 ;;Total ram usage:        5 bytes
  7312 ;; Hardware stack levels used:    1
  7313 ;; Hardware stack levels required when called:    8
  7314 ;; This function calls:
  7315 ;;		Nothing
  7316 ;; This function is called by:
  7317 ;;		_strstr
  7318 ;;		_strcspn
  7319 ;;		_strspn
  7320 ;; This function uses a non-reentrant model
  7321 ;;
  7322                           
  7323                           	psect	text32
  7324  0058DE                     __ptext32:
  7325                           	opt callstack 0
  7326  0058DE                     _strchr:
  7327                           	opt callstack 20
  7328                           
  7329                           ;incstack = 0
  7330  0058DE  C013  FFD9         	movff	strchr@s,fsr2l
  7331  0058E2  C014  FFDA         	movff	strchr@s+1,fsr2h
  7332  0058E6  5015               	movf	strchr@c,w,c
  7333  0058E8  18DE               	xorwf	postinc2,w,c
  7334  0058EA  A4D8               	btfss	status,2,c
  7335  0058EC  D005               	goto	l10551
  7336  0058EE  C013  F013         	movff	strchr@s,?_strchr
  7337  0058F2  C014  F014         	movff	strchr@s+1,?_strchr+1
  7338  0058F6  0012               	return	
  7339  0058F8                     l10551:
  7340  0058F8  C013  FFD9         	movff	strchr@s,fsr2l
  7341  0058FC  C014  FFDA         	movff	strchr@s+1,fsr2h
  7342  005900  4A13               	infsnz	strchr@s,f,c
  7343  005902  2A14               	incf	strchr@s+1,f,c
  7344  005904  50DF               	movf	indf2,w,c
  7345  005906  A4D8               	btfss	status,2,c
  7346  005908  D7EA               	goto	_strchr
  7347  00590A  0E00               	movlw	0
  7348  00590C  6E13               	movwf	?_strchr,c
  7349  00590E  0E00               	movlw	0
  7350  005910  6E14               	movwf	?_strchr+1,c
  7351  005912  0012               	return		;funcret
  7352  005914                     __end_of_strchr:
  7353                           	opt callstack 0
  7354                           
  7355 ;; *************** function _strcpy *****************
  7356 ;; Defined at:
  7357 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strcpy.c"
  7358 ;; Parameters:    Size  Location     Type
  7359 ;;  dest            2   18[COMRAM] PTR unsigned char 
  7360 ;;		 -> get_pfb@pfb_ascii(66), 
  7361 ;;  src             2   20[COMRAM] PTR const unsigned char 
  7362 ;;		 -> get_pfb@s(2), appData.receive_packet(64), NULL(0), appData(76), 
  7363 ;; Auto vars:     Size  Location     Type
  7364 ;;  d               2   24[COMRAM] PTR unsigned char 
  7365 ;;		 -> get_pfb@pfb_ascii(66), 
  7366 ;;  s               2   22[COMRAM] PTR const unsigned char 
  7367 ;;		 -> get_pfb@s(2), appData.receive_packet(64), NULL(0), appData(76), 
  7368 ;; Return value:  Size  Location     Type
  7369 ;;                  2   18[COMRAM] PTR unsigned char 
  7370 ;; Registers used:
  7371 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7372 ;; Tracked objects:
  7373 ;;		On entry : 0/0
  7374 ;;		On exit  : 0/0
  7375 ;;		Unchanged: 0/0
  7376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7377 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7378 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7380 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7381 ;;Total ram usage:        8 bytes
  7382 ;; Hardware stack levels used:    1
  7383 ;; Hardware stack levels required when called:    8
  7384 ;; This function calls:
  7385 ;;		Nothing
  7386 ;; This function is called by:
  7387 ;;		_get_pfb
  7388 ;; This function uses a non-reentrant model
  7389 ;;
  7390                           
  7391                           	psect	text33
  7392  005914                     __ptext33:
  7393                           	opt callstack 0
  7394  005914                     _strcpy:
  7395                           	opt callstack 20
  7396                           
  7397                           ;incstack = 0
  7398  005914  C015  F017         	movff	strcpy@src,strcpy@s
  7399  005918  C016  F018         	movff	strcpy@src+1,strcpy@s+1
  7400  00591C  C013  F019         	movff	strcpy@dest,strcpy@d
  7401  005920  C014  F01A         	movff	strcpy@dest+1,strcpy@d+1
  7402  005924                     l11105:
  7403  005924  C017  FFD9         	movff	strcpy@s,fsr2l
  7404  005928  C018  FFDA         	movff	strcpy@s+1,fsr2h
  7405  00592C  4A17               	infsnz	strcpy@s,f,c
  7406  00592E  2A18               	incf	strcpy@s+1,f,c
  7407  005930  C019  FFE1         	movff	strcpy@d,fsr1l
  7408  005934  C01A  FFE2         	movff	strcpy@d+1,fsr1h
  7409  005938  4A19               	infsnz	strcpy@d,f,c
  7410  00593A  2A1A               	incf	strcpy@d+1,f,c
  7411  00593C  CFDF FFE7          	movff	indf2,indf1
  7412  005940  50E7               	movf	indf1,w,c
  7413  005942  B4D8               	btfsc	status,2,c
  7414  005944  0012               	return	
  7415  005946  D7EE               	goto	l11105
  7416  005948                     __end_of_strcpy:
  7417                           	opt callstack 0
  7418                           
  7419 ;; *************** function _roundf *****************
  7420 ;; Defined at:
  7421 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/roundf.c"
  7422 ;; Parameters:    Size  Location     Type
  7423 ;;  x               4   54[COMRAM] float 
  7424 ;; Auto vars:     Size  Location     Type
  7425 ;;  y               4   31[BANK0 ] float 
  7426 ;;  u               4   27[BANK0 ] struct .
  7427 ;;  e               2   21[BANK0 ] int 
  7428 ;; Return value:  Size  Location     Type
  7429 ;;                  4   54[COMRAM] float 
  7430 ;; Registers used:
  7431 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7432 ;; Tracked objects:
  7433 ;;		On entry : 0/0
  7434 ;;		On exit  : 0/0
  7435 ;;		Unchanged: 0/0
  7436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7437 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7438 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7439 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7440 ;;      Totals:         4      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7441 ;;Total ram usage:       26 bytes
  7442 ;; Hardware stack levels used:    1
  7443 ;; Hardware stack levels required when called:   10
  7444 ;; This function calls:
  7445 ;;		___fladd
  7446 ;;		___flge
  7447 ;;		___flmul
  7448 ;;		___flneg
  7449 ;;		___flsub
  7450 ;; This function is called by:
  7451 ;;		_get_pfb
  7452 ;; This function uses a non-reentrant model
  7453 ;;
  7454                           
  7455                           	psect	text34
  7456  002ECE                     __ptext34:
  7457                           	opt callstack 0
  7458  002ECE                     _roundf:
  7459                           	opt callstack 18
  7460                           
  7461                           ;incstack = 0
  7462  002ECE  C11A  F07B         	movff	roundf@F525,roundf@u
  7463  002ED2  C11B  F07C         	movff	roundf@F525+1,roundf@u+1
  7464  002ED6  C11C  F07D         	movff	roundf@F525+2,roundf@u+2
  7465  002EDA  C11D  F07E         	movff	roundf@F525+3,roundf@u+3
  7466  002EDE  C037  F07B         	movff	roundf@x,roundf@u
  7467  002EE2  C038  F07C         	movff	roundf@x+1,roundf@u+1
  7468  002EE6  C039  F07D         	movff	roundf@x+2,roundf@u+2
  7469  002EEA  C03A  F07E         	movff	roundf@x+3,roundf@u+3
  7470  002EEE  C07B  F06D         	movff	roundf@u,??_roundf
  7471  002EF2  C07C  F06E         	movff	roundf@u+1,??_roundf+1
  7472  002EF6  C07D  F06F         	movff	roundf@u+2,??_roundf+2
  7473  002EFA  C07E  F070         	movff	roundf@u+3,??_roundf+3
  7474  002EFE  0E18               	movlw	24
  7475  002F00  D006               	goto	u14810
  7476  002F02                     u14815:
  7477  002F02  0100               	movlb	0	; () banked
  7478  002F04  90D8               	bcf	status,0,c
  7479  002F06  3370               	rrcf	(??_roundf+3)& (0+255),f,b
  7480  002F08  336F               	rrcf	(??_roundf+2)& (0+255),f,b
  7481  002F0A  336E               	rrcf	(??_roundf+1)& (0+255),f,b
  7482  002F0C  336D               	rrcf	??_roundf& (0+255),f,b
  7483  002F0E                     u14810:
  7484  002F0E  2EE8               	decfsz	wreg,f,c
  7485  002F10  D7F8               	goto	u14815
  7486  002F12  516D               	movf	??_roundf& (0+255),w,b
  7487  002F14  6F75               	movwf	roundf@e& (0+255),b
  7488  002F16  6B76               	clrf	(roundf@e+1)& (0+255),b
  7489  002F18  BF76               	btfsc	(roundf@e+1)& (0+255),7,b
  7490  002F1A  D00F               	goto	l11167
  7491  002F1C  5176               	movf	(roundf@e+1)& (0+255),w,b
  7492  002F1E  E104               	bnz	u14820
  7493  002F20  0E96               	movlw	150
  7494  002F22  5D75               	subwf	roundf@e& (0+255),w,b
  7495  002F24  A0D8               	btfss	status,0,c
  7496  002F26  D009               	goto	l11167
  7497  002F28                     u14820:
  7498                           
  7499                           ; BSR set to: 0
  7500  002F28  C037  F037         	movff	roundf@x,?_roundf
  7501  002F2C  C038  F038         	movff	roundf@x+1,?_roundf+1
  7502  002F30  C039  F039         	movff	roundf@x+2,?_roundf+2
  7503  002F34  C03A  F03A         	movff	roundf@x+3,?_roundf+3
  7504  002F38  0012               	return	
  7505  002F3A                     l11167:
  7506                           
  7507                           ; BSR set to: 0
  7508  002F3A  C07B  F06D         	movff	roundf@u,??_roundf
  7509  002F3E  C07C  F06E         	movff	roundf@u+1,??_roundf+1
  7510  002F42  C07D  F06F         	movff	roundf@u+2,??_roundf+2
  7511  002F46  C07E  F070         	movff	roundf@u+3,??_roundf+3
  7512  002F4A  0E20               	movlw	32
  7513  002F4C  D005               	goto	u14830
  7514  002F4E                     u14835:
  7515  002F4E  90D8               	bcf	status,0,c
  7516  002F50  3370               	rrcf	(??_roundf+3)& (0+255),f,b
  7517  002F52  336F               	rrcf	(??_roundf+2)& (0+255),f,b
  7518  002F54  336E               	rrcf	(??_roundf+1)& (0+255),f,b
  7519  002F56  336D               	rrcf	??_roundf& (0+255),f,b
  7520  002F58                     u14830:
  7521  002F58  2EE8               	decfsz	wreg,f,c
  7522  002F5A  D7F9               	goto	u14835
  7523  002F5C  516D               	movf	??_roundf& (0+255),w,b
  7524  002F5E  116E               	iorwf	(??_roundf+1)& (0+255),w,b
  7525  002F60  116F               	iorwf	(??_roundf+2)& (0+255),w,b
  7526  002F62  1170               	iorwf	(??_roundf+3)& (0+255),w,b
  7527  002F64  B4D8               	btfsc	status,2,c
  7528  002F66  D012               	goto	l11171
  7529                           
  7530                           ; BSR set to: 0
  7531  002F68  C037  F013         	movff	roundf@x,___flneg@f1
  7532  002F6C  C038  F014         	movff	roundf@x+1,___flneg@f1+1
  7533  002F70  C039  F015         	movff	roundf@x+2,___flneg@f1+2
  7534  002F74  C03A  F016         	movff	roundf@x+3,___flneg@f1+3
  7535  002F78  EC4F  F02D         	call	___flneg	;wreg free
  7536  002F7C  C013  F037         	movff	?___flneg,roundf@x
  7537  002F80  C014  F038         	movff	?___flneg+1,roundf@x+1
  7538  002F84  C015  F039         	movff	?___flneg+2,roundf@x+2
  7539  002F88  C016  F03A         	movff	?___flneg+3,roundf@x+3
  7540  002F8C                     l11171:
  7541  002F8C  0100               	movlb	0	; () banked
  7542  002F8E  BF76               	btfsc	(roundf@e+1)& (0+255),7,b
  7543  002F90  D006               	goto	u14850
  7544  002F92  5176               	movf	(roundf@e+1)& (0+255),w,b
  7545  002F94  E11F               	bnz	l11177
  7546  002F96  0E7E               	movlw	126
  7547  002F98  5D75               	subwf	roundf@e& (0+255),w,b
  7548  002F9A  B0D8               	btfsc	status,0,c
  7549  002F9C  D01B               	goto	l11177
  7550  002F9E                     u14850:
  7551                           
  7552                           ; BSR set to: 0
  7553  002F9E  C07B  F02B         	movff	roundf@u,___flmul@b
  7554  002FA2  C07C  F02C         	movff	roundf@u+1,___flmul@b+1
  7555  002FA6  C07D  F02D         	movff	roundf@u+2,___flmul@b+2
  7556  002FAA  C07E  F02E         	movff	roundf@u+3,___flmul@b+3
  7557  002FAE  0E00               	movlw	0
  7558  002FB0  6E2F               	movwf	___flmul@a,c
  7559  002FB2  0E00               	movlw	0
  7560  002FB4  6E30               	movwf	___flmul@a+1,c
  7561  002FB6  0E00               	movlw	0
  7562  002FB8  6E31               	movwf	___flmul@a+2,c
  7563  002FBA  0E00               	movlw	0
  7564  002FBC  6E32               	movwf	___flmul@a+3,c
  7565  002FBE  ECBD  F015         	call	___flmul	;wreg free
  7566  002FC2  C02B  F037         	movff	?___flmul,?_roundf
  7567  002FC6  C02C  F038         	movff	?___flmul+1,?_roundf+1
  7568  002FCA  C02D  F039         	movff	?___flmul+2,?_roundf+2
  7569  002FCE  C02E  F03A         	movff	?___flmul+3,?_roundf+3
  7570  002FD2  0012               	return	
  7571  002FD4                     l11177:
  7572                           
  7573                           ; BSR set to: 0
  7574  002FD4  0E00               	movlw	0
  7575  002FD6  6E17               	movwf	___fladd@a,c
  7576  002FD8  0E00               	movlw	0
  7577  002FDA  6E18               	movwf	___fladd@a+1,c
  7578  002FDC  0E00               	movlw	0
  7579  002FDE  6E19               	movwf	___fladd@a+2,c
  7580  002FE0  0E4B               	movlw	75
  7581  002FE2  6E1A               	movwf	___fladd@a+3,c
  7582  002FE4  C037  F013         	movff	roundf@x,___fladd@b
  7583  002FE8  C038  F014         	movff	roundf@x+1,___fladd@b+1
  7584  002FEC  C039  F015         	movff	roundf@x+2,___fladd@b+2
  7585  002FF0  C03A  F016         	movff	roundf@x+3,___fladd@b+3
  7586  002FF4  EC07  F019         	call	___fladd	;wreg free
  7587  002FF8  C013  F077         	movff	?___fladd,_roundf$4195
  7588  002FFC  C014  F078         	movff	?___fladd+1,_roundf$4195+1
  7589  003000  C015  F079         	movff	?___fladd+2,_roundf$4195+2
  7590  003004  C016  F07A         	movff	?___fladd+3,_roundf$4195+3
  7591  003008  0E00               	movlw	0
  7592  00300A  6E17               	movwf	___fladd@a,c
  7593  00300C  0E00               	movlw	0
  7594  00300E  6E18               	movwf	___fladd@a+1,c
  7595  003010  0E00               	movlw	0
  7596  003012  6E19               	movwf	___fladd@a+2,c
  7597  003014  0ECB               	movlw	203
  7598  003016  6E1A               	movwf	___fladd@a+3,c
  7599  003018  C077  F013         	movff	_roundf$4195,___fladd@b
  7600  00301C  C078  F014         	movff	_roundf$4195+1,___fladd@b+1
  7601  003020  C079  F015         	movff	_roundf$4195+2,___fladd@b+2
  7602  003024  C07A  F016         	movff	_roundf$4195+3,___fladd@b+3
  7603  003028  EC07  F019         	call	___fladd	;wreg free
  7604  00302C  C013  F071         	movff	?___fladd,_roundf$4196
  7605  003030  C014  F072         	movff	?___fladd+1,_roundf$4196+1
  7606  003034  C015  F073         	movff	?___fladd+2,_roundf$4196+2
  7607  003038  C016  F074         	movff	?___fladd+3,_roundf$4196+3
  7608  00303C  C071  F023         	movff	_roundf$4196,___flsub@b
  7609  003040  C072  F024         	movff	_roundf$4196+1,___flsub@b+1
  7610  003044  C073  F025         	movff	_roundf$4196+2,___flsub@b+2
  7611  003048  C074  F026         	movff	_roundf$4196+3,___flsub@b+3
  7612  00304C  C037  F027         	movff	roundf@x,___flsub@a
  7613  003050  C038  F028         	movff	roundf@x+1,___flsub@a+1
  7614  003054  C039  F029         	movff	roundf@x+2,___flsub@a+2
  7615  003058  C03A  F02A         	movff	roundf@x+3,___flsub@a+3
  7616  00305C  ECE9  F02A         	call	___flsub	;wreg free
  7617  003060  C023  F07F         	movff	?___flsub,roundf@y
  7618  003064  C024  F080         	movff	?___flsub+1,roundf@y+1
  7619  003068  C025  F081         	movff	?___flsub+2,roundf@y+2
  7620  00306C  C026  F082         	movff	?___flsub+3,roundf@y+3
  7621  003070  0E00               	movlw	0
  7622  003072  6E13               	movwf	___flge@ff1,c
  7623  003074  0E00               	movlw	0
  7624  003076  6E14               	movwf	___flge@ff1+1,c
  7625  003078  0E00               	movlw	0
  7626  00307A  6E15               	movwf	___flge@ff1+2,c
  7627  00307C  0E3F               	movlw	63
  7628  00307E  6E16               	movwf	___flge@ff1+3,c
  7629  003080  C07F  F017         	movff	roundf@y,___flge@ff2
  7630  003084  C080  F018         	movff	roundf@y+1,___flge@ff2+1
  7631  003088  C081  F019         	movff	roundf@y+2,___flge@ff2+2
  7632  00308C  C082  F01A         	movff	roundf@y+3,___flge@ff2+3
  7633  003090  EC61  F025         	call	___flge	;wreg free
  7634  003094  B0D8               	btfsc	status,0,c
  7635  003096  D02D               	goto	l11181
  7636  003098  C037  F017         	movff	roundf@x,___fladd@a
  7637  00309C  C038  F018         	movff	roundf@x+1,___fladd@a+1
  7638  0030A0  C039  F019         	movff	roundf@x+2,___fladd@a+2
  7639  0030A4  C03A  F01A         	movff	roundf@x+3,___fladd@a+3
  7640  0030A8  C07F  F013         	movff	roundf@y,___fladd@b
  7641  0030AC  C080  F014         	movff	roundf@y+1,___fladd@b+1
  7642  0030B0  C081  F015         	movff	roundf@y+2,___fladd@b+2
  7643  0030B4  C082  F016         	movff	roundf@y+3,___fladd@b+3
  7644  0030B8  EC07  F019         	call	___fladd	;wreg free
  7645  0030BC  C013  F077         	movff	?___fladd,_roundf$4195
  7646  0030C0  C014  F078         	movff	?___fladd+1,_roundf$4195+1
  7647  0030C4  C015  F079         	movff	?___fladd+2,_roundf$4195+2
  7648  0030C8  C016  F07A         	movff	?___fladd+3,_roundf$4195+3
  7649  0030CC  C077  F013         	movff	_roundf$4195,___fladd@b
  7650  0030D0  C078  F014         	movff	_roundf$4195+1,___fladd@b+1
  7651  0030D4  C079  F015         	movff	_roundf$4195+2,___fladd@b+2
  7652  0030D8  C07A  F016         	movff	_roundf$4195+3,___fladd@b+3
  7653  0030DC  0E00               	movlw	0
  7654  0030DE  6E17               	movwf	___fladd@a,c
  7655  0030E0  0E00               	movlw	0
  7656  0030E2  6E18               	movwf	___fladd@a+1,c
  7657  0030E4  0E80               	movlw	128
  7658  0030E6  6E19               	movwf	___fladd@a+2,c
  7659  0030E8  0EBF               	movlw	191
  7660  0030EA  6E1A               	movwf	___fladd@a+3,c
  7661  0030EC  EC07  F019         	call	___fladd	;wreg free
  7662  0030F0  D053               	goto	L3
  7663  0030F2                     l11181:
  7664  0030F2  0E00               	movlw	0
  7665  0030F4  6E13               	movwf	___flge@ff1,c
  7666  0030F6  0E00               	movlw	0
  7667  0030F8  6E14               	movwf	___flge@ff1+1,c
  7668  0030FA  0E00               	movlw	0
  7669  0030FC  6E15               	movwf	___flge@ff1+2,c
  7670  0030FE  0EBF               	movlw	191
  7671  003100  6E16               	movwf	___flge@ff1+3,c
  7672  003102  C07F  F017         	movff	roundf@y,___flge@ff2
  7673  003106  C080  F018         	movff	roundf@y+1,___flge@ff2+1
  7674  00310A  C081  F019         	movff	roundf@y+2,___flge@ff2+2
  7675  00310E  C082  F01A         	movff	roundf@y+3,___flge@ff2+3
  7676  003112  EC61  F025         	call	___flge	;wreg free
  7677  003116  A0D8               	btfss	status,0,c
  7678  003118  D02D               	goto	l11185
  7679  00311A  C037  F017         	movff	roundf@x,___fladd@a
  7680  00311E  C038  F018         	movff	roundf@x+1,___fladd@a+1
  7681  003122  C039  F019         	movff	roundf@x+2,___fladd@a+2
  7682  003126  C03A  F01A         	movff	roundf@x+3,___fladd@a+3
  7683  00312A  C07F  F013         	movff	roundf@y,___fladd@b
  7684  00312E  C080  F014         	movff	roundf@y+1,___fladd@b+1
  7685  003132  C081  F015         	movff	roundf@y+2,___fladd@b+2
  7686  003136  C082  F016         	movff	roundf@y+3,___fladd@b+3
  7687  00313A  EC07  F019         	call	___fladd	;wreg free
  7688  00313E  C013  F077         	movff	?___fladd,_roundf$4195
  7689  003142  C014  F078         	movff	?___fladd+1,_roundf$4195+1
  7690  003146  C015  F079         	movff	?___fladd+2,_roundf$4195+2
  7691  00314A  C016  F07A         	movff	?___fladd+3,_roundf$4195+3
  7692  00314E  C077  F013         	movff	_roundf$4195,___fladd@b
  7693  003152  C078  F014         	movff	_roundf$4195+1,___fladd@b+1
  7694  003156  C079  F015         	movff	_roundf$4195+2,___fladd@b+2
  7695  00315A  C07A  F016         	movff	_roundf$4195+3,___fladd@b+3
  7696  00315E  0E00               	movlw	0
  7697  003160  6E17               	movwf	___fladd@a,c
  7698  003162  0E00               	movlw	0
  7699  003164  6E18               	movwf	___fladd@a+1,c
  7700  003166  0E80               	movlw	128
  7701  003168  6E19               	movwf	___fladd@a+2,c
  7702  00316A  0E3F               	movlw	63
  7703  00316C  6E1A               	movwf	___fladd@a+3,c
  7704  00316E  EC07  F019         	call	___fladd	;wreg free
  7705  003172  D012               	goto	L3
  7706  003174                     l11185:
  7707  003174  C07F  F013         	movff	roundf@y,___fladd@b
  7708  003178  C080  F014         	movff	roundf@y+1,___fladd@b+1
  7709  00317C  C081  F015         	movff	roundf@y+2,___fladd@b+2
  7710  003180  C082  F016         	movff	roundf@y+3,___fladd@b+3
  7711  003184  C037  F017         	movff	roundf@x,___fladd@a
  7712  003188  C038  F018         	movff	roundf@x+1,___fladd@a+1
  7713  00318C  C039  F019         	movff	roundf@x+2,___fladd@a+2
  7714  003190  C03A  F01A         	movff	roundf@x+3,___fladd@a+3
  7715  003194  EC07  F019         	call	___fladd	;wreg free
  7716  003198                     L3:
  7717  003198  C013  F07F         	movff	?___fladd,roundf@y
  7718  00319C  C014  F080         	movff	?___fladd+1,roundf@y+1
  7719  0031A0  C015  F081         	movff	?___fladd+2,roundf@y+2
  7720  0031A4  C016  F082         	movff	?___fladd+3,roundf@y+3
  7721  0031A8  C07B  F06D         	movff	roundf@u,??_roundf
  7722  0031AC  C07C  F06E         	movff	roundf@u+1,??_roundf+1
  7723  0031B0  C07D  F06F         	movff	roundf@u+2,??_roundf+2
  7724  0031B4  C07E  F070         	movff	roundf@u+3,??_roundf+3
  7725  0031B8  0E20               	movlw	32
  7726  0031BA  D006               	goto	u14880
  7727  0031BC                     u14885:
  7728  0031BC  0100               	movlb	0	; () banked
  7729  0031BE  90D8               	bcf	status,0,c
  7730  0031C0  3370               	rrcf	(??_roundf+3)& (0+255),f,b
  7731  0031C2  336F               	rrcf	(??_roundf+2)& (0+255),f,b
  7732  0031C4  336E               	rrcf	(??_roundf+1)& (0+255),f,b
  7733  0031C6  336D               	rrcf	??_roundf& (0+255),f,b
  7734  0031C8                     u14880:
  7735  0031C8  2EE8               	decfsz	wreg,f,c
  7736  0031CA  D7F8               	goto	u14885
  7737  0031CC  516D               	movf	??_roundf& (0+255),w,b
  7738  0031CE  116E               	iorwf	(??_roundf+1)& (0+255),w,b
  7739  0031D0  116F               	iorwf	(??_roundf+2)& (0+255),w,b
  7740  0031D2  1170               	iorwf	(??_roundf+3)& (0+255),w,b
  7741  0031D4  B4D8               	btfsc	status,2,c
  7742  0031D6  D012               	goto	l11191
  7743                           
  7744                           ; BSR set to: 0
  7745  0031D8  C07F  F013         	movff	roundf@y,___flneg@f1
  7746  0031DC  C080  F014         	movff	roundf@y+1,___flneg@f1+1
  7747  0031E0  C081  F015         	movff	roundf@y+2,___flneg@f1+2
  7748  0031E4  C082  F016         	movff	roundf@y+3,___flneg@f1+3
  7749  0031E8  EC4F  F02D         	call	___flneg	;wreg free
  7750  0031EC  C013  F07F         	movff	?___flneg,roundf@y
  7751  0031F0  C014  F080         	movff	?___flneg+1,roundf@y+1
  7752  0031F4  C015  F081         	movff	?___flneg+2,roundf@y+2
  7753  0031F8  C016  F082         	movff	?___flneg+3,roundf@y+3
  7754  0031FC                     l11191:
  7755  0031FC  C07F  F037         	movff	roundf@y,?_roundf
  7756  003200  C080  F038         	movff	roundf@y+1,?_roundf+1
  7757  003204  C081  F039         	movff	roundf@y+2,?_roundf+2
  7758  003208  C082  F03A         	movff	roundf@y+3,?_roundf+3
  7759  00320C  0012               	return		;funcret
  7760  00320E                     __end_of_roundf:
  7761                           	opt callstack 0
  7762                           
  7763 ;; *************** function ___flsub *****************
  7764 ;; Defined at:
  7765 ;;		line 245 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  7766 ;; Parameters:    Size  Location     Type
  7767 ;;  b               4   34[COMRAM] float 
  7768 ;;  a               4   38[COMRAM] float 
  7769 ;; Auto vars:     Size  Location     Type
  7770 ;;		None
  7771 ;; Return value:  Size  Location     Type
  7772 ;;                  4   34[COMRAM] float 
  7773 ;; Registers used:
  7774 ;;		wreg, status,2, status,0, cstack
  7775 ;; Tracked objects:
  7776 ;;		On entry : 0/0
  7777 ;;		On exit  : 0/0
  7778 ;;		Unchanged: 0/0
  7779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7780 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7783 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7784 ;;Total ram usage:        8 bytes
  7785 ;; Hardware stack levels used:    1
  7786 ;; Hardware stack levels required when called:    9
  7787 ;; This function calls:
  7788 ;;		___fladd
  7789 ;; This function is called by:
  7790 ;;		_get_pfb
  7791 ;;		_roundf
  7792 ;; This function uses a non-reentrant model
  7793 ;;
  7794                           
  7795                           	psect	text35
  7796  0055D2                     __ptext35:
  7797                           	opt callstack 0
  7798  0055D2                     ___flsub:
  7799                           	opt callstack 18
  7800                           
  7801                           ;incstack = 0
  7802  0055D2  0E00               	movlw	0
  7803  0055D4  1A27               	xorwf	___flsub@a,f,c
  7804  0055D6  0E00               	movlw	0
  7805  0055D8  1A28               	xorwf	___flsub@a+1,f,c
  7806  0055DA  0E00               	movlw	0
  7807  0055DC  1A29               	xorwf	___flsub@a+2,f,c
  7808  0055DE  0E80               	movlw	128
  7809  0055E0  1A2A               	xorwf	___flsub@a+3,f,c
  7810  0055E2  C023  F013         	movff	___flsub@b,___fladd@b
  7811  0055E6  C024  F014         	movff	___flsub@b+1,___fladd@b+1
  7812  0055EA  C025  F015         	movff	___flsub@b+2,___fladd@b+2
  7813  0055EE  C026  F016         	movff	___flsub@b+3,___fladd@b+3
  7814  0055F2  C027  F017         	movff	___flsub@a,___fladd@a
  7815  0055F6  C028  F018         	movff	___flsub@a+1,___fladd@a+1
  7816  0055FA  C029  F019         	movff	___flsub@a+2,___fladd@a+2
  7817  0055FE  C02A  F01A         	movff	___flsub@a+3,___fladd@a+3
  7818  005602  EC07  F019         	call	___fladd	;wreg free
  7819  005606  C013  F023         	movff	?___fladd,?___flsub
  7820  00560A  C014  F024         	movff	?___fladd+1,?___flsub+1
  7821  00560E  C015  F025         	movff	?___fladd+2,?___flsub+2
  7822  005612  C016  F026         	movff	?___fladd+3,?___flsub+3
  7823  005616  0012               	return		;funcret
  7824  005618                     __end_of___flsub:
  7825                           	opt callstack 0
  7826                           
  7827 ;; *************** function ___fladd *****************
  7828 ;; Defined at:
  7829 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  7830 ;; Parameters:    Size  Location     Type
  7831 ;;  b               4   18[COMRAM] float 
  7832 ;;  a               4   22[COMRAM] float 
  7833 ;; Auto vars:     Size  Location     Type
  7834 ;;  grs             1   33[COMRAM] unsigned char 
  7835 ;;  bexp            1   32[COMRAM] unsigned char 
  7836 ;;  aexp            1   31[COMRAM] unsigned char 
  7837 ;;  signs           1   30[COMRAM] unsigned char 
  7838 ;; Return value:  Size  Location     Type
  7839 ;;                  4   18[COMRAM] unsigned char 
  7840 ;; Registers used:
  7841 ;;		wreg, status,2, status,0
  7842 ;; Tracked objects:
  7843 ;;		On entry : 0/0
  7844 ;;		On exit  : 0/0
  7845 ;;		Unchanged: 0/0
  7846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7847 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7848 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7849 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7850 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7851 ;;Total ram usage:       16 bytes
  7852 ;; Hardware stack levels used:    1
  7853 ;; Hardware stack levels required when called:    8
  7854 ;; This function calls:
  7855 ;;		Nothing
  7856 ;; This function is called by:
  7857 ;;		___flsub
  7858 ;;		_roundf
  7859 ;; This function uses a non-reentrant model
  7860 ;;
  7861                           
  7862                           	psect	text36
  7863  00320E                     __ptext36:
  7864                           	opt callstack 0
  7865  00320E                     ___fladd:
  7866                           	opt callstack 18
  7867                           
  7868                           ;incstack = 0
  7869  00320E  5016               	movf	___fladd@b+3,w,c
  7870  003210  0B80               	andlw	128
  7871  003212  6E1F               	movwf	___fladd@signs,c
  7872  003214  5016               	movf	___fladd@b+3,w,c
  7873  003216  2416               	addwf	___fladd@b+3,w,c
  7874  003218  6E21               	movwf	___fladd@bexp,c
  7875  00321A  BE15               	btfsc	___fladd@b+2,7,c
  7876  00321C  8021               	bsf	___fladd@bexp,0,c
  7877  00321E  5021               	movf	___fladd@bexp,w,c
  7878  003220  B4D8               	btfsc	status,2,c
  7879  003222  D00D               	goto	l9999
  7880  003224  2821               	incf	___fladd@bexp,w,c
  7881  003226  A4D8               	btfss	status,2,c
  7882  003228  D008               	goto	l9995
  7883  00322A  0E00               	movlw	0
  7884  00322C  6E13               	movwf	___fladd@b,c
  7885  00322E  0E00               	movlw	0
  7886  003230  6E14               	movwf	___fladd@b+1,c
  7887  003232  0E00               	movlw	0
  7888  003234  6E15               	movwf	___fladd@b+2,c
  7889  003236  0E00               	movlw	0
  7890  003238  6E16               	movwf	___fladd@b+3,c
  7891  00323A                     l9995:
  7892  00323A  8E15               	bsf	___fladd@b+2,7,c
  7893  00323C  D006               	goto	L4
  7894  00323E                     l9999:
  7895  00323E  0E00               	movlw	0
  7896  003240  6E13               	movwf	___fladd@b,c
  7897  003242  0E00               	movlw	0
  7898  003244  6E14               	movwf	___fladd@b+1,c
  7899  003246  0E00               	movlw	0
  7900  003248  6E15               	movwf	___fladd@b+2,c
  7901  00324A                     L4:
  7902  00324A  0E00               	movlw	0
  7903  00324C  6E16               	movwf	___fladd@b+3,c
  7904  00324E  501A               	movf	___fladd@a+3,w,c
  7905  003250  0B80               	andlw	128
  7906  003252  6E20               	movwf	___fladd@aexp,c
  7907  003254  501F               	movf	___fladd@signs,w,c
  7908  003256  1820               	xorwf	___fladd@aexp,w,c
  7909  003258  A4D8               	btfss	status,2,c
  7910  00325A  8C1F               	bsf	___fladd@signs,6,c
  7911  00325C  501A               	movf	___fladd@a+3,w,c
  7912  00325E  241A               	addwf	___fladd@a+3,w,c
  7913  003260  6E20               	movwf	___fladd@aexp,c
  7914  003262  BE19               	btfsc	___fladd@a+2,7,c
  7915  003264  8020               	bsf	___fladd@aexp,0,c
  7916  003266  5020               	movf	___fladd@aexp,w,c
  7917  003268  B4D8               	btfsc	status,2,c
  7918  00326A  D00D               	goto	l10023
  7919  00326C  2820               	incf	___fladd@aexp,w,c
  7920  00326E  A4D8               	btfss	status,2,c
  7921  003270  D008               	goto	l10019
  7922  003272  0E00               	movlw	0
  7923  003274  6E17               	movwf	___fladd@a,c
  7924  003276  0E00               	movlw	0
  7925  003278  6E18               	movwf	___fladd@a+1,c
  7926  00327A  0E00               	movlw	0
  7927  00327C  6E19               	movwf	___fladd@a+2,c
  7928  00327E  0E00               	movlw	0
  7929  003280  6E1A               	movwf	___fladd@a+3,c
  7930  003282                     l10019:
  7931  003282  8E19               	bsf	___fladd@a+2,7,c
  7932  003284  D006               	goto	L5
  7933  003286                     l10023:
  7934  003286  0E00               	movlw	0
  7935  003288  6E17               	movwf	___fladd@a,c
  7936  00328A  0E00               	movlw	0
  7937  00328C  6E18               	movwf	___fladd@a+1,c
  7938  00328E  0E00               	movlw	0
  7939  003290  6E19               	movwf	___fladd@a+2,c
  7940  003292                     L5:
  7941  003292  0E00               	movlw	0
  7942  003294  6E1A               	movwf	___fladd@a+3,c
  7943  003296  5021               	movf	___fladd@bexp,w,c
  7944  003298  5C20               	subwf	___fladd@aexp,w,c
  7945  00329A  B0D8               	btfsc	status,0,c
  7946  00329C  D022               	goto	l10061
  7947  00329E  AC1F               	btfss	___fladd@signs,6,c
  7948  0032A0  D002               	goto	l10031
  7949  0032A2  0E80               	movlw	128
  7950  0032A4  1A1F               	xorwf	___fladd@signs,f,c
  7951  0032A6                     l10031:
  7952  0032A6  C021  F022         	movff	___fladd@bexp,___fladd@grs
  7953  0032AA  C020  F021         	movff	___fladd@aexp,___fladd@bexp
  7954  0032AE  C022  F020         	movff	___fladd@grs,___fladd@aexp
  7955  0032B2  C013  F022         	movff	___fladd@b,___fladd@grs
  7956  0032B6  C017  F013         	movff	___fladd@a,___fladd@b
  7957  0032BA  C022  F017         	movff	___fladd@grs,___fladd@a
  7958  0032BE  C014  F022         	movff	___fladd@b+1,___fladd@grs
  7959  0032C2  C018  F014         	movff	___fladd@a+1,___fladd@b+1
  7960  0032C6  C022  F018         	movff	___fladd@grs,___fladd@a+1
  7961  0032CA  C015  F022         	movff	___fladd@b+2,___fladd@grs
  7962  0032CE  C019  F015         	movff	___fladd@a+2,___fladd@b+2
  7963  0032D2  C022  F019         	movff	___fladd@grs,___fladd@a+2
  7964  0032D6  C016  F022         	movff	___fladd@b+3,___fladd@grs
  7965  0032DA  C01A  F016         	movff	___fladd@a+3,___fladd@b+3
  7966  0032DE  C022  F01A         	movff	___fladd@grs,___fladd@a+3
  7967  0032E2                     l10061:
  7968  0032E2  0E00               	movlw	0
  7969  0032E4  6E22               	movwf	___fladd@grs,c
  7970  0032E6  5021               	movf	___fladd@bexp,w,c
  7971  0032E8  C020  F01B         	movff	___fladd@aexp,??___fladd
  7972  0032EC  6A1C               	clrf	(??___fladd+1)& (0+255),c
  7973  0032EE  5E1B               	subwf	??___fladd,f,c
  7974  0032F0  0E00               	movlw	0
  7975  0032F2  5A1C               	subwfb	??___fladd+1,f,c
  7976  0032F4  BE1C               	btfsc	??___fladd+1,7,c
  7977  0032F6  D02C               	goto	l1768
  7978  0032F8  501C               	movf	??___fladd+1,w,c
  7979  0032FA  E104               	bnz	u12590
  7980  0032FC  0E1A               	movlw	26
  7981  0032FE  5C1B               	subwf	??___fladd,w,c
  7982  003300  A0D8               	btfss	status,0,c
  7983  003302  D026               	goto	l1768
  7984  003304                     u12590:
  7985  003304  5013               	movf	___fladd@b,w,c
  7986  003306  1014               	iorwf	___fladd@b+1,w,c
  7987  003308  1015               	iorwf	___fladd@b+2,w,c
  7988  00330A  1016               	iorwf	___fladd@b+3,w,c
  7989  00330C  B4D8               	btfsc	status,2,c
  7990  00330E  D002               	goto	u12600
  7991  003310  0E01               	movlw	1
  7992  003312  D001               	goto	u12610
  7993  003314                     u12600:
  7994  003314  0E00               	movlw	0
  7995  003316                     u12610:
  7996  003316  6E22               	movwf	___fladd@grs,c
  7997  003318  0E00               	movlw	0
  7998  00331A  6E13               	movwf	___fladd@b,c
  7999  00331C  0E00               	movlw	0
  8000  00331E  6E14               	movwf	___fladd@b+1,c
  8001  003320  0E00               	movlw	0
  8002  003322  6E15               	movwf	___fladd@b+2,c
  8003  003324  0E00               	movlw	0
  8004  003326  6E16               	movwf	___fladd@b+3,c
  8005  003328  C020  F021         	movff	___fladd@aexp,___fladd@bexp
  8006  00332C  D015               	goto	u12640
  8007  00332E                     l1769:
  8008  00332E  A022               	btfss	___fladd@grs,0,c
  8009  003330  D005               	goto	l10073
  8010  003332  90D8               	bcf	status,0,c
  8011  003334  3022               	rrcf	___fladd@grs,w,c
  8012  003336  0901               	iorlw	1
  8013  003338  6E22               	movwf	___fladd@grs,c
  8014  00333A  D002               	goto	l10075
  8015  00333C                     l10073:
  8016  00333C  90D8               	bcf	status,0,c
  8017  00333E  3222               	rrcf	___fladd@grs,f,c
  8018  003340                     l10075:
  8019  003340  B013               	btfsc	___fladd@b,0,c
  8020  003342  8E22               	bsf	___fladd@grs,7,c
  8021  003344  3416               	rlcf	___fladd@b+3,w,c
  8022  003346  3216               	rrcf	___fladd@b+3,f,c
  8023  003348  3215               	rrcf	___fladd@b+2,f,c
  8024  00334A  3214               	rrcf	___fladd@b+1,f,c
  8025  00334C  3213               	rrcf	___fladd@b,f,c
  8026  00334E  2A21               	incf	___fladd@bexp,f,c
  8027  003350                     l1768:
  8028  003350  5020               	movf	___fladd@aexp,w,c
  8029  003352  5C21               	subwf	___fladd@bexp,w,c
  8030  003354  A0D8               	btfss	status,0,c
  8031  003356  D7EB               	goto	l1769
  8032  003358                     u12640:
  8033  003358  BC1F               	btfsc	___fladd@signs,6,c
  8034  00335A  D028               	goto	l10107
  8035  00335C  5021               	movf	___fladd@bexp,w,c
  8036  00335E  A4D8               	btfss	status,2,c
  8037  003360  D009               	goto	l10089
  8038  003362  0E00               	movlw	0
  8039  003364  6E13               	movwf	?___fladd,c
  8040  003366  0E00               	movlw	0
  8041  003368  6E14               	movwf	?___fladd+1,c
  8042  00336A  0E00               	movlw	0
  8043  00336C  6E15               	movwf	?___fladd+2,c
  8044  00336E  0E00               	movlw	0
  8045  003370  6E16               	movwf	?___fladd+3,c
  8046  003372  0012               	return	
  8047  003374                     l10089:
  8048  003374  5017               	movf	___fladd@a,w,c
  8049  003376  2613               	addwf	___fladd@b,f,c
  8050  003378  5018               	movf	___fladd@a+1,w,c
  8051  00337A  2214               	addwfc	___fladd@b+1,f,c
  8052  00337C  5019               	movf	___fladd@a+2,w,c
  8053  00337E  2215               	addwfc	___fladd@b+2,f,c
  8054  003380  501A               	movf	___fladd@a+3,w,c
  8055  003382  2216               	addwfc	___fladd@b+3,f,c
  8056  003384  A016               	btfss	___fladd@b+3,0,c
  8057  003386  D071               	goto	u12770
  8058  003388  A022               	btfss	___fladd@grs,0,c
  8059  00338A  D005               	goto	l10097
  8060  00338C  90D8               	bcf	status,0,c
  8061  00338E  3022               	rrcf	___fladd@grs,w,c
  8062  003390  0901               	iorlw	1
  8063  003392  6E22               	movwf	___fladd@grs,c
  8064  003394  D002               	goto	l10099
  8065  003396                     l10097:
  8066  003396  90D8               	bcf	status,0,c
  8067  003398  3222               	rrcf	___fladd@grs,f,c
  8068  00339A                     l10099:
  8069  00339A  B013               	btfsc	___fladd@b,0,c
  8070  00339C  8E22               	bsf	___fladd@grs,7,c
  8071  00339E  3416               	rlcf	___fladd@b+3,w,c
  8072  0033A0  3216               	rrcf	___fladd@b+3,f,c
  8073  0033A2  3215               	rrcf	___fladd@b+2,f,c
  8074  0033A4  3214               	rrcf	___fladd@b+1,f,c
  8075  0033A6  3213               	rrcf	___fladd@b,f,c
  8076  0033A8  2A21               	incf	___fladd@bexp,f,c
  8077  0033AA  D05F               	goto	u12770
  8078  0033AC                     l10107:
  8079  0033AC  5017               	movf	___fladd@a,w,c
  8080  0033AE  5C13               	subwf	___fladd@b,w,c
  8081  0033B0  5018               	movf	___fladd@a+1,w,c
  8082  0033B2  5814               	subwfb	___fladd@b+1,w,c
  8083  0033B4  5019               	movf	___fladd@a+2,w,c
  8084  0033B6  5815               	subwfb	___fladd@b+2,w,c
  8085  0033B8  5016               	movf	___fladd@b+3,w,c
  8086  0033BA  0A80               	xorlw	128
  8087  0033BC  6E1B               	movwf	??___fladd& (0+255),c
  8088  0033BE  501A               	movf	___fladd@a+3,w,c
  8089  0033C0  0A80               	xorlw	128
  8090  0033C2  581B               	subwfb	??___fladd& (0+255),w,c
  8091  0033C4  B0D8               	btfsc	status,0,c
  8092  0033C6  D025               	goto	l10117
  8093  0033C8  5013               	movf	___fladd@b,w,c
  8094  0033CA  5C17               	subwf	___fladd@a,w,c
  8095  0033CC  6E1B               	movwf	??___fladd& (0+255),c
  8096  0033CE  5014               	movf	___fladd@b+1,w,c
  8097  0033D0  5818               	subwfb	___fladd@a+1,w,c
  8098  0033D2  6E1C               	movwf	(??___fladd+1)& (0+255),c
  8099  0033D4  5015               	movf	___fladd@b+2,w,c
  8100  0033D6  5819               	subwfb	___fladd@a+2,w,c
  8101  0033D8  6E1D               	movwf	(??___fladd+2)& (0+255),c
  8102  0033DA  5016               	movf	___fladd@b+3,w,c
  8103  0033DC  581A               	subwfb	___fladd@a+3,w,c
  8104  0033DE  6E1E               	movwf	(??___fladd+3)& (0+255),c
  8105  0033E0  0EFF               	movlw	255
  8106  0033E2  241B               	addwf	??___fladd,w,c
  8107  0033E4  6E13               	movwf	___fladd@b,c
  8108  0033E6  0EFF               	movlw	255
  8109  0033E8  201C               	addwfc	??___fladd+1,w,c
  8110  0033EA  6E14               	movwf	___fladd@b+1,c
  8111  0033EC  0EFF               	movlw	255
  8112  0033EE  201D               	addwfc	??___fladd+2,w,c
  8113  0033F0  6E15               	movwf	___fladd@b+2,c
  8114  0033F2  0EFF               	movlw	255
  8115  0033F4  201E               	addwfc	??___fladd+3,w,c
  8116  0033F6  6E16               	movwf	___fladd@b+3,c
  8117  0033F8  0E80               	movlw	128
  8118  0033FA  1A1F               	xorwf	___fladd@signs,f,c
  8119  0033FC  6C22               	negf	___fladd@grs,c
  8120  0033FE  5022               	movf	___fladd@grs,w,c
  8121  003400  A4D8               	btfss	status,2,c
  8122  003402  D00F               	goto	l1784
  8123  003404  0E01               	movlw	1
  8124  003406  2613               	addwf	___fladd@b,f,c
  8125  003408  0E00               	movlw	0
  8126  00340A  2214               	addwfc	___fladd@b+1,f,c
  8127  00340C  2215               	addwfc	___fladd@b+2,f,c
  8128  00340E  2216               	addwfc	___fladd@b+3,f,c
  8129  003410  D008               	goto	l1784
  8130  003412                     l10117:
  8131  003412  5017               	movf	___fladd@a,w,c
  8132  003414  5E13               	subwf	___fladd@b,f,c
  8133  003416  5018               	movf	___fladd@a+1,w,c
  8134  003418  5A14               	subwfb	___fladd@b+1,f,c
  8135  00341A  5019               	movf	___fladd@a+2,w,c
  8136  00341C  5A15               	subwfb	___fladd@b+2,f,c
  8137  00341E  501A               	movf	___fladd@a+3,w,c
  8138  003420  5A16               	subwfb	___fladd@b+3,f,c
  8139  003422                     l1784:
  8140  003422  5013               	movf	___fladd@b,w,c
  8141  003424  1014               	iorwf	___fladd@b+1,w,c
  8142  003426  1015               	iorwf	___fladd@b+2,w,c
  8143  003428  1016               	iorwf	___fladd@b+3,w,c
  8144  00342A  A4D8               	btfss	status,2,c
  8145  00342C  D01C               	goto	l10141
  8146  00342E  5022               	movf	___fladd@grs,w,c
  8147  003430  A4D8               	btfss	status,2,c
  8148  003432  D019               	goto	l10141
  8149  003434  0E00               	movlw	0
  8150  003436  6E13               	movwf	?___fladd,c
  8151  003438  0E00               	movlw	0
  8152  00343A  6E14               	movwf	?___fladd+1,c
  8153  00343C  0E00               	movlw	0
  8154  00343E  6E15               	movwf	?___fladd+2,c
  8155  003440  0E00               	movlw	0
  8156  003442  6E16               	movwf	?___fladd+3,c
  8157  003444  0012               	return	
  8158  003446                     l10125:
  8159  003446  90D8               	bcf	status,0,c
  8160  003448  3613               	rlcf	___fladd@b,f,c
  8161  00344A  3614               	rlcf	___fladd@b+1,f,c
  8162  00344C  3615               	rlcf	___fladd@b+2,f,c
  8163  00344E  3616               	rlcf	___fladd@b+3,f,c
  8164  003450  BE22               	btfsc	___fladd@grs,7,c
  8165  003452  8013               	bsf	___fladd@b,0,c
  8166  003454  A022               	btfss	___fladd@grs,0,c
  8167  003456  D002               	goto	l10135
  8168  003458  80D8               	bsf	status,0,c
  8169  00345A  D001               	goto	L6
  8170  00345C                     l10135:
  8171  00345C  90D8               	bcf	status,0,c
  8172  00345E                     L6:
  8173  00345E  3622               	rlcf	___fladd@grs,f,c
  8174  003460  5021               	movf	___fladd@bexp,w,c
  8175  003462  A4D8               	btfss	status,2,c
  8176  003464  0621               	decf	___fladd@bexp,f,c
  8177  003466                     l10141:
  8178  003466  AE15               	btfss	___fladd@b+2,7,c
  8179  003468  D7EE               	goto	l10125
  8180  00346A                     u12770:
  8181  00346A  0E00               	movlw	0
  8182  00346C  6E20               	movwf	___fladd@aexp,c
  8183  00346E  AE22               	btfss	___fladd@grs,7,c
  8184  003470  D00B               	goto	l1793
  8185  003472  C022  F01B         	movff	___fladd@grs,??___fladd
  8186  003476  0E7F               	movlw	127
  8187  003478  161B               	andwf	??___fladd,f,c
  8188  00347A  B4D8               	btfsc	status,2,c
  8189  00347C  D003               	goto	l1794
  8190  00347E                     u12790:
  8191  00347E  0E01               	movlw	1
  8192  003480  6E20               	movwf	___fladd@aexp,c
  8193  003482  D002               	goto	l1793
  8194  003484                     l1794:
  8195  003484  B013               	btfsc	___fladd@b,0,c
  8196  003486  D7FB               	goto	u12790
  8197  003488                     l1793:
  8198  003488  5020               	movf	___fladd@aexp,w,c
  8199  00348A  B4D8               	btfsc	status,2,c
  8200  00348C  D020               	goto	l10161
  8201  00348E  0E01               	movlw	1
  8202  003490  2613               	addwf	___fladd@b,f,c
  8203  003492  0E00               	movlw	0
  8204  003494  2214               	addwfc	___fladd@b+1,f,c
  8205  003496  2215               	addwfc	___fladd@b+2,f,c
  8206  003498  2216               	addwfc	___fladd@b+3,f,c
  8207  00349A  A016               	btfss	___fladd@b+3,0,c
  8208  00349C  D018               	goto	l10161
  8209  00349E  C013  F01B         	movff	___fladd@b,??___fladd
  8210  0034A2  C014  F01C         	movff	___fladd@b+1,??___fladd+1
  8211  0034A6  C015  F01D         	movff	___fladd@b+2,??___fladd+2
  8212  0034AA  C016  F01E         	movff	___fladd@b+3,??___fladd+3
  8213  0034AE  341E               	rlcf	??___fladd+3,w,c
  8214  0034B0  321E               	rrcf	??___fladd+3,f,c
  8215  0034B2  321D               	rrcf	??___fladd+2,f,c
  8216  0034B4  321C               	rrcf	??___fladd+1,f,c
  8217  0034B6  321B               	rrcf	??___fladd,f,c
  8218  0034B8  C01B  F013         	movff	??___fladd,___fladd@b
  8219  0034BC  C01C  F014         	movff	??___fladd+1,___fladd@b+1
  8220  0034C0  C01D  F015         	movff	??___fladd+2,___fladd@b+2
  8221  0034C4  C01E  F016         	movff	??___fladd+3,___fladd@b+3
  8222  0034C8  2821               	incf	___fladd@bexp,w,c
  8223  0034CA  A4D8               	btfss	status,2,c
  8224  0034CC  2A21               	incf	___fladd@bexp,f,c
  8225  0034CE                     l10161:
  8226  0034CE  2821               	incf	___fladd@bexp,w,c
  8227  0034D0  B4D8               	btfsc	status,2,c
  8228  0034D2  D003               	goto	u12850
  8229  0034D4  5021               	movf	___fladd@bexp,w,c
  8230  0034D6  A4D8               	btfss	status,2,c
  8231  0034D8  D00D               	goto	l10169
  8232  0034DA                     u12850:
  8233  0034DA  0E00               	movlw	0
  8234  0034DC  6E13               	movwf	___fladd@b,c
  8235  0034DE  0E00               	movlw	0
  8236  0034E0  6E14               	movwf	___fladd@b+1,c
  8237  0034E2  0E00               	movlw	0
  8238  0034E4  6E15               	movwf	___fladd@b+2,c
  8239  0034E6  0E00               	movlw	0
  8240  0034E8  6E16               	movwf	___fladd@b+3,c
  8241  0034EA  5021               	movf	___fladd@bexp,w,c
  8242  0034EC  A4D8               	btfss	status,2,c
  8243  0034EE  D002               	goto	l10169
  8244  0034F0  0E00               	movlw	0
  8245  0034F2  6E1F               	movwf	___fladd@signs,c
  8246  0034F4                     l10169:
  8247  0034F4  A021               	btfss	___fladd@bexp,0,c
  8248  0034F6  D002               	goto	l10173
  8249  0034F8  8E15               	bsf	___fladd@b+2,7,c
  8250  0034FA  D001               	goto	l10175
  8251  0034FC                     l10173:
  8252  0034FC  9E15               	bcf	___fladd@b+2,7,c
  8253  0034FE                     l10175:
  8254  0034FE  90D8               	bcf	status,0,c
  8255  003500  3021               	rrcf	___fladd@bexp,w,c
  8256  003502  6E16               	movwf	___fladd@b+3,c
  8257  003504  BE1F               	btfsc	___fladd@signs,7,c
  8258  003506  8E16               	bsf	___fladd@b+3,7,c
  8259  003508  C013  F013         	movff	___fladd@b,?___fladd
  8260  00350C  C014  F014         	movff	___fladd@b+1,?___fladd+1
  8261  003510  C015  F015         	movff	___fladd@b+2,?___fladd+2
  8262  003514  C016  F016         	movff	___fladd@b+3,?___fladd+3
  8263  003518  0012               	return		;funcret
  8264  00351A                     __end_of___fladd:
  8265                           	opt callstack 0
  8266                           
  8267 ;; *************** function _atof *****************
  8268 ;; Defined at:
  8269 ;;		line 423 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strtof.c"
  8270 ;; Parameters:    Size  Location     Type
  8271 ;;  s               2   72[BANK0 ] PTR const unsigned char 
  8272 ;;		 -> get_pfb@pfb_ascii(66), NULL(0), 
  8273 ;; Auto vars:     Size  Location     Type
  8274 ;;		None
  8275 ;; Return value:  Size  Location     Type
  8276 ;;                  4   72[BANK0 ] PTR const unsigned char 
  8277 ;; Registers used:
  8278 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8279 ;; Tracked objects:
  8280 ;;		On entry : 0/0
  8281 ;;		On exit  : 0/0
  8282 ;;		Unchanged: 0/0
  8283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8284 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8287 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8288 ;;Total ram usage:        4 bytes
  8289 ;; Hardware stack levels used:    1
  8290 ;; Hardware stack levels required when called:   11
  8291 ;; This function calls:
  8292 ;;		_strtof
  8293 ;; This function is called by:
  8294 ;;		_get_pfb
  8295 ;; This function uses a non-reentrant model
  8296 ;;
  8297                           
  8298                           	psect	text37
  8299  005BD0                     __ptext37:
  8300                           	opt callstack 0
  8301  005BD0                     _atof:
  8302                           	opt callstack 17
  8303                           
  8304                           ;incstack = 0
  8305  005BD0  C0A8  F082         	movff	atof@s,strtof@s
  8306  005BD4  C0A9  F083         	movff	atof@s+1,strtof@s+1
  8307  005BD8  0E00               	movlw	0
  8308  005BDA  0100               	movlb	0	; () banked
  8309  005BDC  6F84               	movwf	strtof@res& (0+255),b
  8310  005BDE  0E00               	movlw	0
  8311  005BE0  6F85               	movwf	(strtof@res+1)& (0+255),b
  8312  005BE2  EC05  F00F         	call	_strtof	;wreg free
  8313  005BE6  C082  F0A8         	movff	?_strtof,?_atof
  8314  005BEA  C083  F0A9         	movff	?_strtof+1,?_atof+1
  8315  005BEE  C084  F0AA         	movff	?_strtof+2,?_atof+2
  8316  005BF2  C085  F0AB         	movff	?_strtof+3,?_atof+3
  8317  005BF6  0012               	return		;funcret
  8318  005BF8                     __end_of_atof:
  8319                           	opt callstack 0
  8320                           
  8321 ;; *************** function _strtof *****************
  8322 ;; Defined at:
  8323 ;;		line 95 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strtof.c"
  8324 ;; Parameters:    Size  Location     Type
  8325 ;;  s               2   34[BANK0 ] PTR const unsigned char 
  8326 ;;		 -> get_pfb@pfb_ascii(66), NULL(0), 
  8327 ;;  res             2   36[BANK0 ] PTR PTR unsigned char 
  8328 ;;		 -> NULL(0), 
  8329 ;; Auto vars:     Size  Location     Type
  8330 ;;  _u              4   67[BANK0 ] struct .
  8331 ;;  eexp            2   65[BANK0 ] int 
  8332 ;;  expon           2   63[BANK0 ] int 
  8333 ;;  i               1   71[BANK0 ] unsigned char 
  8334 ;;  flags           1   62[BANK0 ] unsigned char 
  8335 ;;  digit           1   61[BANK0 ] unsigned char 
  8336 ;; Return value:  Size  Location     Type
  8337 ;;                  4   34[BANK0 ] float 
  8338 ;; Registers used:
  8339 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8340 ;; Tracked objects:
  8341 ;;		On entry : 0/0
  8342 ;;		On exit  : 0/0
  8343 ;;		Unchanged: 0/0
  8344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8345 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8346 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8347 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8348 ;;      Totals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8349 ;;Total ram usage:       38 bytes
  8350 ;; Hardware stack levels used:    1
  8351 ;; Hardware stack levels required when called:   10
  8352 ;; This function calls:
  8353 ;;		___fldiv
  8354 ;;		___fleq
  8355 ;;		___flge
  8356 ;;		___flmul
  8357 ;;		___flneg
  8358 ;;		___lmul
  8359 ;;		___wmul
  8360 ;;		___xxtofl
  8361 ;;		_isdigit
  8362 ;;		_isspace
  8363 ;;		_isxdigit
  8364 ;;		_nanf
  8365 ;;		_toupper
  8366 ;; This function is called by:
  8367 ;;		_atof
  8368 ;; This function uses a non-reentrant model
  8369 ;;
  8370                           
  8371                           	psect	text38
  8372  001E0A                     __ptext38:
  8373                           	opt callstack 0
  8374  001E0A                     _strtof:
  8375                           	opt callstack 17
  8376                           
  8377                           ;incstack = 0
  8378  001E0A  0100               	movlb	0	; () banked
  8379  001E0C  5184               	movf	strtof@res& (0+255),w,b
  8380  001E0E  1185               	iorwf	(strtof@res+1)& (0+255),w,b
  8381  001E10  B4D8               	btfsc	status,2,c
  8382  001E12  D00B               	goto	l10607
  8383                           
  8384                           ; BSR set to: 0
  8385  001E14  C084  FFD9         	movff	strtof@res,fsr2l
  8386  001E18  C085  FFDA         	movff	strtof@res+1,fsr2h
  8387  001E1C  C082  FFDE         	movff	strtof@s,postinc2
  8388  001E20  C083  FFDD         	movff	strtof@s+1,postdec2
  8389  001E24  D002               	goto	l10607
  8390  001E26                     l10605:
  8391                           
  8392                           ; BSR set to: 0
  8393  001E26  4B82               	infsnz	strtof@s& (0+255),f,b
  8394  001E28  2B83               	incf	(strtof@s+1)& (0+255),f,b
  8395  001E2A                     l10607:
  8396                           
  8397                           ; BSR set to: 0
  8398  001E2A  0E01               	movlw	1
  8399  001E2C  6F9C               	movwf	_strtof$3700& (0+255),b
  8400                           
  8401                           ; BSR set to: 0
  8402  001E2E  C082  FFD9         	movff	strtof@s,fsr2l
  8403  001E32  C083  FFDA         	movff	strtof@s+1,fsr2h
  8404  001E36  0E20               	movlw	32
  8405  001E38  18DE               	xorwf	postinc2,w,c
  8406  001E3A  A4D8               	btfss	status,2,c
  8407  001E3C  D002               	goto	u13570
  8408  001E3E  0E01               	movlw	1
  8409  001E40  D001               	goto	u13580
  8410  001E42                     u13570:
  8411  001E42  0E00               	movlw	0
  8412  001E44                     u13580:
  8413  001E44  6FA1               	movwf	strtof@eexp& (0+255),b
  8414  001E46  6BA2               	clrf	(strtof@eexp+1)& (0+255),b
  8415  001E48  51A1               	movf	strtof@eexp& (0+255),w,b
  8416  001E4A  11A2               	iorwf	(strtof@eexp+1)& (0+255),w,b
  8417  001E4C  A4D8               	btfss	status,2,c
  8418  001E4E  D01D               	goto	l10615
  8419                           
  8420                           ; BSR set to: 0
  8421  001E50  0EF7               	movlw	247
  8422  001E52  6F86               	movwf	??_strtof& (0+255),b
  8423  001E54  0EFF               	movlw	255
  8424  001E56  6F87               	movwf	(??_strtof+1)& (0+255),b
  8425  001E58  C082  FFD9         	movff	strtof@s,fsr2l
  8426  001E5C  C083  FFDA         	movff	strtof@s+1,fsr2h
  8427  001E60  50DF               	movf	indf2,w,c
  8428  001E62  6F88               	movwf	(??_strtof+2)& (0+255),b
  8429  001E64  5188               	movf	(??_strtof+2)& (0+255),w,b
  8430  001E66  6FA1               	movwf	strtof@eexp& (0+255),b
  8431  001E68  6BA2               	clrf	(strtof@eexp+1)& (0+255),b
  8432  001E6A  C0A1  F089         	movff	strtof@eexp,??_strtof+3
  8433  001E6E  C0A2  F08A         	movff	strtof@eexp+1,??_strtof+4
  8434  001E72  5186               	movf	??_strtof& (0+255),w,b
  8435  001E74  2789               	addwf	(??_strtof+3)& (0+255),f,b
  8436  001E76  5187               	movf	(??_strtof+1)& (0+255),w,b
  8437  001E78  238A               	addwfc	(??_strtof+4)& (0+255),f,b
  8438  001E7A  518A               	movf	(??_strtof+4)& (0+255),w,b
  8439  001E7C  E104               	bnz	u13600
  8440  001E7E  0E05               	movlw	5
  8441  001E80  5D89               	subwf	(??_strtof+3)& (0+255),w,b
  8442  001E82  A0D8               	btfss	status,0,c
  8443  001E84  D002               	goto	l10615
  8444  001E86                     u13600:
  8445                           
  8446                           ; BSR set to: 0
  8447  001E86  0E00               	movlw	0
  8448  001E88  6F9C               	movwf	_strtof$3700& (0+255),b
  8449  001E8A                     l10615:
  8450                           
  8451                           ; BSR set to: 0
  8452  001E8A  C09C  F08C         	movff	_strtof$3700,_strtof$3699
  8453  001E8E  6B8D               	clrf	(_strtof$3699+1)& (0+255),b
  8454                           
  8455                           ; BSR set to: 0
  8456  001E90  518C               	movf	_strtof$3699& (0+255),w,b
  8457  001E92  118D               	iorwf	(_strtof$3699+1)& (0+255),w,b
  8458  001E94  A4D8               	btfss	status,2,c
  8459  001E96  D7C7               	goto	l10605
  8460                           
  8461                           ; BSR set to: 0
  8462  001E98  0E00               	movlw	0
  8463  001E9A  6F9E               	movwf	strtof@flags& (0+255),b
  8464                           
  8465                           ; BSR set to: 0
  8466  001E9C  0E2D               	movlw	45
  8467  001E9E  19A1               	xorwf	strtof@eexp& (0+255),w,b
  8468  001EA0  11A2               	iorwf	(strtof@eexp+1)& (0+255),w,b
  8469  001EA2  A4D8               	btfss	status,2,c
  8470  001EA4  D005               	goto	l10629
  8471                           
  8472                           ; BSR set to: 0
  8473  001EA6  0E01               	movlw	1
  8474  001EA8  6F9E               	movwf	strtof@flags& (0+255),b
  8475  001EAA                     l10627:
  8476                           
  8477                           ; BSR set to: 0
  8478  001EAA  4B82               	infsnz	strtof@s& (0+255),f,b
  8479  001EAC  2B83               	incf	(strtof@s+1)& (0+255),f,b
  8480  001EAE  D005               	goto	l10633
  8481  001EB0                     l10629:
  8482                           
  8483                           ; BSR set to: 0
  8484  001EB0  0E2B               	movlw	43
  8485  001EB2  19A1               	xorwf	strtof@eexp& (0+255),w,b
  8486  001EB4  11A2               	iorwf	(strtof@eexp+1)& (0+255),w,b
  8487  001EB6  B4D8               	btfsc	status,2,c
  8488  001EB8  D7F8               	goto	l10627
  8489  001EBA                     l10633:
  8490                           
  8491                           ; BSR set to: 0
  8492  001EBA  0E00               	movlw	0
  8493  001EBC  6FA7               	movwf	strtof@i& (0+255),b
  8494  001EBE  D001               	goto	l10637
  8495  001EC0                     l10635:
  8496                           
  8497                           ; BSR set to: 0
  8498  001EC0  2BA7               	incf	strtof@i& (0+255),f,b
  8499  001EC2                     l10637:
  8500                           
  8501                           ; BSR set to: 0
  8502  001EC2  51A7               	movf	strtof@i& (0+255),w,b
  8503  001EC4  2582               	addwf	strtof@s& (0+255),w,b
  8504  001EC6  6ED9               	movwf	fsr2l,c
  8505  001EC8  0E00               	movlw	0
  8506  001ECA  2183               	addwfc	(strtof@s+1)& (0+255),w,b
  8507  001ECC  6EDA               	movwf	fsr2h,c
  8508  001ECE  50DF               	movf	indf2,w,c
  8509  001ED0  B4D8               	btfsc	status,2,c
  8510  001ED2  D026               	goto	u13660
  8511                           
  8512                           ; BSR set to: 0
  8513  001ED4  51A7               	movf	strtof@i& (0+255),w,b
  8514  001ED6  2582               	addwf	strtof@s& (0+255),w,b
  8515  001ED8  6ED9               	movwf	fsr2l,c
  8516  001EDA  0E00               	movlw	0
  8517  001EDC  2183               	addwfc	(strtof@s+1)& (0+255),w,b
  8518  001EDE  6EDA               	movwf	fsr2h,c
  8519  001EE0  50DF               	movf	indf2,w,c
  8520  001EE2  6F86               	movwf	??_strtof& (0+255),b
  8521  001EE4  0E3C               	movlw	low STR_150
  8522  001EE6  25A7               	addwf	strtof@i& (0+255),w,b
  8523  001EE8  6EF6               	movwf	tblptrl,c
  8524  001EEA  6AF7               	clrf	tblptrh,c
  8525  001EEC  0E7F               	movlw	high STR_150
  8526  001EEE  22F7               	addwfc	tblptrh,f,c
  8527  001EF0                     	if	0	;There are less than 3 active tblptr bytes
  8528  001EF0                     	endif
  8529  001EF0  0008               	tblrd		*
  8530  001EF2  50F5               	movf	tablat,w,c
  8531  001EF4  1986               	xorwf	??_strtof& (0+255),w,b
  8532  001EF6  B4D8               	btfsc	status,2,c
  8533  001EF8  D7E3               	goto	l10635
  8534                           
  8535                           ; BSR set to: 0
  8536  001EFA  51A7               	movf	strtof@i& (0+255),w,b
  8537  001EFC  2582               	addwf	strtof@s& (0+255),w,b
  8538  001EFE  6ED9               	movwf	fsr2l,c
  8539  001F00  0E00               	movlw	0
  8540  001F02  2183               	addwfc	(strtof@s+1)& (0+255),w,b
  8541  001F04  6EDA               	movwf	fsr2h,c
  8542  001F06  50DF               	movf	indf2,w,c
  8543  001F08  6F86               	movwf	??_strtof& (0+255),b
  8544  001F0A  0E33               	movlw	low STR_151
  8545  001F0C  25A7               	addwf	strtof@i& (0+255),w,b
  8546  001F0E  6EF6               	movwf	tblptrl,c
  8547  001F10  6AF7               	clrf	tblptrh,c
  8548  001F12  0E7F               	movlw	high STR_151
  8549  001F14  22F7               	addwfc	tblptrh,f,c
  8550  001F16                     	if	0	;There are less than 3 active tblptr bytes
  8551  001F16                     	endif
  8552  001F16  0008               	tblrd		*
  8553  001F18  50F5               	movf	tablat,w,c
  8554  001F1A  1986               	xorwf	??_strtof& (0+255),w,b
  8555  001F1C  B4D8               	btfsc	status,2,c
  8556  001F1E  D7D0               	goto	l10635
  8557  001F20                     u13660:
  8558                           
  8559                           ; BSR set to: 0
  8560  001F20  0E02               	movlw	2
  8561  001F22  65A7               	cpfsgt	strtof@i& (0+255),b
  8562  001F24  D023               	goto	l10655
  8563                           
  8564                           ; BSR set to: 0
  8565  001F26  0E00               	movlw	0
  8566  001F28  6FA3               	movwf	strtof@_u& (0+255),b
  8567  001F2A  0E00               	movlw	0
  8568  001F2C  6FA4               	movwf	(strtof@_u+1)& (0+255),b
  8569  001F2E  0E80               	movlw	128
  8570  001F30  6FA5               	movwf	(strtof@_u+2)& (0+255),b
  8571  001F32  0E7F               	movlw	127
  8572  001F34  6FA6               	movwf	(strtof@_u+3)& (0+255),b
  8573                           
  8574                           ; BSR set to: 0
  8575  001F36  5184               	movf	strtof@res& (0+255),w,b
  8576  001F38  1185               	iorwf	(strtof@res+1)& (0+255),w,b
  8577  001F3A  B4D8               	btfsc	status,2,c
  8578  001F3C  EF9F  F015         	goto	l2095
  8579                           
  8580                           ; BSR set to: 0
  8581  001F40  0E08               	movlw	8
  8582  001F42  19A7               	xorwf	strtof@i& (0+255),w,b
  8583  001F44  B4D8               	btfsc	status,2,c
  8584  001F46  D002               	goto	l10653
  8585                           
  8586                           ; BSR set to: 0
  8587  001F48  0E03               	movlw	3
  8588  001F4A  6FA7               	movwf	strtof@i& (0+255),b
  8589  001F4C                     l10653:
  8590                           
  8591                           ; BSR set to: 0
  8592  001F4C  51A7               	movf	strtof@i& (0+255),w,b
  8593  001F4E  2582               	addwf	strtof@s& (0+255),w,b
  8594  001F50  6F86               	movwf	??_strtof& (0+255),b
  8595  001F52  0E00               	movlw	0
  8596  001F54  2183               	addwfc	(strtof@s+1)& (0+255),w,b
  8597  001F56  6F87               	movwf	(??_strtof+1)& (0+255),b
  8598  001F58  C084  FFD9         	movff	strtof@res,fsr2l
  8599  001F5C  C085  FFDA         	movff	strtof@res+1,fsr2h
  8600  001F60  C086  FFDE         	movff	??_strtof,postinc2
  8601  001F64  C087  FFDD         	movff	??_strtof+1,postdec2
  8602  001F68  EF9F  F015         	goto	l2095
  8603  001F6C                     l10655:
  8604                           
  8605                           ; BSR set to: 0
  8606  001F6C  0E00               	movlw	0
  8607  001F6E  6FA7               	movwf	strtof@i& (0+255),b
  8608  001F70  D001               	goto	l10659
  8609  001F72                     l10657:
  8610                           
  8611                           ; BSR set to: 0
  8612  001F72  2BA7               	incf	strtof@i& (0+255),f,b
  8613  001F74                     l10659:
  8614                           
  8615                           ; BSR set to: 0
  8616  001F74  51A7               	movf	strtof@i& (0+255),w,b
  8617  001F76  2582               	addwf	strtof@s& (0+255),w,b
  8618  001F78  6ED9               	movwf	fsr2l,c
  8619  001F7A  0E00               	movlw	0
  8620  001F7C  2183               	addwfc	(strtof@s+1)& (0+255),w,b
  8621  001F7E  6EDA               	movwf	fsr2h,c
  8622  001F80  50DF               	movf	indf2,w,c
  8623  001F82  B4D8               	btfsc	status,2,c
  8624  001F84  D026               	goto	u13720
  8625                           
  8626                           ; BSR set to: 0
  8627  001F86  51A7               	movf	strtof@i& (0+255),w,b
  8628  001F88  2582               	addwf	strtof@s& (0+255),w,b
  8629  001F8A  6ED9               	movwf	fsr2l,c
  8630  001F8C  0E00               	movlw	0
  8631  001F8E  2183               	addwfc	(strtof@s+1)& (0+255),w,b
  8632  001F90  6EDA               	movwf	fsr2h,c
  8633  001F92  50DF               	movf	indf2,w,c
  8634  001F94  6F86               	movwf	??_strtof& (0+255),b
  8635  001F96  0EC3               	movlw	low STR_155
  8636  001F98  25A7               	addwf	strtof@i& (0+255),w,b
  8637  001F9A  6EF6               	movwf	tblptrl,c
  8638  001F9C  6AF7               	clrf	tblptrh,c
  8639  001F9E  0E7F               	movlw	high STR_155
  8640  001FA0  22F7               	addwfc	tblptrh,f,c
  8641  001FA2                     	if	0	;There are less than 3 active tblptr bytes
  8642  001FA2                     	endif
  8643  001FA2  0008               	tblrd		*
  8644  001FA4  50F5               	movf	tablat,w,c
  8645  001FA6  1986               	xorwf	??_strtof& (0+255),w,b
  8646  001FA8  B4D8               	btfsc	status,2,c
  8647  001FAA  D7E3               	goto	l10657
  8648                           
  8649                           ; BSR set to: 0
  8650  001FAC  51A7               	movf	strtof@i& (0+255),w,b
  8651  001FAE  2582               	addwf	strtof@s& (0+255),w,b
  8652  001FB0  6ED9               	movwf	fsr2l,c
  8653  001FB2  0E00               	movlw	0
  8654  001FB4  2183               	addwfc	(strtof@s+1)& (0+255),w,b
  8655  001FB6  6EDA               	movwf	fsr2h,c
  8656  001FB8  50DF               	movf	indf2,w,c
  8657  001FBA  6F86               	movwf	??_strtof& (0+255),b
  8658  001FBC  0EBB               	movlw	low STR_156
  8659  001FBE  25A7               	addwf	strtof@i& (0+255),w,b
  8660  001FC0  6EF6               	movwf	tblptrl,c
  8661  001FC2  6AF7               	clrf	tblptrh,c
  8662  001FC4  0E7F               	movlw	high STR_156
  8663  001FC6  22F7               	addwfc	tblptrh,f,c
  8664  001FC8                     	if	0	;There are less than 3 active tblptr bytes
  8665  001FC8                     	endif
  8666  001FC8  0008               	tblrd		*
  8667  001FCA  50F5               	movf	tablat,w,c
  8668  001FCC  1986               	xorwf	??_strtof& (0+255),w,b
  8669  001FCE  B4D8               	btfsc	status,2,c
  8670  001FD0  D7D0               	goto	l10657
  8671  001FD2                     u13720:
  8672                           
  8673                           ; BSR set to: 0
  8674  001FD2  0E03               	movlw	3
  8675  001FD4  19A7               	xorwf	strtof@i& (0+255),w,b
  8676  001FD6  A4D8               	btfss	status,2,c
  8677  001FD8  D056               	goto	l10689
  8678                           
  8679                           ; BSR set to: 0
  8680  001FDA  0ED3               	movlw	low (STR_47+23)
  8681  001FDC  6E13               	movwf	nanf@s,c
  8682  001FDE  0E7D               	movlw	high (STR_47+23)
  8683  001FE0  6E14               	movwf	nanf@s+1,c
  8684  001FE2  EC7F  F02E         	call	_nanf	;wreg free
  8685  001FE6  C013  F0A3         	movff	?_nanf,strtof@_u
  8686  001FEA  C014  F0A4         	movff	?_nanf+1,strtof@_u+1
  8687  001FEE  C015  F0A5         	movff	?_nanf+2,strtof@_u+2
  8688  001FF2  C016  F0A6         	movff	?_nanf+3,strtof@_u+3
  8689  001FF6  0100               	movlb	0	; () banked
  8690  001FF8  5184               	movf	strtof@res& (0+255),w,b
  8691  001FFA  1185               	iorwf	(strtof@res+1)& (0+255),w,b
  8692  001FFC  B4D8               	btfsc	status,2,c
  8693  001FFE  EF9F  F015         	goto	l2095
  8694                           
  8695                           ; BSR set to: 0
  8696  002002  51A7               	movf	strtof@i& (0+255),w,b
  8697  002004  2782               	addwf	strtof@s& (0+255),f,b
  8698  002006  0E00               	movlw	0
  8699  002008  2383               	addwfc	(strtof@s+1)& (0+255),f,b
  8700                           
  8701                           ; BSR set to: 0
  8702  00200A  C082  FFD9         	movff	strtof@s,fsr2l
  8703  00200E  C083  FFDA         	movff	strtof@s+1,fsr2h
  8704  002012  0E28               	movlw	40
  8705  002014  18DE               	xorwf	postinc2,w,c
  8706  002016  A4D8               	btfss	status,2,c
  8707  002018  D02C               	goto	l10687
  8708                           
  8709                           ; BSR set to: 0
  8710  00201A  0E00               	movlw	0
  8711  00201C  6FA7               	movwf	strtof@i& (0+255),b
  8712  00201E  D001               	goto	l10679
  8713  002020                     l10677:
  8714                           
  8715                           ; BSR set to: 0
  8716  002020  2BA7               	incf	strtof@i& (0+255),f,b
  8717  002022                     l10679:
  8718                           
  8719                           ; BSR set to: 0
  8720  002022  51A7               	movf	strtof@i& (0+255),w,b
  8721  002024  2582               	addwf	strtof@s& (0+255),w,b
  8722  002026  6ED9               	movwf	fsr2l,c
  8723  002028  0E00               	movlw	0
  8724  00202A  2183               	addwfc	(strtof@s+1)& (0+255),w,b
  8725  00202C  6EDA               	movwf	fsr2h,c
  8726  00202E  50DF               	movf	indf2,w,c
  8727  002030  B4D8               	btfsc	status,2,c
  8728  002032  D00A               	goto	u13770
  8729                           
  8730                           ; BSR set to: 0
  8731  002034  51A7               	movf	strtof@i& (0+255),w,b
  8732  002036  2582               	addwf	strtof@s& (0+255),w,b
  8733  002038  6ED9               	movwf	fsr2l,c
  8734  00203A  0E00               	movlw	0
  8735  00203C  2183               	addwfc	(strtof@s+1)& (0+255),w,b
  8736  00203E  6EDA               	movwf	fsr2h,c
  8737  002040  0E29               	movlw	41
  8738  002042  18DE               	xorwf	postinc2,w,c
  8739  002044  A4D8               	btfss	status,2,c
  8740  002046  D7EC               	goto	l10677
  8741  002048                     u13770:
  8742                           
  8743                           ; BSR set to: 0
  8744  002048  51A7               	movf	strtof@i& (0+255),w,b
  8745  00204A  2582               	addwf	strtof@s& (0+255),w,b
  8746  00204C  6ED9               	movwf	fsr2l,c
  8747  00204E  0E00               	movlw	0
  8748  002050  2183               	addwfc	(strtof@s+1)& (0+255),w,b
  8749  002052  6EDA               	movwf	fsr2h,c
  8750  002054  0E29               	movlw	41
  8751  002056  18DE               	xorwf	postinc2,w,c
  8752  002058  A4D8               	btfss	status,2,c
  8753  00205A  D00B               	goto	l10687
  8754                           
  8755                           ; BSR set to: 0
  8756  00205C  51A7               	movf	strtof@i& (0+255),w,b
  8757  00205E  6F86               	movwf	??_strtof& (0+255),b
  8758  002060  6B87               	clrf	(??_strtof+1)& (0+255),b
  8759  002062  0E01               	movlw	1
  8760  002064  2786               	addwf	??_strtof& (0+255),f,b
  8761  002066  0E00               	movlw	0
  8762  002068  2387               	addwfc	(??_strtof+1)& (0+255),f,b
  8763  00206A  5186               	movf	??_strtof& (0+255),w,b
  8764  00206C  2782               	addwf	strtof@s& (0+255),f,b
  8765  00206E  5187               	movf	(??_strtof+1)& (0+255),w,b
  8766  002070  2383               	addwfc	(strtof@s+1)& (0+255),f,b
  8767  002072                     l10687:
  8768                           
  8769                           ; BSR set to: 0
  8770  002072  C084  FFD9         	movff	strtof@res,fsr2l
  8771  002076  C085  FFDA         	movff	strtof@res+1,fsr2h
  8772  00207A  C082  FFDE         	movff	strtof@s,postinc2
  8773  00207E  C083  FFDD         	movff	strtof@s+1,postdec2
  8774  002082  EF9F  F015         	goto	l2095
  8775  002086                     l10689:
  8776                           
  8777                           ; BSR set to: 0
  8778  002086  0E00               	movlw	0
  8779  002088  6FA2               	movwf	(strtof@eexp+1)& (0+255),b
  8780  00208A  0E00               	movlw	0
  8781  00208C  6FA1               	movwf	strtof@eexp& (0+255),b
  8782  00208E  0E00               	movlw	0
  8783  002090  6FA3               	movwf	strtof@_u& (0+255),b
  8784  002092  0E00               	movlw	0
  8785  002094  6FA4               	movwf	(strtof@_u+1)& (0+255),b
  8786  002096  0E00               	movlw	0
  8787  002098  6FA5               	movwf	(strtof@_u+2)& (0+255),b
  8788  00209A  0E00               	movlw	0
  8789  00209C  6FA6               	movwf	(strtof@_u+3)& (0+255),b
  8790  00209E  0E00               	movlw	0
  8791  0020A0  6FA0               	movwf	(strtof@expon+1)& (0+255),b
  8792  0020A2  0E00               	movlw	0
  8793  0020A4  6F9F               	movwf	strtof@expon& (0+255),b
  8794  0020A6  0E00               	movlw	0
  8795  0020A8  6FA7               	movwf	strtof@i& (0+255),b
  8796  0020AA  D001               	goto	l10693
  8797  0020AC                     l10691:
  8798                           
  8799                           ; BSR set to: 0
  8800  0020AC  2BA7               	incf	strtof@i& (0+255),f,b
  8801  0020AE                     l10693:
  8802                           
  8803                           ; BSR set to: 0
  8804  0020AE  51A7               	movf	strtof@i& (0+255),w,b
  8805  0020B0  2582               	addwf	strtof@s& (0+255),w,b
  8806  0020B2  6ED9               	movwf	fsr2l,c
  8807  0020B4  0E00               	movlw	0
  8808  0020B6  2183               	addwfc	(strtof@s+1)& (0+255),w,b
  8809  0020B8  6EDA               	movwf	fsr2h,c
  8810  0020BA  0E30               	movlw	48
  8811  0020BC  18DE               	xorwf	postinc2,w,c
  8812  0020BE  B4D8               	btfsc	status,2,c
  8813  0020C0  D7F5               	goto	l10691
  8814                           
  8815                           ; BSR set to: 0
  8816  0020C2  51A7               	movf	strtof@i& (0+255),w,b
  8817  0020C4  B4D8               	btfsc	status,2,c
  8818  0020C6  D2CA               	goto	l2186
  8819                           
  8820                           ; BSR set to: 0
  8821  0020C8  51A7               	movf	strtof@i& (0+255),w,b
  8822  0020CA  2582               	addwf	strtof@s& (0+255),w,b
  8823  0020CC  6ED9               	movwf	fsr2l,c
  8824  0020CE  0E00               	movlw	0
  8825  0020D0  2183               	addwfc	(strtof@s+1)& (0+255),w,b
  8826  0020D2  6EDA               	movwf	fsr2h,c
  8827  0020D4  0E78               	movlw	120
  8828  0020D6  18DE               	xorwf	postinc2,w,c
  8829  0020D8  B4D8               	btfsc	status,2,c
  8830  0020DA  D00A               	goto	u13820
  8831                           
  8832                           ; BSR set to: 0
  8833  0020DC  51A7               	movf	strtof@i& (0+255),w,b
  8834  0020DE  2582               	addwf	strtof@s& (0+255),w,b
  8835  0020E0  6ED9               	movwf	fsr2l,c
  8836  0020E2  0E00               	movlw	0
  8837  0020E4  2183               	addwfc	(strtof@s+1)& (0+255),w,b
  8838  0020E6  6EDA               	movwf	fsr2h,c
  8839  0020E8  0E58               	movlw	88
  8840  0020EA  18DE               	xorwf	postinc2,w,c
  8841  0020EC  A4D8               	btfss	status,2,c
  8842  0020EE  D2B6               	goto	l2186
  8843  0020F0                     u13820:
  8844                           
  8845                           ; BSR set to: 0
  8846  0020F0  51A7               	movf	strtof@i& (0+255),w,b
  8847  0020F2  6F86               	movwf	??_strtof& (0+255),b
  8848  0020F4  6B87               	clrf	(??_strtof+1)& (0+255),b
  8849  0020F6  0E01               	movlw	1
  8850  0020F8  2786               	addwf	??_strtof& (0+255),f,b
  8851  0020FA  0E00               	movlw	0
  8852  0020FC  2387               	addwfc	(??_strtof+1)& (0+255),f,b
  8853  0020FE  5186               	movf	??_strtof& (0+255),w,b
  8854  002100  2782               	addwf	strtof@s& (0+255),f,b
  8855  002102  5187               	movf	(??_strtof+1)& (0+255),w,b
  8856  002104  2383               	addwfc	(strtof@s+1)& (0+255),f,b
  8857                           
  8858                           ; BSR set to: 0
  8859  002106  0E00               	movlw	0
  8860  002108  6FA7               	movwf	strtof@i& (0+255),b
  8861  00210A  D001               	goto	l10707
  8862  00210C                     l10705:
  8863                           
  8864                           ; BSR set to: 0
  8865  00210C  2BA7               	incf	strtof@i& (0+255),f,b
  8866  00210E                     l10707:
  8867                           
  8868                           ; BSR set to: 0
  8869  00210E  51A7               	movf	strtof@i& (0+255),w,b
  8870  002110  2582               	addwf	strtof@s& (0+255),w,b
  8871  002112  6ED9               	movwf	fsr2l,c
  8872  002114  0E00               	movlw	0
  8873  002116  2183               	addwfc	(strtof@s+1)& (0+255),w,b
  8874  002118  6EDA               	movwf	fsr2h,c
  8875  00211A  0E30               	movlw	48
  8876  00211C  18DE               	xorwf	postinc2,w,c
  8877  00211E  B4D8               	btfsc	status,2,c
  8878  002120  D7F5               	goto	l10705
  8879                           
  8880                           ; BSR set to: 0
  8881  002122  0E00               	movlw	0
  8882  002124  6FA7               	movwf	strtof@i& (0+255),b
  8883  002126                     l10711:
  8884                           
  8885                           ; BSR set to: 0
  8886  002126  51A7               	movf	strtof@i& (0+255),w,b
  8887  002128  2582               	addwf	strtof@s& (0+255),w,b
  8888  00212A  6ED9               	movwf	fsr2l,c
  8889  00212C  0E00               	movlw	0
  8890  00212E  2183               	addwfc	(strtof@s+1)& (0+255),w,b
  8891  002130  6EDA               	movwf	fsr2h,c
  8892  002132  0E70               	movlw	112
  8893  002134  18DE               	xorwf	postinc2,w,c
  8894  002136  B4D8               	btfsc	status,2,c
  8895  002138  D13A               	goto	l10785
  8896                           
  8897                           ; BSR set to: 0
  8898  00213A  51A7               	movf	strtof@i& (0+255),w,b
  8899  00213C  2582               	addwf	strtof@s& (0+255),w,b
  8900  00213E  6ED9               	movwf	fsr2l,c
  8901  002140  0E00               	movlw	0
  8902  002142  2183               	addwfc	(strtof@s+1)& (0+255),w,b
  8903  002144  6EDA               	movwf	fsr2h,c
  8904  002146  0E50               	movlw	80
  8905  002148  18DE               	xorwf	postinc2,w,c
  8906  00214A  B4D8               	btfsc	status,2,c
  8907  00214C  D130               	goto	l10785
  8908                           
  8909                           ; BSR set to: 0
  8910  00214E  51A7               	movf	strtof@i& (0+255),w,b
  8911  002150  2582               	addwf	strtof@s& (0+255),w,b
  8912  002152  6ED9               	movwf	fsr2l,c
  8913  002154  0E00               	movlw	0
  8914  002156  2183               	addwfc	(strtof@s+1)& (0+255),w,b
  8915  002158  6EDA               	movwf	fsr2h,c
  8916  00215A  0E2E               	movlw	46
  8917  00215C  18DE               	xorwf	postinc2,w,c
  8918  00215E  A4D8               	btfss	status,2,c
  8919  002160  D002               	goto	l10723
  8920                           
  8921                           ; BSR set to: 0
  8922  002162  899E               	bsf	strtof@flags& (0+255),4,b
  8923  002164  D123               	goto	L7
  8924  002166                     l10723:
  8925                           
  8926                           ; BSR set to: 0
  8927  002166  51A7               	movf	strtof@i& (0+255),w,b
  8928  002168  2582               	addwf	strtof@s& (0+255),w,b
  8929  00216A  6ED9               	movwf	fsr2l,c
  8930  00216C  0E00               	movlw	0
  8931  00216E  2183               	addwfc	(strtof@s+1)& (0+255),w,b
  8932  002170  6EDA               	movwf	fsr2h,c
  8933  002172  50DF               	movf	indf2,w,c
  8934  002174  6F86               	movwf	??_strtof& (0+255),b
  8935  002176  5186               	movf	??_strtof& (0+255),w,b
  8936  002178  6E13               	movwf	isxdigit@c,c
  8937  00217A  6A14               	clrf	isxdigit@c+1,c
  8938  00217C  ECD5  F028         	call	_isxdigit	;wreg free
  8939  002180  5013               	movf	?_isxdigit,w,c
  8940  002182  1014               	iorwf	?_isxdigit+1,w,c
  8941  002184  B4D8               	btfsc	status,2,c
  8942  002186  D069               	goto	l10745
  8943  002188  0E00               	movlw	0
  8944  00218A  0100               	movlb	0	; () banked
  8945  00218C  6F9D               	movwf	strtof@digit& (0+255),b
  8946                           
  8947                           ; BSR set to: 0
  8948  00218E  0ED0               	movlw	208
  8949  002190  6F86               	movwf	??_strtof& (0+255),b
  8950  002192  0EFF               	movlw	255
  8951  002194  6F87               	movwf	(??_strtof+1)& (0+255),b
  8952  002196  51A7               	movf	strtof@i& (0+255),w,b
  8953  002198  2582               	addwf	strtof@s& (0+255),w,b
  8954  00219A  6ED9               	movwf	fsr2l,c
  8955  00219C  0E00               	movlw	0
  8956  00219E  2183               	addwfc	(strtof@s+1)& (0+255),w,b
  8957  0021A0  6EDA               	movwf	fsr2h,c
  8958  0021A2  50DF               	movf	indf2,w,c
  8959  0021A4  6F88               	movwf	(??_strtof+2)& (0+255),b
  8960  0021A6  6B89               	clrf	(??_strtof+3)& (0+255),b
  8961  0021A8  5186               	movf	??_strtof& (0+255),w,b
  8962  0021AA  2788               	addwf	(??_strtof+2)& (0+255),f,b
  8963  0021AC  5187               	movf	(??_strtof+1)& (0+255),w,b
  8964  0021AE  2389               	addwfc	(??_strtof+3)& (0+255),f,b
  8965  0021B0  5189               	movf	(??_strtof+3)& (0+255),w,b
  8966  0021B2  E106               	bnz	u13880
  8967  0021B4  0E0A               	movlw	10
  8968  0021B6  5D88               	subwf	(??_strtof+2)& (0+255),w,b
  8969  0021B8  B0D8               	btfsc	status,0,c
  8970  0021BA  D002               	goto	u13880
  8971  0021BC  0E01               	movlw	1
  8972  0021BE  D001               	goto	u13890
  8973  0021C0                     u13880:
  8974  0021C0  0E00               	movlw	0
  8975  0021C2                     u13890:
  8976  0021C2  6F8E               	movwf	_strtof$3710& (0+255),b
  8977  0021C4  6B8F               	clrf	(_strtof$3710+1)& (0+255),b
  8978                           
  8979                           ; BSR set to: 0
  8980  0021C6  518E               	movf	_strtof$3710& (0+255),w,b
  8981  0021C8  118F               	iorwf	(_strtof$3710+1)& (0+255),w,b
  8982  0021CA  B4D8               	btfsc	status,2,c
  8983  0021CC  D009               	goto	l10735
  8984                           
  8985                           ; BSR set to: 0
  8986  0021CE  51A7               	movf	strtof@i& (0+255),w,b
  8987  0021D0  2582               	addwf	strtof@s& (0+255),w,b
  8988  0021D2  6ED9               	movwf	fsr2l,c
  8989  0021D4  0E00               	movlw	0
  8990  0021D6  2183               	addwfc	(strtof@s+1)& (0+255),w,b
  8991  0021D8  6EDA               	movwf	fsr2h,c
  8992  0021DA  50DF               	movf	indf2,w,c
  8993  0021DC  0FD0               	addlw	208
  8994  0021DE  D010               	goto	L8
  8995  0021E0                     l10735:
  8996                           
  8997                           ; BSR set to: 0
  8998  0021E0  51A7               	movf	strtof@i& (0+255),w,b
  8999  0021E2  2582               	addwf	strtof@s& (0+255),w,b
  9000  0021E4  6ED9               	movwf	fsr2l,c
  9001  0021E6  0E00               	movlw	0
  9002  0021E8  2183               	addwfc	(strtof@s+1)& (0+255),w,b
  9003  0021EA  6EDA               	movwf	fsr2h,c
  9004  0021EC  50DF               	movf	indf2,w,c
  9005  0021EE  6F86               	movwf	??_strtof& (0+255),b
  9006  0021F0  5186               	movf	??_strtof& (0+255),w,b
  9007  0021F2  6E19               	movwf	toupper@c,c
  9008  0021F4  6A1A               	clrf	toupper@c+1,c
  9009  0021F6  ECC4  F02A         	call	_toupper	;wreg free
  9010  0021FA  5019               	movf	?_toupper,w,c
  9011  0021FC  0FC9               	addlw	201
  9012  0021FE  0100               	movlb	0	; () banked
  9013  002200                     L8:
  9014  002200  6F9D               	movwf	strtof@digit& (0+255),b
  9015                           
  9016                           ; BSR set to: 0
  9017  002202  BFA2               	btfsc	(strtof@eexp+1)& (0+255),7,b
  9018  002204  D006               	goto	u13910
  9019  002206  51A2               	movf	(strtof@eexp+1)& (0+255),w,b
  9020  002208  E121               	bnz	l10741
  9021  00220A  0E08               	movlw	8
  9022  00220C  5DA1               	subwf	strtof@eexp& (0+255),w,b
  9023  00220E  B0D8               	btfsc	status,0,c
  9024  002210  D01D               	goto	l10741
  9025  002212                     u13910:
  9026                           
  9027                           ; BSR set to: 0
  9028  002212  51A1               	movf	strtof@eexp& (0+255),w,b
  9029  002214  0807               	sublw	7
  9030  002216  6F86               	movwf	??_strtof& (0+255),b
  9031  002218  90D8               	bcf	status,0,c
  9032  00221A  3786               	rlcf	??_strtof& (0+255),f,b
  9033  00221C  90D8               	bcf	status,0,c
  9034  00221E  3786               	rlcf	??_strtof& (0+255),f,b
  9035  002220  C09D  F087         	movff	strtof@digit,??_strtof+1
  9036  002224  6B88               	clrf	(??_strtof+2)& (0+255),b
  9037  002226  6B89               	clrf	(??_strtof+3)& (0+255),b
  9038  002228  6B8A               	clrf	(??_strtof+4)& (0+255),b
  9039  00222A  2B86               	incf	??_strtof& (0+255),f,b
  9040  00222C  D005               	goto	u13920
  9041  00222E                     u13925:
  9042  00222E  90D8               	bcf	status,0,c
  9043  002230  3787               	rlcf	(??_strtof+1)& (0+255),f,b
  9044  002232  3788               	rlcf	(??_strtof+2)& (0+255),f,b
  9045  002234  3789               	rlcf	(??_strtof+3)& (0+255),f,b
  9046  002236  378A               	rlcf	(??_strtof+4)& (0+255),f,b
  9047  002238                     u13920:
  9048  002238  2F86               	decfsz	??_strtof& (0+255),f,b
  9049  00223A  D7F9               	goto	u13925
  9050  00223C  5187               	movf	(??_strtof+1)& (0+255),w,b
  9051  00223E  13A3               	iorwf	strtof@_u& (0+255),f,b
  9052  002240  5188               	movf	(??_strtof+2)& (0+255),w,b
  9053  002242  13A4               	iorwf	(strtof@_u+1)& (0+255),f,b
  9054  002244  5189               	movf	(??_strtof+3)& (0+255),w,b
  9055  002246  13A5               	iorwf	(strtof@_u+2)& (0+255),f,b
  9056  002248  518A               	movf	(??_strtof+4)& (0+255),w,b
  9057  00224A  13A6               	iorwf	(strtof@_u+3)& (0+255),f,b
  9058  00224C                     l10741:
  9059                           
  9060                           ; BSR set to: 0
  9061  00224C  4BA1               	infsnz	strtof@eexp& (0+255),f,b
  9062  00224E  2BA2               	incf	(strtof@eexp+1)& (0+255),f,b
  9063                           
  9064                           ; BSR set to: 0
  9065  002250  0E04               	movlw	4
  9066  002252  279F               	addwf	strtof@expon& (0+255),f,b
  9067  002254  0E00               	movlw	0
  9068  002256  23A0               	addwfc	(strtof@expon+1)& (0+255),f,b
  9069  002258  D00A               	goto	l10749
  9070  00225A                     l10745:
  9071  00225A  0E00               	movlw	0
  9072  00225C  0100               	movlb	0	; () banked
  9073  00225E  6F82               	movwf	?_strtof& (0+255),b
  9074  002260  0E00               	movlw	0
  9075  002262  6F83               	movwf	(?_strtof+1)& (0+255),b
  9076  002264  0E00               	movlw	0
  9077  002266  6F84               	movwf	(?_strtof+2)& (0+255),b
  9078  002268  0E00               	movlw	0
  9079  00226A  6F85               	movwf	(?_strtof+3)& (0+255),b
  9080  00226C  0012               	return	
  9081  00226E                     l10749:
  9082                           
  9083                           ; BSR set to: 0
  9084  00226E  2BA7               	incf	strtof@i& (0+255),f,b
  9085  002270  D75A               	goto	l10711
  9086  002272                     l10751:
  9087                           
  9088                           ; BSR set to: 0
  9089  002272  51A7               	movf	strtof@i& (0+255),w,b
  9090  002274  2582               	addwf	strtof@s& (0+255),w,b
  9091  002276  6ED9               	movwf	fsr2l,c
  9092  002278  0E00               	movlw	0
  9093  00227A  2183               	addwfc	(strtof@s+1)& (0+255),w,b
  9094  00227C  6EDA               	movwf	fsr2h,c
  9095  00227E  0E70               	movlw	112
  9096  002280  18DE               	xorwf	postinc2,w,c
  9097  002282  B4D8               	btfsc	status,2,c
  9098  002284  D096               	goto	u14030
  9099                           
  9100                           ; BSR set to: 0
  9101  002286  51A7               	movf	strtof@i& (0+255),w,b
  9102  002288  2582               	addwf	strtof@s& (0+255),w,b
  9103  00228A  6ED9               	movwf	fsr2l,c
  9104  00228C  0E00               	movlw	0
  9105  00228E  2183               	addwfc	(strtof@s+1)& (0+255),w,b
  9106  002290  6EDA               	movwf	fsr2h,c
  9107  002292  0E50               	movlw	80
  9108  002294  18DE               	xorwf	postinc2,w,c
  9109  002296  B4D8               	btfsc	status,2,c
  9110  002298  D08C               	goto	u14030
  9111                           
  9112                           ; BSR set to: 0
  9113  00229A  51A7               	movf	strtof@i& (0+255),w,b
  9114  00229C  2582               	addwf	strtof@s& (0+255),w,b
  9115  00229E  6ED9               	movwf	fsr2l,c
  9116  0022A0  0E00               	movlw	0
  9117  0022A2  2183               	addwfc	(strtof@s+1)& (0+255),w,b
  9118  0022A4  6EDA               	movwf	fsr2h,c
  9119  0022A6  0E30               	movlw	48
  9120  0022A8  18DE               	xorwf	postinc2,w,c
  9121  0022AA  A4D8               	btfss	status,2,c
  9122  0022AC  D009               	goto	l10763
  9123                           
  9124                           ; BSR set to: 0
  9125  0022AE  51A1               	movf	strtof@eexp& (0+255),w,b
  9126  0022B0  11A2               	iorwf	(strtof@eexp+1)& (0+255),w,b
  9127  0022B2  A4D8               	btfss	status,2,c
  9128  0022B4  D005               	goto	l10763
  9129                           
  9130                           ; BSR set to: 0
  9131  0022B6  0EFC               	movlw	252
  9132  0022B8  279F               	addwf	strtof@expon& (0+255),f,b
  9133  0022BA  0EFF               	movlw	255
  9134  0022BC  23A0               	addwfc	(strtof@expon+1)& (0+255),f,b
  9135  0022BE  D075               	goto	l10783
  9136  0022C0                     l10763:
  9137                           
  9138                           ; BSR set to: 0
  9139  0022C0  51A7               	movf	strtof@i& (0+255),w,b
  9140  0022C2  2582               	addwf	strtof@s& (0+255),w,b
  9141  0022C4  6ED9               	movwf	fsr2l,c
  9142  0022C6  0E00               	movlw	0
  9143  0022C8  2183               	addwfc	(strtof@s+1)& (0+255),w,b
  9144  0022CA  6EDA               	movwf	fsr2h,c
  9145  0022CC  50DF               	movf	indf2,w,c
  9146  0022CE  6F86               	movwf	??_strtof& (0+255),b
  9147  0022D0  5186               	movf	??_strtof& (0+255),w,b
  9148  0022D2  6E13               	movwf	isxdigit@c,c
  9149  0022D4  6A14               	clrf	isxdigit@c+1,c
  9150  0022D6  ECD5  F028         	call	_isxdigit	;wreg free
  9151  0022DA  5013               	movf	?_isxdigit,w,c
  9152  0022DC  1014               	iorwf	?_isxdigit+1,w,c
  9153  0022DE  B4D8               	btfsc	status,2,c
  9154  0022E0  D064               	goto	l10783
  9155  0022E2  0E00               	movlw	0
  9156  0022E4  0100               	movlb	0	; () banked
  9157  0022E6  6F9D               	movwf	strtof@digit& (0+255),b
  9158                           
  9159                           ; BSR set to: 0
  9160  0022E8  0ED0               	movlw	208
  9161  0022EA  6F86               	movwf	??_strtof& (0+255),b
  9162  0022EC  0EFF               	movlw	255
  9163  0022EE  6F87               	movwf	(??_strtof+1)& (0+255),b
  9164  0022F0  51A7               	movf	strtof@i& (0+255),w,b
  9165  0022F2  2582               	addwf	strtof@s& (0+255),w,b
  9166  0022F4  6ED9               	movwf	fsr2l,c
  9167  0022F6  0E00               	movlw	0
  9168  0022F8  2183               	addwfc	(strtof@s+1)& (0+255),w,b
  9169  0022FA  6EDA               	movwf	fsr2h,c
  9170  0022FC  50DF               	movf	indf2,w,c
  9171  0022FE  6F88               	movwf	(??_strtof+2)& (0+255),b
  9172  002300  6B89               	clrf	(??_strtof+3)& (0+255),b
  9173  002302  5186               	movf	??_strtof& (0+255),w,b
  9174  002304  2788               	addwf	(??_strtof+2)& (0+255),f,b
  9175  002306  5187               	movf	(??_strtof+1)& (0+255),w,b
  9176  002308  2389               	addwfc	(??_strtof+3)& (0+255),f,b
  9177  00230A  5189               	movf	(??_strtof+3)& (0+255),w,b
  9178  00230C  E106               	bnz	u13980
  9179  00230E  0E0A               	movlw	10
  9180  002310  5D88               	subwf	(??_strtof+2)& (0+255),w,b
  9181  002312  B0D8               	btfsc	status,0,c
  9182  002314  D002               	goto	u13980
  9183  002316  0E01               	movlw	1
  9184  002318  D001               	goto	u13990
  9185  00231A                     u13980:
  9186  00231A  0E00               	movlw	0
  9187  00231C                     u13990:
  9188  00231C  6F90               	movwf	_strtof$3711& (0+255),b
  9189  00231E  6B91               	clrf	(_strtof$3711+1)& (0+255),b
  9190                           
  9191                           ; BSR set to: 0
  9192  002320  5190               	movf	_strtof$3711& (0+255),w,b
  9193  002322  1191               	iorwf	(_strtof$3711+1)& (0+255),w,b
  9194  002324  B4D8               	btfsc	status,2,c
  9195  002326  D009               	goto	l10775
  9196                           
  9197                           ; BSR set to: 0
  9198  002328  51A7               	movf	strtof@i& (0+255),w,b
  9199  00232A  2582               	addwf	strtof@s& (0+255),w,b
  9200  00232C  6ED9               	movwf	fsr2l,c
  9201  00232E  0E00               	movlw	0
  9202  002330  2183               	addwfc	(strtof@s+1)& (0+255),w,b
  9203  002332  6EDA               	movwf	fsr2h,c
  9204  002334  50DF               	movf	indf2,w,c
  9205  002336  0FD0               	addlw	208
  9206  002338  D010               	goto	L9
  9207  00233A                     l10775:
  9208                           
  9209                           ; BSR set to: 0
  9210  00233A  51A7               	movf	strtof@i& (0+255),w,b
  9211  00233C  2582               	addwf	strtof@s& (0+255),w,b
  9212  00233E  6ED9               	movwf	fsr2l,c
  9213  002340  0E00               	movlw	0
  9214  002342  2183               	addwfc	(strtof@s+1)& (0+255),w,b
  9215  002344  6EDA               	movwf	fsr2h,c
  9216  002346  50DF               	movf	indf2,w,c
  9217  002348  6F86               	movwf	??_strtof& (0+255),b
  9218  00234A  5186               	movf	??_strtof& (0+255),w,b
  9219  00234C  6E19               	movwf	toupper@c,c
  9220  00234E  6A1A               	clrf	toupper@c+1,c
  9221  002350  ECC4  F02A         	call	_toupper	;wreg free
  9222  002354  5019               	movf	?_toupper,w,c
  9223  002356  0FC9               	addlw	201
  9224  002358  0100               	movlb	0	; () banked
  9225  00235A                     L9:
  9226  00235A  6F9D               	movwf	strtof@digit& (0+255),b
  9227                           
  9228                           ; BSR set to: 0
  9229  00235C  BFA2               	btfsc	(strtof@eexp+1)& (0+255),7,b
  9230  00235E  D006               	goto	u14010
  9231  002360  51A2               	movf	(strtof@eexp+1)& (0+255),w,b
  9232  002362  E121               	bnz	l10781
  9233  002364  0E08               	movlw	8
  9234  002366  5DA1               	subwf	strtof@eexp& (0+255),w,b
  9235  002368  B0D8               	btfsc	status,0,c
  9236  00236A  D01D               	goto	l10781
  9237  00236C                     u14010:
  9238                           
  9239                           ; BSR set to: 0
  9240  00236C  51A1               	movf	strtof@eexp& (0+255),w,b
  9241  00236E  0807               	sublw	7
  9242  002370  6F86               	movwf	??_strtof& (0+255),b
  9243  002372  90D8               	bcf	status,0,c
  9244  002374  3786               	rlcf	??_strtof& (0+255),f,b
  9245  002376  90D8               	bcf	status,0,c
  9246  002378  3786               	rlcf	??_strtof& (0+255),f,b
  9247  00237A  C09D  F087         	movff	strtof@digit,??_strtof+1
  9248  00237E  6B88               	clrf	(??_strtof+2)& (0+255),b
  9249  002380  6B89               	clrf	(??_strtof+3)& (0+255),b
  9250  002382  6B8A               	clrf	(??_strtof+4)& (0+255),b
  9251  002384  2B86               	incf	??_strtof& (0+255),f,b
  9252  002386  D005               	goto	u14020
  9253  002388                     u14025:
  9254  002388  90D8               	bcf	status,0,c
  9255  00238A  3787               	rlcf	(??_strtof+1)& (0+255),f,b
  9256  00238C  3788               	rlcf	(??_strtof+2)& (0+255),f,b
  9257  00238E  3789               	rlcf	(??_strtof+3)& (0+255),f,b
  9258  002390  378A               	rlcf	(??_strtof+4)& (0+255),f,b
  9259  002392                     u14020:
  9260  002392  2F86               	decfsz	??_strtof& (0+255),f,b
  9261  002394  D7F9               	goto	u14025
  9262  002396  5187               	movf	(??_strtof+1)& (0+255),w,b
  9263  002398  13A3               	iorwf	strtof@_u& (0+255),f,b
  9264  00239A  5188               	movf	(??_strtof+2)& (0+255),w,b
  9265  00239C  13A4               	iorwf	(strtof@_u+1)& (0+255),f,b
  9266  00239E  5189               	movf	(??_strtof+3)& (0+255),w,b
  9267  0023A0  13A5               	iorwf	(strtof@_u+2)& (0+255),f,b
  9268  0023A2  518A               	movf	(??_strtof+4)& (0+255),w,b
  9269  0023A4  13A6               	iorwf	(strtof@_u+3)& (0+255),f,b
  9270  0023A6                     l10781:
  9271                           
  9272                           ; BSR set to: 0
  9273  0023A6  4BA1               	infsnz	strtof@eexp& (0+255),f,b
  9274  0023A8  2BA2               	incf	(strtof@eexp+1)& (0+255),f,b
  9275  0023AA                     l10783:
  9276  0023AA  0100               	movlb	0	; () banked
  9277  0023AC                     L7:
  9278  0023AC  2BA7               	incf	strtof@i& (0+255),f,b
  9279  0023AE                     l10785:
  9280                           
  9281                           ; BSR set to: 0
  9282  0023AE  B99E               	btfsc	strtof@flags& (0+255),4,b
  9283  0023B0  D760               	goto	l10751
  9284  0023B2                     u14030:
  9285                           
  9286                           ; BSR set to: 0
  9287  0023B2  51A7               	movf	strtof@i& (0+255),w,b
  9288  0023B4  2582               	addwf	strtof@s& (0+255),w,b
  9289  0023B6  6ED9               	movwf	fsr2l,c
  9290  0023B8  0E00               	movlw	0
  9291  0023BA  2183               	addwfc	(strtof@s+1)& (0+255),w,b
  9292  0023BC  6EDA               	movwf	fsr2h,c
  9293  0023BE  0E70               	movlw	112
  9294  0023C0  18DE               	xorwf	postinc2,w,c
  9295  0023C2  B4D8               	btfsc	status,2,c
  9296  0023C4  D013               	goto	l10795
  9297                           
  9298                           ; BSR set to: 0
  9299  0023C6  51A7               	movf	strtof@i& (0+255),w,b
  9300  0023C8  2582               	addwf	strtof@s& (0+255),w,b
  9301  0023CA  6ED9               	movwf	fsr2l,c
  9302  0023CC  0E00               	movlw	0
  9303  0023CE  2183               	addwfc	(strtof@s+1)& (0+255),w,b
  9304  0023D0  6EDA               	movwf	fsr2h,c
  9305  0023D2  0E50               	movlw	80
  9306  0023D4  18DE               	xorwf	postinc2,w,c
  9307  0023D6  B4D8               	btfsc	status,2,c
  9308  0023D8  D009               	goto	l10795
  9309                           
  9310                           ; BSR set to: 0
  9311  0023DA  0E00               	movlw	0
  9312  0023DC  6F82               	movwf	?_strtof& (0+255),b
  9313  0023DE  0E00               	movlw	0
  9314  0023E0  6F83               	movwf	(?_strtof+1)& (0+255),b
  9315  0023E2  0E00               	movlw	0
  9316  0023E4  6F84               	movwf	(?_strtof+2)& (0+255),b
  9317  0023E6  0E00               	movlw	0
  9318  0023E8  6F85               	movwf	(?_strtof+3)& (0+255),b
  9319  0023EA  0012               	return	
  9320  0023EC                     l10795:
  9321                           
  9322                           ; BSR set to: 0
  9323  0023EC  2BA7               	incf	strtof@i& (0+255),f,b
  9324                           
  9325                           ; BSR set to: 0
  9326  0023EE  51A7               	movf	strtof@i& (0+255),w,b
  9327  0023F0  2582               	addwf	strtof@s& (0+255),w,b
  9328  0023F2  6ED9               	movwf	fsr2l,c
  9329  0023F4  0E00               	movlw	0
  9330  0023F6  2183               	addwfc	(strtof@s+1)& (0+255),w,b
  9331  0023F8  6EDA               	movwf	fsr2h,c
  9332  0023FA  0E2B               	movlw	43
  9333  0023FC  18DE               	xorwf	postinc2,w,c
  9334  0023FE  B4D8               	btfsc	status,2,c
  9335  002400  D00B               	goto	L10
  9336                           
  9337                           ; BSR set to: 0
  9338                           
  9339                           ; BSR set to: 0
  9340  002402  51A7               	movf	strtof@i& (0+255),w,b
  9341  002404  2582               	addwf	strtof@s& (0+255),w,b
  9342  002406  6ED9               	movwf	fsr2l,c
  9343  002408  0E00               	movlw	0
  9344  00240A  2183               	addwfc	(strtof@s+1)& (0+255),w,b
  9345  00240C  6EDA               	movwf	fsr2h,c
  9346  00240E  0E2D               	movlw	45
  9347  002410  18DE               	xorwf	postinc2,w,c
  9348  002412  A4D8               	btfss	status,2,c
  9349  002414  D002               	goto	l10805
  9350                           
  9351                           ; BSR set to: 0
  9352  002416  879E               	bsf	strtof@flags& (0+255),3,b
  9353  002418                     L10:
  9354  002418  2BA7               	incf	strtof@i& (0+255),f,b
  9355  00241A                     l10805:
  9356                           
  9357                           ; BSR set to: 0
  9358  00241A  51A7               	movf	strtof@i& (0+255),w,b
  9359  00241C  2782               	addwf	strtof@s& (0+255),f,b
  9360  00241E  0E00               	movlw	0
  9361  002420  2383               	addwfc	(strtof@s+1)& (0+255),f,b
  9362                           
  9363                           ; BSR set to: 0
  9364  002422  0E00               	movlw	0
  9365  002424  6FA7               	movwf	strtof@i& (0+255),b
  9366  002426  D001               	goto	l10811
  9367  002428                     l10809:
  9368                           
  9369                           ; BSR set to: 0
  9370  002428  2BA7               	incf	strtof@i& (0+255),f,b
  9371  00242A                     l10811:
  9372                           
  9373                           ; BSR set to: 0
  9374  00242A  51A7               	movf	strtof@i& (0+255),w,b
  9375  00242C  2582               	addwf	strtof@s& (0+255),w,b
  9376  00242E  6ED9               	movwf	fsr2l,c
  9377  002430  0E00               	movlw	0
  9378  002432  2183               	addwfc	(strtof@s+1)& (0+255),w,b
  9379  002434  6EDA               	movwf	fsr2h,c
  9380  002436  0E30               	movlw	48
  9381  002438  18DE               	xorwf	postinc2,w,c
  9382  00243A  B4D8               	btfsc	status,2,c
  9383  00243C  D7F5               	goto	l10809
  9384                           
  9385                           ; BSR set to: 0
  9386  00243E  0E00               	movlw	0
  9387  002440  6FA2               	movwf	(strtof@eexp+1)& (0+255),b
  9388  002442  0E00               	movlw	0
  9389  002444  6FA1               	movwf	strtof@eexp& (0+255),b
  9390  002446  D028               	goto	l10823
  9391  002448                     l10815:
  9392                           
  9393                           ; BSR set to: 0
  9394  002448  51A7               	movf	strtof@i& (0+255),w,b
  9395  00244A  B4D8               	btfsc	status,2,c
  9396  00244C  D00E               	goto	l10819
  9397                           
  9398                           ; BSR set to: 0
  9399  00244E  C0A1  F013         	movff	strtof@eexp,___wmul@multiplier
  9400  002452  C0A2  F014         	movff	strtof@eexp+1,___wmul@multiplier+1
  9401  002456  0E00               	movlw	0
  9402  002458  6E16               	movwf	___wmul@multiplicand+1,c
  9403  00245A  0E0A               	movlw	10
  9404  00245C  6E15               	movwf	___wmul@multiplicand,c
  9405  00245E  EC24  F02E         	call	___wmul	;wreg free
  9406  002462  C013  F0A1         	movff	?___wmul,strtof@eexp
  9407  002466  C014  F0A2         	movff	?___wmul+1,strtof@eexp+1
  9408  00246A                     l10819:
  9409  00246A  0ED0               	movlw	208
  9410  00246C  0100               	movlb	0	; () banked
  9411  00246E  6F86               	movwf	??_strtof& (0+255),b
  9412  002470  0EFF               	movlw	255
  9413  002472  6F87               	movwf	(??_strtof+1)& (0+255),b
  9414  002474  51A7               	movf	strtof@i& (0+255),w,b
  9415  002476  2582               	addwf	strtof@s& (0+255),w,b
  9416  002478  6ED9               	movwf	fsr2l,c
  9417  00247A  0E00               	movlw	0
  9418  00247C  2183               	addwfc	(strtof@s+1)& (0+255),w,b
  9419  00247E  6EDA               	movwf	fsr2h,c
  9420  002480  50DF               	movf	indf2,w,c
  9421  002482  6F88               	movwf	(??_strtof+2)& (0+255),b
  9422  002484  6B89               	clrf	(??_strtof+3)& (0+255),b
  9423  002486  5186               	movf	??_strtof& (0+255),w,b
  9424  002488  2788               	addwf	(??_strtof+2)& (0+255),f,b
  9425  00248A  5187               	movf	(??_strtof+1)& (0+255),w,b
  9426  00248C  2389               	addwfc	(??_strtof+3)& (0+255),f,b
  9427  00248E  5188               	movf	(??_strtof+2)& (0+255),w,b
  9428  002490  27A1               	addwf	strtof@eexp& (0+255),f,b
  9429  002492  5189               	movf	(??_strtof+3)& (0+255),w,b
  9430  002494  23A2               	addwfc	(strtof@eexp+1)& (0+255),f,b
  9431                           
  9432                           ; BSR set to: 0
  9433  002496  2BA7               	incf	strtof@i& (0+255),f,b
  9434  002498                     l10823:
  9435                           
  9436                           ; BSR set to: 0
  9437  002498  0ED0               	movlw	208
  9438  00249A  6F86               	movwf	??_strtof& (0+255),b
  9439  00249C  0EFF               	movlw	255
  9440  00249E  6F87               	movwf	(??_strtof+1)& (0+255),b
  9441  0024A0  51A7               	movf	strtof@i& (0+255),w,b
  9442  0024A2  2582               	addwf	strtof@s& (0+255),w,b
  9443  0024A4  6ED9               	movwf	fsr2l,c
  9444  0024A6  0E00               	movlw	0
  9445  0024A8  2183               	addwfc	(strtof@s+1)& (0+255),w,b
  9446  0024AA  6EDA               	movwf	fsr2h,c
  9447  0024AC  50DF               	movf	indf2,w,c
  9448  0024AE  6F88               	movwf	(??_strtof+2)& (0+255),b
  9449  0024B0  6B89               	clrf	(??_strtof+3)& (0+255),b
  9450  0024B2  5186               	movf	??_strtof& (0+255),w,b
  9451  0024B4  2788               	addwf	(??_strtof+2)& (0+255),f,b
  9452  0024B6  5187               	movf	(??_strtof+1)& (0+255),w,b
  9453  0024B8  2389               	addwfc	(??_strtof+3)& (0+255),f,b
  9454  0024BA  5189               	movf	(??_strtof+3)& (0+255),w,b
  9455  0024BC  E106               	bnz	u14100
  9456  0024BE  0E0A               	movlw	10
  9457  0024C0  5D88               	subwf	(??_strtof+2)& (0+255),w,b
  9458  0024C2  B0D8               	btfsc	status,0,c
  9459  0024C4  D002               	goto	u14100
  9460  0024C6  0E01               	movlw	1
  9461  0024C8  D001               	goto	u14110
  9462  0024CA                     u14100:
  9463  0024CA  0E00               	movlw	0
  9464  0024CC                     u14110:
  9465  0024CC  6F92               	movwf	_strtof$3712& (0+255),b
  9466  0024CE  6B93               	clrf	(_strtof$3712+1)& (0+255),b
  9467                           
  9468                           ; BSR set to: 0
  9469  0024D0  5192               	movf	_strtof$3712& (0+255),w,b
  9470  0024D2  1193               	iorwf	(_strtof$3712+1)& (0+255),w,b
  9471  0024D4  A4D8               	btfss	status,2,c
  9472  0024D6  D7B8               	goto	l10815
  9473                           
  9474                           ; BSR set to: 0
  9475  0024D8  51A7               	movf	strtof@i& (0+255),w,b
  9476  0024DA  A4D8               	btfss	status,2,c
  9477  0024DC  D009               	goto	l2175
  9478                           
  9479                           ; BSR set to: 0
  9480  0024DE  0E00               	movlw	0
  9481  0024E0  6F82               	movwf	?_strtof& (0+255),b
  9482  0024E2  0E00               	movlw	0
  9483  0024E4  6F83               	movwf	(?_strtof+1)& (0+255),b
  9484  0024E6  0E00               	movlw	0
  9485  0024E8  6F84               	movwf	(?_strtof+2)& (0+255),b
  9486  0024EA  0E00               	movlw	0
  9487  0024EC  6F85               	movwf	(?_strtof+3)& (0+255),b
  9488  0024EE  0012               	return	
  9489  0024F0                     l2175:
  9490                           
  9491                           ; BSR set to: 0
  9492  0024F0  A79E               	btfss	strtof@flags& (0+255),3,b
  9493  0024F2  D004               	goto	l10837
  9494                           
  9495                           ; BSR set to: 0
  9496  0024F4  6DA1               	negf	strtof@eexp& (0+255),b
  9497  0024F6  1FA2               	comf	(strtof@eexp+1)& (0+255),f,b
  9498  0024F8  B0D8               	btfsc	status,0,c
  9499  0024FA  2BA2               	incf	(strtof@eexp+1)& (0+255),f,b
  9500  0024FC                     l10837:
  9501                           
  9502                           ; BSR set to: 0
  9503  0024FC  51A1               	movf	strtof@eexp& (0+255),w,b
  9504  0024FE  279F               	addwf	strtof@expon& (0+255),f,b
  9505  002500  51A2               	movf	(strtof@eexp+1)& (0+255),w,b
  9506  002502  23A0               	addwfc	(strtof@expon+1)& (0+255),f,b
  9507                           
  9508                           ; BSR set to: 0
  9509  002504  5184               	movf	strtof@res& (0+255),w,b
  9510  002506  1185               	iorwf	(strtof@res+1)& (0+255),w,b
  9511  002508  B4D8               	btfsc	status,2,c
  9512  00250A  D00E               	goto	l10843
  9513                           
  9514                           ; BSR set to: 0
  9515  00250C  51A7               	movf	strtof@i& (0+255),w,b
  9516  00250E  2582               	addwf	strtof@s& (0+255),w,b
  9517  002510  6F86               	movwf	??_strtof& (0+255),b
  9518  002512  0E00               	movlw	0
  9519  002514  2183               	addwfc	(strtof@s+1)& (0+255),w,b
  9520  002516  6F87               	movwf	(??_strtof+1)& (0+255),b
  9521  002518  C084  FFD9         	movff	strtof@res,fsr2l
  9522  00251C  C085  FFDA         	movff	strtof@res+1,fsr2h
  9523  002520  C086  FFDE         	movff	??_strtof,postinc2
  9524  002524  C087  FFDD         	movff	??_strtof+1,postdec2
  9525  002528                     l10843:
  9526                           
  9527                           ; BSR set to: 0
  9528  002528  51A3               	movf	strtof@_u& (0+255),w,b
  9529  00252A  11A4               	iorwf	(strtof@_u+1)& (0+255),w,b
  9530  00252C  11A5               	iorwf	(strtof@_u+2)& (0+255),w,b
  9531  00252E  11A6               	iorwf	(strtof@_u+3)& (0+255),w,b
  9532  002530  A4D8               	btfss	status,2,c
  9533  002532  D009               	goto	l10849
  9534                           
  9535                           ; BSR set to: 0
  9536  002534  0E00               	movlw	0
  9537  002536  6F82               	movwf	?_strtof& (0+255),b
  9538  002538  0E00               	movlw	0
  9539  00253A  6F83               	movwf	(?_strtof+1)& (0+255),b
  9540  00253C  0E00               	movlw	0
  9541  00253E  6F84               	movwf	(?_strtof+2)& (0+255),b
  9542  002540  0E00               	movlw	0
  9543  002542  6F85               	movwf	(?_strtof+3)& (0+255),b
  9544  002544  0012               	return	
  9545  002546                     l10849:
  9546                           
  9547                           ; BSR set to: 0
  9548  002546  0EFF               	movlw	255
  9549  002548  15A3               	andwf	strtof@_u& (0+255),w,b
  9550  00254A  6F86               	movwf	??_strtof& (0+255),b
  9551  00254C  0E00               	movlw	0
  9552  00254E  15A4               	andwf	(strtof@_u+1)& (0+255),w,b
  9553  002550  6F87               	movwf	(??_strtof+1)& (0+255),b
  9554  002552  0E00               	movlw	0
  9555  002554  15A5               	andwf	(strtof@_u+2)& (0+255),w,b
  9556  002556  6F88               	movwf	(??_strtof+2)& (0+255),b
  9557  002558  0E00               	movlw	0
  9558  00255A  15A6               	andwf	(strtof@_u+3)& (0+255),w,b
  9559  00255C  6F89               	movwf	(??_strtof+3)& (0+255),b
  9560  00255E  5189               	movf	(??_strtof+3)& (0+255),w,b
  9561  002560  1188               	iorwf	(??_strtof+2)& (0+255),w,b
  9562  002562  1187               	iorwf	(??_strtof+1)& (0+255),w,b
  9563  002564  E104               	bnz	u14170
  9564  002566  0E81               	movlw	129
  9565  002568  5D86               	subwf	??_strtof& (0+255),w,b
  9566  00256A  A0D8               	btfss	status,0,c
  9567  00256C  D011               	goto	l10855
  9568  00256E                     u14170:
  9569                           
  9570                           ; BSR set to: 0
  9571  00256E  0E00               	movlw	0
  9572  002570  27A3               	addwf	strtof@_u& (0+255),f,b
  9573  002572  0E01               	movlw	1
  9574  002574  23A4               	addwfc	(strtof@_u+1)& (0+255),f,b
  9575  002576  0E00               	movlw	0
  9576  002578  23A5               	addwfc	(strtof@_u+2)& (0+255),f,b
  9577  00257A  0E00               	movlw	0
  9578  00257C  23A6               	addwfc	(strtof@_u+3)& (0+255),f,b
  9579  00257E  D008               	goto	l10855
  9580  002580                     l10853:
  9581                           
  9582                           ; BSR set to: 0
  9583  002580  90D8               	bcf	status,0,c
  9584  002582  37A3               	rlcf	strtof@_u& (0+255),f,b
  9585  002584  37A4               	rlcf	(strtof@_u+1)& (0+255),f,b
  9586  002586  37A5               	rlcf	(strtof@_u+2)& (0+255),f,b
  9587  002588  37A6               	rlcf	(strtof@_u+3)& (0+255),f,b
  9588  00258A  079F               	decf	strtof@expon& (0+255),f,b
  9589  00258C  A0D8               	btfss	status,0,c
  9590  00258E  07A0               	decf	(strtof@expon+1)& (0+255),f,b
  9591  002590                     l10855:
  9592                           
  9593                           ; BSR set to: 0
  9594  002590  AFA6               	btfss	(strtof@_u+3)& (0+255),7,b
  9595  002592  D7F6               	goto	l10853
  9596                           
  9597                           ; BSR set to: 0
  9598  002594  AFA0               	btfss	(strtof@expon+1)& (0+255),7,b
  9599  002596  D012               	goto	l10861
  9600  002598  0E83               	movlw	131
  9601  00259A  5D9F               	subwf	strtof@expon& (0+255),w,b
  9602  00259C  0EFF               	movlw	255
  9603  00259E  59A0               	subwfb	(strtof@expon+1)& (0+255),w,b
  9604  0025A0  B0D8               	btfsc	status,0,c
  9605  0025A2  D00C               	goto	l10861
  9606                           
  9607                           ; BSR set to: 0
  9608  0025A4  0EFF               	movlw	255
  9609  0025A6  6FA0               	movwf	(strtof@expon+1)& (0+255),b
  9610  0025A8  0E81               	movlw	129
  9611  0025AA  6F9F               	movwf	strtof@expon& (0+255),b
  9612  0025AC  0E00               	movlw	0
  9613  0025AE  6FA3               	movwf	strtof@_u& (0+255),b
  9614  0025B0  0E00               	movlw	0
  9615  0025B2  6FA4               	movwf	(strtof@_u+1)& (0+255),b
  9616  0025B4  0E00               	movlw	0
  9617  0025B6  6FA5               	movwf	(strtof@_u+2)& (0+255),b
  9618  0025B8  0E00               	movlw	0
  9619  0025BA  6FA6               	movwf	(strtof@_u+3)& (0+255),b
  9620  0025BC                     l10861:
  9621                           
  9622                           ; BSR set to: 0
  9623  0025BC  0E81               	movlw	129
  9624  0025BE  199F               	xorwf	strtof@expon& (0+255),w,b
  9625  0025C0  E103               	bnz	u14200
  9626  0025C2  29A0               	incf	(strtof@expon+1)& (0+255),w,b
  9627  0025C4  B4D8               	btfsc	status,2,c
  9628  0025C6  D008               	goto	l10865
  9629  0025C8                     u14200:
  9630                           
  9631                           ; BSR set to: 0
  9632  0025C8  90D8               	bcf	status,0,c
  9633  0025CA  37A3               	rlcf	strtof@_u& (0+255),f,b
  9634  0025CC  37A4               	rlcf	(strtof@_u+1)& (0+255),f,b
  9635  0025CE  37A5               	rlcf	(strtof@_u+2)& (0+255),f,b
  9636  0025D0  37A6               	rlcf	(strtof@_u+3)& (0+255),f,b
  9637  0025D2  079F               	decf	strtof@expon& (0+255),f,b
  9638  0025D4  A0D8               	btfss	status,0,c
  9639  0025D6  07A0               	decf	(strtof@expon+1)& (0+255),f,b
  9640  0025D8                     l10865:
  9641                           
  9642                           ; BSR set to: 0
  9643  0025D8  BFA0               	btfsc	(strtof@expon+1)& (0+255),7,b
  9644  0025DA  D012               	goto	l10869
  9645  0025DC  51A0               	movf	(strtof@expon+1)& (0+255),w,b
  9646  0025DE  E104               	bnz	u14210
  9647  0025E0  0E80               	movlw	128
  9648  0025E2  5D9F               	subwf	strtof@expon& (0+255),w,b
  9649  0025E4  A0D8               	btfss	status,0,c
  9650  0025E6  D00C               	goto	l10869
  9651  0025E8                     u14210:
  9652                           
  9653                           ; BSR set to: 0
  9654  0025E8  0E00               	movlw	0
  9655  0025EA  6FA3               	movwf	strtof@_u& (0+255),b
  9656  0025EC  0E00               	movlw	0
  9657  0025EE  6FA4               	movwf	(strtof@_u+1)& (0+255),b
  9658  0025F0  0E00               	movlw	0
  9659  0025F2  6FA5               	movwf	(strtof@_u+2)& (0+255),b
  9660  0025F4  0E00               	movlw	0
  9661  0025F6  6FA6               	movwf	(strtof@_u+3)& (0+255),b
  9662  0025F8  0E00               	movlw	0
  9663  0025FA  6FA0               	movwf	(strtof@expon+1)& (0+255),b
  9664  0025FC  0E80               	movlw	128
  9665  0025FE  6F9F               	movwf	strtof@expon& (0+255),b
  9666  002600                     l10869:
  9667                           
  9668                           ; BSR set to: 0
  9669  002600  0E09               	movlw	9
  9670  002602  6F86               	movwf	??_strtof& (0+255),b
  9671  002604                     u14225:
  9672  002604  90D8               	bcf	status,0,c
  9673  002606  33A6               	rrcf	(strtof@_u+3)& (0+255),f,b
  9674  002608  33A5               	rrcf	(strtof@_u+2)& (0+255),f,b
  9675  00260A  33A4               	rrcf	(strtof@_u+1)& (0+255),f,b
  9676  00260C  33A3               	rrcf	strtof@_u& (0+255),f,b
  9677  00260E  2F86               	decfsz	??_strtof& (0+255),f,b
  9678  002610  D7F9               	goto	u14225
  9679                           
  9680                           ; BSR set to: 0
  9681  002612  0EFF               	movlw	255
  9682  002614  17A3               	andwf	strtof@_u& (0+255),f,b
  9683  002616  0EFF               	movlw	255
  9684  002618  17A4               	andwf	(strtof@_u+1)& (0+255),f,b
  9685  00261A  0E7F               	movlw	127
  9686  00261C  17A5               	andwf	(strtof@_u+2)& (0+255),f,b
  9687  00261E  0E00               	movlw	0
  9688  002620  17A6               	andwf	(strtof@_u+3)& (0+255),f,b
  9689                           
  9690                           ; BSR set to: 0
  9691  002622  0E7F               	movlw	127
  9692  002624  259F               	addwf	strtof@expon& (0+255),w,b
  9693  002626  6F86               	movwf	??_strtof& (0+255),b
  9694  002628  0E00               	movlw	0
  9695  00262A  21A0               	addwfc	(strtof@expon+1)& (0+255),w,b
  9696  00262C  6F87               	movwf	(??_strtof+1)& (0+255),b
  9697  00262E  0EFF               	movlw	255
  9698  002630  1586               	andwf	??_strtof& (0+255),w,b
  9699  002632  6F88               	movwf	(??_strtof+2)& (0+255),b
  9700  002634  6B89               	clrf	(??_strtof+3)& (0+255),b
  9701  002636  6B8A               	clrf	(??_strtof+4)& (0+255),b
  9702  002638  6B8B               	clrf	(??_strtof+5)& (0+255),b
  9703  00263A  0E17               	movlw	23
  9704  00263C                     u14235:
  9705  00263C  90D8               	bcf	status,0,c
  9706  00263E  3788               	rlcf	(??_strtof+2)& (0+255),f,b
  9707  002640  3789               	rlcf	(??_strtof+3)& (0+255),f,b
  9708  002642  378A               	rlcf	(??_strtof+4)& (0+255),f,b
  9709  002644  378B               	rlcf	(??_strtof+5)& (0+255),f,b
  9710  002646  2EE8               	decfsz	wreg,f,c
  9711  002648  D7F9               	goto	u14235
  9712  00264A  5188               	movf	(??_strtof+2)& (0+255),w,b
  9713  00264C  13A3               	iorwf	strtof@_u& (0+255),f,b
  9714  00264E  5189               	movf	(??_strtof+3)& (0+255),w,b
  9715  002650  13A4               	iorwf	(strtof@_u+1)& (0+255),f,b
  9716  002652  518A               	movf	(??_strtof+4)& (0+255),w,b
  9717  002654  13A5               	iorwf	(strtof@_u+2)& (0+255),f,b
  9718  002656  518B               	movf	(??_strtof+5)& (0+255),w,b
  9719  002658  13A6               	iorwf	(strtof@_u+3)& (0+255),f,b
  9720  00265A  D271               	goto	l2095
  9721  00265C                     l2186:
  9722                           
  9723                           ; BSR set to: 0
  9724  00265C  B99E               	btfsc	strtof@flags& (0+255),4,b
  9725  00265E  D00A               	goto	l10879
  9726                           
  9727                           ; BSR set to: 0
  9728  002660  C082  FFD9         	movff	strtof@s,fsr2l
  9729  002664  C083  FFDA         	movff	strtof@s+1,fsr2h
  9730  002668  0E2E               	movlw	46
  9731  00266A  18DE               	xorwf	postinc2,w,c
  9732  00266C  A4D8               	btfss	status,2,c
  9733  00266E  D002               	goto	l10879
  9734                           
  9735                           ; BSR set to: 0
  9736  002670  899E               	bsf	strtof@flags& (0+255),4,b
  9737  002672  D059               	goto	l2197
  9738  002674                     l10879:
  9739                           
  9740                           ; BSR set to: 0
  9741  002674  0ED0               	movlw	208
  9742  002676  6F86               	movwf	??_strtof& (0+255),b
  9743  002678  0EFF               	movlw	255
  9744  00267A  6F87               	movwf	(??_strtof+1)& (0+255),b
  9745  00267C  C082  FFD9         	movff	strtof@s,fsr2l
  9746  002680  C083  FFDA         	movff	strtof@s+1,fsr2h
  9747  002684  50DF               	movf	indf2,w,c
  9748  002686  6F88               	movwf	(??_strtof+2)& (0+255),b
  9749  002688  6B89               	clrf	(??_strtof+3)& (0+255),b
  9750  00268A  5186               	movf	??_strtof& (0+255),w,b
  9751  00268C  2788               	addwf	(??_strtof+2)& (0+255),f,b
  9752  00268E  5187               	movf	(??_strtof+1)& (0+255),w,b
  9753  002690  2389               	addwfc	(??_strtof+3)& (0+255),f,b
  9754  002692  5189               	movf	(??_strtof+3)& (0+255),w,b
  9755  002694  E106               	bnz	u14260
  9756  002696  0E0A               	movlw	10
  9757  002698  5D88               	subwf	(??_strtof+2)& (0+255),w,b
  9758  00269A  B0D8               	btfsc	status,0,c
  9759  00269C  D002               	goto	u14260
  9760  00269E  0E01               	movlw	1
  9761  0026A0  D001               	goto	u14270
  9762  0026A2                     u14260:
  9763  0026A2  0E00               	movlw	0
  9764  0026A4                     u14270:
  9765  0026A4  6F94               	movwf	_strtof$3713& (0+255),b
  9766  0026A6  6B95               	clrf	(_strtof$3713+1)& (0+255),b
  9767                           
  9768                           ; BSR set to: 0
  9769  0026A8  5194               	movf	_strtof$3713& (0+255),w,b
  9770  0026AA  1195               	iorwf	(_strtof$3713+1)& (0+255),w,b
  9771  0026AC  B4D8               	btfsc	status,2,c
  9772  0026AE  D03E               	goto	l10901
  9773                           
  9774                           ; BSR set to: 0
  9775  0026B0  839E               	bsf	strtof@flags& (0+255),1,b
  9776                           
  9777                           ; BSR set to: 0
  9778  0026B2  0E09               	movlw	9
  9779  0026B4  19A1               	xorwf	strtof@eexp& (0+255),w,b
  9780  0026B6  11A2               	iorwf	(strtof@eexp+1)& (0+255),w,b
  9781  0026B8  B4D8               	btfsc	status,2,c
  9782  0026BA  D031               	goto	l2195
  9783                           
  9784                           ; BSR set to: 0
  9785  0026BC  A99E               	btfss	strtof@flags& (0+255),4,b
  9786  0026BE  D003               	goto	l2196
  9787                           
  9788                           ; BSR set to: 0
  9789  0026C0  079F               	decf	strtof@expon& (0+255),f,b
  9790  0026C2  A0D8               	btfss	status,0,c
  9791  0026C4  07A0               	decf	(strtof@expon+1)& (0+255),f,b
  9792  0026C6                     l2196:
  9793                           
  9794                           ; BSR set to: 0
  9795  0026C6  4BA1               	infsnz	strtof@eexp& (0+255),f,b
  9796  0026C8  2BA2               	incf	(strtof@eexp+1)& (0+255),f,b
  9797                           
  9798                           ; BSR set to: 0
  9799  0026CA  C0A3  F013         	movff	strtof@_u,___lmul@multiplier
  9800  0026CE  C0A4  F014         	movff	strtof@_u+1,___lmul@multiplier+1
  9801  0026D2  C0A5  F015         	movff	strtof@_u+2,___lmul@multiplier+2
  9802  0026D6  C0A6  F016         	movff	strtof@_u+3,___lmul@multiplier+3
  9803  0026DA  0E0A               	movlw	10
  9804  0026DC  6E17               	movwf	___lmul@multiplicand,c
  9805  0026DE  0E00               	movlw	0
  9806  0026E0  6E18               	movwf	___lmul@multiplicand+1,c
  9807  0026E2  0E00               	movlw	0
  9808  0026E4  6E19               	movwf	___lmul@multiplicand+2,c
  9809  0026E6  0E00               	movlw	0
  9810  0026E8  6E1A               	movwf	___lmul@multiplicand+3,c
  9811  0026EA  EC30  F029         	call	___lmul	;wreg free
  9812  0026EE  C013  F0A3         	movff	?___lmul,strtof@_u
  9813  0026F2  C014  F0A4         	movff	?___lmul+1,strtof@_u+1
  9814  0026F6  C015  F0A5         	movff	?___lmul+2,strtof@_u+2
  9815  0026FA  C016  F0A6         	movff	?___lmul+3,strtof@_u+3
  9816  0026FE  C082  FFD9         	movff	strtof@s,fsr2l
  9817  002702  C083  FFDA         	movff	strtof@s+1,fsr2h
  9818  002706  50DF               	movf	indf2,w,c
  9819  002708  0100               	movlb	0	; () banked
  9820  00270A  6F86               	movwf	??_strtof& (0+255),b
  9821  00270C  0ED0               	movlw	208
  9822  00270E  2786               	addwf	??_strtof& (0+255),f,b
  9823  002710  5186               	movf	??_strtof& (0+255),w,b
  9824  002712  27A3               	addwf	strtof@_u& (0+255),f,b
  9825  002714  0E00               	movlw	0
  9826  002716  23A4               	addwfc	(strtof@_u+1)& (0+255),f,b
  9827  002718  23A5               	addwfc	(strtof@_u+2)& (0+255),f,b
  9828  00271A  23A6               	addwfc	(strtof@_u+3)& (0+255),f,b
  9829  00271C  D004               	goto	l2197
  9830  00271E                     l2195:
  9831                           
  9832                           ; BSR set to: 0
  9833  00271E  B99E               	btfsc	strtof@flags& (0+255),4,b
  9834  002720  D002               	goto	l2197
  9835                           
  9836                           ; BSR set to: 0
  9837  002722  4B9F               	infsnz	strtof@expon& (0+255),f,b
  9838  002724  2BA0               	incf	(strtof@expon+1)& (0+255),f,b
  9839  002726                     l2197:
  9840                           
  9841                           ; BSR set to: 0
  9842  002726  4B82               	infsnz	strtof@s& (0+255),f,b
  9843  002728  2B83               	incf	(strtof@s+1)& (0+255),f,b
  9844  00272A  D798               	goto	l2186
  9845  00272C                     l10901:
  9846                           
  9847                           ; BSR set to: 0
  9848  00272C  0E00               	movlw	0
  9849  00272E  6FA2               	movwf	(strtof@eexp+1)& (0+255),b
  9850  002730  0E00               	movlw	0
  9851  002732  6FA1               	movwf	strtof@eexp& (0+255),b
  9852                           
  9853                           ; BSR set to: 0
  9854  002734  C082  FFD9         	movff	strtof@s,fsr2l
  9855  002738  C083  FFDA         	movff	strtof@s+1,fsr2h
  9856  00273C  0E65               	movlw	101
  9857  00273E  18DE               	xorwf	postinc2,w,c
  9858  002740  B4D8               	btfsc	status,2,c
  9859  002742  D008               	goto	u14330
  9860                           
  9861                           ; BSR set to: 0
  9862  002744  C082  FFD9         	movff	strtof@s,fsr2l
  9863  002748  C083  FFDA         	movff	strtof@s+1,fsr2h
  9864  00274C  0E45               	movlw	69
  9865  00274E  18DE               	xorwf	postinc2,w,c
  9866  002750  A4D8               	btfss	status,2,c
  9867  002752  D0BF               	goto	l10951
  9868  002754                     u14330:
  9869                           
  9870                           ; BSR set to: 0
  9871  002754  4B82               	infsnz	strtof@s& (0+255),f,b
  9872  002756  2B83               	incf	(strtof@s+1)& (0+255),f,b
  9873  002758  C082  FFD9         	movff	strtof@s,fsr2l
  9874  00275C  C083  FFDA         	movff	strtof@s+1,fsr2h
  9875  002760  0E2D               	movlw	45
  9876  002762  18DE               	xorwf	postinc2,w,c
  9877  002764  A4D8               	btfss	status,2,c
  9878  002766  D002               	goto	l10911
  9879                           
  9880                           ; BSR set to: 0
  9881  002768  879E               	bsf	strtof@flags& (0+255),3,b
  9882  00276A  D008               	goto	u14350
  9883  00276C                     l10911:
  9884                           
  9885                           ; BSR set to: 0
  9886  00276C  C082  FFD9         	movff	strtof@s,fsr2l
  9887  002770  C083  FFDA         	movff	strtof@s+1,fsr2h
  9888  002774  0E2B               	movlw	43
  9889  002776  18DE               	xorwf	postinc2,w,c
  9890  002778  A4D8               	btfss	status,2,c
  9891  00277A  D002               	goto	l10917
  9892  00277C                     u14350:
  9893                           
  9894                           ; BSR set to: 0
  9895  00277C  4B82               	infsnz	strtof@s& (0+255),f,b
  9896  00277E  2B83               	incf	(strtof@s+1)& (0+255),f,b
  9897  002780                     l10917:
  9898                           
  9899                           ; BSR set to: 0
  9900  002780  C082  FFD9         	movff	strtof@s,fsr2l
  9901  002784  C083  FFDA         	movff	strtof@s+1,fsr2h
  9902  002788  0E30               	movlw	48
  9903  00278A  18DE               	xorwf	postinc2,w,c
  9904  00278C  B4D8               	btfsc	status,2,c
  9905  00278E  D7F6               	goto	u14350
  9906                           
  9907                           ; BSR set to: 0
  9908  002790  0ED0               	movlw	208
  9909  002792  6F86               	movwf	??_strtof& (0+255),b
  9910  002794  0EFF               	movlw	255
  9911  002796  6F87               	movwf	(??_strtof+1)& (0+255),b
  9912  002798  C082  FFD9         	movff	strtof@s,fsr2l
  9913  00279C  C083  FFDA         	movff	strtof@s+1,fsr2h
  9914  0027A0  50DF               	movf	indf2,w,c
  9915  0027A2  6F88               	movwf	(??_strtof+2)& (0+255),b
  9916  0027A4  6B89               	clrf	(??_strtof+3)& (0+255),b
  9917  0027A6  5186               	movf	??_strtof& (0+255),w,b
  9918  0027A8  2788               	addwf	(??_strtof+2)& (0+255),f,b
  9919  0027AA  5187               	movf	(??_strtof+1)& (0+255),w,b
  9920  0027AC  2389               	addwfc	(??_strtof+3)& (0+255),f,b
  9921  0027AE  5189               	movf	(??_strtof+3)& (0+255),w,b
  9922  0027B0  E106               	bnz	u14370
  9923  0027B2  0E0A               	movlw	10
  9924  0027B4  5D88               	subwf	(??_strtof+2)& (0+255),w,b
  9925  0027B6  B0D8               	btfsc	status,0,c
  9926  0027B8  D002               	goto	u14370
  9927  0027BA  0E01               	movlw	1
  9928  0027BC  D001               	goto	u14380
  9929  0027BE                     u14370:
  9930  0027BE  0E00               	movlw	0
  9931  0027C0                     u14380:
  9932  0027C0  6F96               	movwf	_strtof$3714& (0+255),b
  9933  0027C2  6B97               	clrf	(_strtof$3714+1)& (0+255),b
  9934                           
  9935                           ; BSR set to: 0
  9936  0027C4  5196               	movf	_strtof$3714& (0+255),w,b
  9937  0027C6  1197               	iorwf	(_strtof$3714+1)& (0+255),w,b
  9938  0027C8  B4D8               	btfsc	status,2,c
  9939  0027CA  D07D               	goto	l10947
  9940                           
  9941                           ; BSR set to: 0
  9942  0027CC  C082  FFD9         	movff	strtof@s,fsr2l
  9943  0027D0  C083  FFDA         	movff	strtof@s+1,fsr2h
  9944  0027D4  50DF               	movf	indf2,w,c
  9945  0027D6  6F86               	movwf	??_strtof& (0+255),b
  9946  0027D8  0ED0               	movlw	208
  9947  0027DA  2786               	addwf	??_strtof& (0+255),f,b
  9948  0027DC  5186               	movf	??_strtof& (0+255),w,b
  9949  0027DE  6FA1               	movwf	strtof@eexp& (0+255),b
  9950  0027E0  6BA2               	clrf	(strtof@eexp+1)& (0+255),b
  9951                           
  9952                           ; BSR set to: 0
  9953  0027E2  4B82               	infsnz	strtof@s& (0+255),f,b
  9954  0027E4  2B83               	incf	(strtof@s+1)& (0+255),f,b
  9955                           
  9956                           ; BSR set to: 0
  9957  0027E6  0ED0               	movlw	208
  9958  0027E8  6F86               	movwf	??_strtof& (0+255),b
  9959  0027EA  0EFF               	movlw	255
  9960  0027EC  6F87               	movwf	(??_strtof+1)& (0+255),b
  9961  0027EE  C082  FFD9         	movff	strtof@s,fsr2l
  9962  0027F2  C083  FFDA         	movff	strtof@s+1,fsr2h
  9963  0027F6  50DF               	movf	indf2,w,c
  9964  0027F8  6F88               	movwf	(??_strtof+2)& (0+255),b
  9965  0027FA  6B89               	clrf	(??_strtof+3)& (0+255),b
  9966  0027FC  5186               	movf	??_strtof& (0+255),w,b
  9967  0027FE  2788               	addwf	(??_strtof+2)& (0+255),f,b
  9968  002800  5187               	movf	(??_strtof+1)& (0+255),w,b
  9969  002802  2389               	addwfc	(??_strtof+3)& (0+255),f,b
  9970  002804  5189               	movf	(??_strtof+3)& (0+255),w,b
  9971  002806  E106               	bnz	u14400
  9972  002808  0E0A               	movlw	10
  9973  00280A  5D88               	subwf	(??_strtof+2)& (0+255),w,b
  9974  00280C  B0D8               	btfsc	status,0,c
  9975  00280E  D002               	goto	u14400
  9976  002810  0E01               	movlw	1
  9977  002812  D001               	goto	u14410
  9978  002814                     u14400:
  9979  002814  0E00               	movlw	0
  9980  002816                     u14410:
  9981  002816  6F98               	movwf	_strtof$3715& (0+255),b
  9982  002818  6B99               	clrf	(_strtof$3715+1)& (0+255),b
  9983                           
  9984                           ; BSR set to: 0
  9985  00281A  5198               	movf	_strtof$3715& (0+255),w,b
  9986  00281C  1199               	iorwf	(_strtof$3715+1)& (0+255),w,b
  9987  00281E  B4D8               	btfsc	status,2,c
  9988  002820  D052               	goto	l10947
  9989                           
  9990                           ; BSR set to: 0
  9991  002822  C082  FFD9         	movff	strtof@s,fsr2l
  9992  002826  C083  FFDA         	movff	strtof@s+1,fsr2h
  9993  00282A  50DF               	movf	indf2,w,c
  9994  00282C  6F86               	movwf	??_strtof& (0+255),b
  9995  00282E  0ED0               	movlw	208
  9996  002830  2786               	addwf	??_strtof& (0+255),f,b
  9997  002832  C0A1  F013         	movff	strtof@eexp,___wmul@multiplier
  9998  002836  C0A2  F014         	movff	strtof@eexp+1,___wmul@multiplier+1
  9999  00283A  0E00               	movlw	0
 10000  00283C  6E16               	movwf	___wmul@multiplicand+1,c
 10001  00283E  0E0A               	movlw	10
 10002  002840  6E15               	movwf	___wmul@multiplicand,c
 10003  002842  EC24  F02E         	call	___wmul	;wreg free
 10004  002846  0100               	movlb	0	; () banked
 10005  002848  5186               	movf	??_strtof& (0+255),w,b
 10006  00284A  2413               	addwf	?___wmul,w,c
 10007  00284C  6FA1               	movwf	strtof@eexp& (0+255),b
 10008  00284E  0E00               	movlw	0
 10009  002850  2014               	addwfc	?___wmul+1,w,c
 10010  002852  6FA2               	movwf	(strtof@eexp+1)& (0+255),b
 10011                           
 10012                           ; BSR set to: 0
 10013  002854  4B82               	infsnz	strtof@s& (0+255),f,b
 10014  002856  2B83               	incf	(strtof@s+1)& (0+255),f,b
 10015                           
 10016                           ; BSR set to: 0
 10017  002858  0ED0               	movlw	208
 10018  00285A  6F86               	movwf	??_strtof& (0+255),b
 10019  00285C  0EFF               	movlw	255
 10020  00285E  6F87               	movwf	(??_strtof+1)& (0+255),b
 10021  002860  C082  FFD9         	movff	strtof@s,fsr2l
 10022  002864  C083  FFDA         	movff	strtof@s+1,fsr2h
 10023  002868  50DF               	movf	indf2,w,c
 10024  00286A  6F88               	movwf	(??_strtof+2)& (0+255),b
 10025  00286C  6B89               	clrf	(??_strtof+3)& (0+255),b
 10026  00286E  5186               	movf	??_strtof& (0+255),w,b
 10027  002870  2788               	addwf	(??_strtof+2)& (0+255),f,b
 10028  002872  5187               	movf	(??_strtof+1)& (0+255),w,b
 10029  002874  2389               	addwfc	(??_strtof+3)& (0+255),f,b
 10030  002876  5189               	movf	(??_strtof+3)& (0+255),w,b
 10031  002878  E106               	bnz	u14430
 10032  00287A  0E0A               	movlw	10
 10033  00287C  5D88               	subwf	(??_strtof+2)& (0+255),w,b
 10034  00287E  B0D8               	btfsc	status,0,c
 10035  002880  D002               	goto	u14430
 10036  002882  0E01               	movlw	1
 10037  002884  D001               	goto	u14440
 10038  002886                     u14430:
 10039  002886  0E00               	movlw	0
 10040  002888                     u14440:
 10041  002888  6F9A               	movwf	_strtof$3716& (0+255),b
 10042  00288A  6B9B               	clrf	(_strtof$3716+1)& (0+255),b
 10043                           
 10044                           ; BSR set to: 0
 10045  00288C  519A               	movf	_strtof$3716& (0+255),w,b
 10046  00288E  119B               	iorwf	(_strtof$3716+1)& (0+255),w,b
 10047  002890  B4D8               	btfsc	status,2,c
 10048  002892  D019               	goto	l10947
 10049                           
 10050                           ; BSR set to: 0
 10051  002894  C082  FFD9         	movff	strtof@s,fsr2l
 10052  002898  C083  FFDA         	movff	strtof@s+1,fsr2h
 10053  00289C  50DF               	movf	indf2,w,c
 10054  00289E  6F86               	movwf	??_strtof& (0+255),b
 10055  0028A0  0ED0               	movlw	208
 10056  0028A2  2786               	addwf	??_strtof& (0+255),f,b
 10057  0028A4  C0A1  F013         	movff	strtof@eexp,___wmul@multiplier
 10058  0028A8  C0A2  F014         	movff	strtof@eexp+1,___wmul@multiplier+1
 10059  0028AC  0E00               	movlw	0
 10060  0028AE  6E16               	movwf	___wmul@multiplicand+1,c
 10061  0028B0  0E0A               	movlw	10
 10062  0028B2  6E15               	movwf	___wmul@multiplicand,c
 10063  0028B4  EC24  F02E         	call	___wmul	;wreg free
 10064  0028B8  0100               	movlb	0	; () banked
 10065  0028BA  5186               	movf	??_strtof& (0+255),w,b
 10066  0028BC  2413               	addwf	?___wmul,w,c
 10067  0028BE  6FA1               	movwf	strtof@eexp& (0+255),b
 10068  0028C0  0E00               	movlw	0
 10069  0028C2  2014               	addwfc	?___wmul+1,w,c
 10070  0028C4  6FA2               	movwf	(strtof@eexp+1)& (0+255),b
 10071  0028C6                     l10947:
 10072                           
 10073                           ; BSR set to: 0
 10074  0028C6  A79E               	btfss	strtof@flags& (0+255),3,b
 10075  0028C8  D004               	goto	l10951
 10076                           
 10077                           ; BSR set to: 0
 10078  0028CA  6DA1               	negf	strtof@eexp& (0+255),b
 10079  0028CC  1FA2               	comf	(strtof@eexp+1)& (0+255),f,b
 10080  0028CE  B0D8               	btfsc	status,0,c
 10081  0028D0  2BA2               	incf	(strtof@eexp+1)& (0+255),f,b
 10082  0028D2                     l10951:
 10083                           
 10084                           ; BSR set to: 0
 10085  0028D2  51A1               	movf	strtof@eexp& (0+255),w,b
 10086  0028D4  279F               	addwf	strtof@expon& (0+255),f,b
 10087  0028D6  51A2               	movf	(strtof@eexp+1)& (0+255),w,b
 10088  0028D8  23A0               	addwfc	(strtof@expon+1)& (0+255),f,b
 10089                           
 10090                           ; BSR set to: 0
 10091  0028DA  5184               	movf	strtof@res& (0+255),w,b
 10092  0028DC  1185               	iorwf	(strtof@res+1)& (0+255),w,b
 10093  0028DE  A4D8               	btfss	status,2,c
 10094                           
 10095                           ; BSR set to: 0
 10096  0028E0  A39E               	btfss	strtof@flags& (0+255),1,b
 10097  0028E2  D008               	goto	l10959
 10098                           
 10099                           ; BSR set to: 0
 10100  0028E4  C084  FFD9         	movff	strtof@res,fsr2l
 10101  0028E8  C085  FFDA         	movff	strtof@res+1,fsr2h
 10102  0028EC  C082  FFDE         	movff	strtof@s,postinc2
 10103  0028F0  C083  FFDD         	movff	strtof@s+1,postdec2
 10104  0028F4                     l10959:
 10105                           
 10106                           ; BSR set to: 0
 10107  0028F4  C0A3  F013         	movff	strtof@_u,___xxtofl@val
 10108  0028F8  C0A4  F014         	movff	strtof@_u+1,___xxtofl@val+1
 10109  0028FC  C0A5  F015         	movff	strtof@_u+2,___xxtofl@val+2
 10110  002900  C0A6  F016         	movff	strtof@_u+3,___xxtofl@val+3
 10111  002904  0E00               	movlw	0
 10112  002906  EC15  F021         	call	___xxtofl
 10113  00290A  C013  F0A3         	movff	?___xxtofl,strtof@_u
 10114  00290E  C014  F0A4         	movff	?___xxtofl+1,strtof@_u+1
 10115  002912  C015  F0A5         	movff	?___xxtofl+2,strtof@_u+2
 10116  002916  C016  F0A6         	movff	?___xxtofl+3,strtof@_u+3
 10117  00291A  C0A3  F013         	movff	strtof@_u,___fleq@ff1
 10118  00291E  C0A4  F014         	movff	strtof@_u+1,___fleq@ff1+1
 10119  002922  C0A5  F015         	movff	strtof@_u+2,___fleq@ff1+2
 10120  002926  C0A6  F016         	movff	strtof@_u+3,___fleq@ff1+3
 10121  00292A  0E00               	movlw	0
 10122  00292C  6E17               	movwf	___fleq@ff2,c
 10123  00292E  0E00               	movlw	0
 10124  002930  6E18               	movwf	___fleq@ff2+1,c
 10125  002932  0E00               	movlw	0
 10126  002934  6E19               	movwf	___fleq@ff2+2,c
 10127  002936  0E00               	movlw	0
 10128  002938  6E1A               	movwf	___fleq@ff2+3,c
 10129  00293A  EC24  F028         	call	___fleq	;wreg free
 10130  00293E  A0D8               	btfss	status,0,c
 10131  002940  D00A               	goto	l10967
 10132  002942  0E00               	movlw	0
 10133  002944  0100               	movlb	0	; () banked
 10134  002946  6F82               	movwf	?_strtof& (0+255),b
 10135  002948  0E00               	movlw	0
 10136  00294A  6F83               	movwf	(?_strtof+1)& (0+255),b
 10137  00294C  0E00               	movlw	0
 10138  00294E  6F84               	movwf	(?_strtof+2)& (0+255),b
 10139  002950  0E00               	movlw	0
 10140  002952  6F85               	movwf	(?_strtof+3)& (0+255),b
 10141  002954  0012               	return	
 10142  002956                     l10967:
 10143  002956  0100               	movlb	0	; () banked
 10144  002958  AFA0               	btfss	(strtof@expon+1)& (0+255),7,b
 10145  00295A  D078               	goto	l10995
 10146                           
 10147                           ; BSR set to: 0
 10148  00295C  6D9F               	negf	strtof@expon& (0+255),b
 10149  00295E  1FA0               	comf	(strtof@expon+1)& (0+255),f,b
 10150  002960  B0D8               	btfsc	status,0,c
 10151  002962  2BA0               	incf	(strtof@expon+1)& (0+255),f,b
 10152  002964  D01F               	goto	l10975
 10153  002966                     l10971:
 10154                           
 10155                           ; BSR set to: 0
 10156  002966  C0A3  F06D         	movff	strtof@_u,___fldiv@b
 10157  00296A  C0A4  F06E         	movff	strtof@_u+1,___fldiv@b+1
 10158  00296E  C0A5  F06F         	movff	strtof@_u+2,___fldiv@b+2
 10159  002972  C0A6  F070         	movff	strtof@_u+3,___fldiv@b+3
 10160  002976  0EF9               	movlw	249
 10161  002978  6F71               	movwf	___fldiv@a& (0+255),b
 10162  00297A  0E02               	movlw	2
 10163  00297C  6F72               	movwf	(___fldiv@a+1)& (0+255),b
 10164  00297E  0E15               	movlw	21
 10165  002980  6F73               	movwf	(___fldiv@a+2)& (0+255),b
 10166  002982  0E50               	movlw	80
 10167  002984  6F74               	movwf	(___fldiv@a+3)& (0+255),b
 10168  002986  EC8D  F01A         	call	___fldiv	;wreg free
 10169  00298A  C06D  F0A3         	movff	?___fldiv,strtof@_u
 10170  00298E  C06E  F0A4         	movff	?___fldiv+1,strtof@_u+1
 10171  002992  C06F  F0A5         	movff	?___fldiv+2,strtof@_u+2
 10172  002996  C070  F0A6         	movff	?___fldiv+3,strtof@_u+3
 10173  00299A  0100               	movlb	0	; () banked
 10174  00299C  0EF6               	movlw	246
 10175  00299E  279F               	addwf	strtof@expon& (0+255),f,b
 10176  0029A0  0EFF               	movlw	255
 10177  0029A2  23A0               	addwfc	(strtof@expon+1)& (0+255),f,b
 10178  0029A4                     l10975:
 10179                           
 10180                           ; BSR set to: 0
 10181  0029A4  BFA0               	btfsc	(strtof@expon+1)& (0+255),7,b
 10182  0029A6  D025               	goto	l10981
 10183  0029A8  51A0               	movf	(strtof@expon+1)& (0+255),w,b
 10184  0029AA  E1DD               	bnz	l10971
 10185  0029AC  0E0A               	movlw	10
 10186  0029AE  5D9F               	subwf	strtof@expon& (0+255),w,b
 10187  0029B0  A0D8               	btfss	status,0,c
 10188  0029B2  D01F               	goto	l10981
 10189  0029B4  D7D8               	goto	l10971
 10190  0029B6                     l10977:
 10191                           
 10192                           ; BSR set to: 0
 10193  0029B6  C0A3  F06D         	movff	strtof@_u,___fldiv@b
 10194  0029BA  C0A4  F06E         	movff	strtof@_u+1,___fldiv@b+1
 10195  0029BE  C0A5  F06F         	movff	strtof@_u+2,___fldiv@b+2
 10196  0029C2  C0A6  F070         	movff	strtof@_u+3,___fldiv@b+3
 10197  0029C6  0E00               	movlw	0
 10198  0029C8  6F71               	movwf	___fldiv@a& (0+255),b
 10199  0029CA  0E00               	movlw	0
 10200  0029CC  6F72               	movwf	(___fldiv@a+1)& (0+255),b
 10201  0029CE  0E20               	movlw	32
 10202  0029D0  6F73               	movwf	(___fldiv@a+2)& (0+255),b
 10203  0029D2  0E41               	movlw	65
 10204  0029D4  6F74               	movwf	(___fldiv@a+3)& (0+255),b
 10205  0029D6  EC8D  F01A         	call	___fldiv	;wreg free
 10206  0029DA  C06D  F0A3         	movff	?___fldiv,strtof@_u
 10207  0029DE  C06E  F0A4         	movff	?___fldiv+1,strtof@_u+1
 10208  0029E2  C06F  F0A5         	movff	?___fldiv+2,strtof@_u+2
 10209  0029E6  C070  F0A6         	movff	?___fldiv+3,strtof@_u+3
 10210  0029EA  0100               	movlb	0	; () banked
 10211  0029EC  079F               	decf	strtof@expon& (0+255),f,b
 10212  0029EE  A0D8               	btfss	status,0,c
 10213  0029F0  07A0               	decf	(strtof@expon+1)& (0+255),f,b
 10214  0029F2                     l10981:
 10215                           
 10216                           ; BSR set to: 0
 10217  0029F2  519F               	movf	strtof@expon& (0+255),w,b
 10218  0029F4  11A0               	iorwf	(strtof@expon+1)& (0+255),w,b
 10219  0029F6  A4D8               	btfss	status,2,c
 10220  0029F8  D7DE               	goto	l10977
 10221                           
 10222                           ; BSR set to: 0
 10223  0029FA  C0A3  F013         	movff	strtof@_u,___flge@ff1
 10224  0029FE  C0A4  F014         	movff	strtof@_u+1,___flge@ff1+1
 10225  002A02  C0A5  F015         	movff	strtof@_u+2,___flge@ff1+2
 10226  002A06  C0A6  F016         	movff	strtof@_u+3,___flge@ff1+3
 10227  002A0A  0E00               	movlw	0
 10228  002A0C  6E17               	movwf	___flge@ff2,c
 10229  002A0E  0E00               	movlw	0
 10230  002A10  6E18               	movwf	___flge@ff2+1,c
 10231  002A12  0E80               	movlw	128
 10232  002A14  6E19               	movwf	___flge@ff2+2,c
 10233  002A16  0E00               	movlw	0
 10234  002A18  6E1A               	movwf	___flge@ff2+3,c
 10235  002A1A  EC61  F025         	call	___flge	;wreg free
 10236  002A1E  B0D8               	btfsc	status,0,c
 10237  002A20  D08E               	goto	l2095
 10238  002A22  0100               	movlb	0	; () banked
 10239  002A24  A19E               	btfss	strtof@flags& (0+255),0,b
 10240  002A26  D009               	goto	l10991
 10241                           
 10242                           ; BSR set to: 0
 10243  002A28  0E00               	movlw	0
 10244  002A2A  6F82               	movwf	?_strtof& (0+255),b
 10245  002A2C  0E00               	movlw	0
 10246  002A2E  6F83               	movwf	(?_strtof+1)& (0+255),b
 10247  002A30  0E80               	movlw	128
 10248  002A32  6F84               	movwf	(?_strtof+2)& (0+255),b
 10249  002A34  0E80               	movlw	128
 10250  002A36  6F85               	movwf	(?_strtof+3)& (0+255),b
 10251  002A38  0012               	return	
 10252  002A3A                     l10991:
 10253                           
 10254                           ; BSR set to: 0
 10255  002A3A  0E00               	movlw	0
 10256  002A3C  6F82               	movwf	?_strtof& (0+255),b
 10257  002A3E  0E00               	movlw	0
 10258  002A40  6F83               	movwf	(?_strtof+1)& (0+255),b
 10259  002A42  0E80               	movlw	128
 10260  002A44  6F84               	movwf	(?_strtof+2)& (0+255),b
 10261  002A46  0E00               	movlw	0
 10262  002A48  6F85               	movwf	(?_strtof+3)& (0+255),b
 10263  002A4A  0012               	return	
 10264  002A4C                     l10995:
 10265                           
 10266                           ; BSR set to: 0
 10267  002A4C  BFA0               	btfsc	(strtof@expon+1)& (0+255),7,b
 10268  002A4E  D077               	goto	l2095
 10269  002A50  51A0               	movf	(strtof@expon+1)& (0+255),w,b
 10270  002A52  E123               	bnz	l11003
 10271  002A54  059F               	decf	strtof@expon& (0+255),w,b
 10272  002A56  B0D8               	btfsc	status,0,c
 10273  002A58  D020               	goto	l11003
 10274  002A5A  D071               	goto	l2095
 10275  002A5C                     l10999:
 10276                           
 10277                           ; BSR set to: 0
 10278  002A5C  C0A3  F02B         	movff	strtof@_u,___flmul@b
 10279  002A60  C0A4  F02C         	movff	strtof@_u+1,___flmul@b+1
 10280  002A64  C0A5  F02D         	movff	strtof@_u+2,___flmul@b+2
 10281  002A68  C0A6  F02E         	movff	strtof@_u+3,___flmul@b+3
 10282  002A6C  0EF9               	movlw	249
 10283  002A6E  6E2F               	movwf	___flmul@a,c
 10284  002A70  0E02               	movlw	2
 10285  002A72  6E30               	movwf	___flmul@a+1,c
 10286  002A74  0E15               	movlw	21
 10287  002A76  6E31               	movwf	___flmul@a+2,c
 10288  002A78  0E50               	movlw	80
 10289  002A7A  6E32               	movwf	___flmul@a+3,c
 10290  002A7C  ECBD  F015         	call	___flmul	;wreg free
 10291  002A80  C02B  F0A3         	movff	?___flmul,strtof@_u
 10292  002A84  C02C  F0A4         	movff	?___flmul+1,strtof@_u+1
 10293  002A88  C02D  F0A5         	movff	?___flmul+2,strtof@_u+2
 10294  002A8C  C02E  F0A6         	movff	?___flmul+3,strtof@_u+3
 10295  002A90  0100               	movlb	0	; () banked
 10296  002A92  0EF6               	movlw	246
 10297  002A94  279F               	addwf	strtof@expon& (0+255),f,b
 10298  002A96  0EFF               	movlw	255
 10299  002A98  23A0               	addwfc	(strtof@expon+1)& (0+255),f,b
 10300  002A9A                     l11003:
 10301                           
 10302                           ; BSR set to: 0
 10303  002A9A  51A0               	movf	(strtof@expon+1)& (0+255),w,b
 10304  002A9C  E1DF               	bnz	l10999
 10305  002A9E  0E0A               	movlw	10
 10306  002AA0  5D9F               	subwf	strtof@expon& (0+255),w,b
 10307  002AA2  A0D8               	btfss	status,0,c
 10308  002AA4  D01F               	goto	l11009
 10309  002AA6  D7DA               	goto	l10999
 10310  002AA8                     l11005:
 10311                           
 10312                           ; BSR set to: 0
 10313  002AA8  C0A3  F02B         	movff	strtof@_u,___flmul@b
 10314  002AAC  C0A4  F02C         	movff	strtof@_u+1,___flmul@b+1
 10315  002AB0  C0A5  F02D         	movff	strtof@_u+2,___flmul@b+2
 10316  002AB4  C0A6  F02E         	movff	strtof@_u+3,___flmul@b+3
 10317  002AB8  0E00               	movlw	0
 10318  002ABA  6E2F               	movwf	___flmul@a,c
 10319  002ABC  0E00               	movlw	0
 10320  002ABE  6E30               	movwf	___flmul@a+1,c
 10321  002AC0  0E20               	movlw	32
 10322  002AC2  6E31               	movwf	___flmul@a+2,c
 10323  002AC4  0E41               	movlw	65
 10324  002AC6  6E32               	movwf	___flmul@a+3,c
 10325  002AC8  ECBD  F015         	call	___flmul	;wreg free
 10326  002ACC  C02B  F0A3         	movff	?___flmul,strtof@_u
 10327  002AD0  C02C  F0A4         	movff	?___flmul+1,strtof@_u+1
 10328  002AD4  C02D  F0A5         	movff	?___flmul+2,strtof@_u+2
 10329  002AD8  C02E  F0A6         	movff	?___flmul+3,strtof@_u+3
 10330  002ADC  0100               	movlb	0	; () banked
 10331  002ADE  079F               	decf	strtof@expon& (0+255),f,b
 10332  002AE0  A0D8               	btfss	status,0,c
 10333  002AE2  07A0               	decf	(strtof@expon+1)& (0+255),f,b
 10334  002AE4                     l11009:
 10335                           
 10336                           ; BSR set to: 0
 10337  002AE4  519F               	movf	strtof@expon& (0+255),w,b
 10338  002AE6  11A0               	iorwf	(strtof@expon+1)& (0+255),w,b
 10339  002AE8  A4D8               	btfss	status,2,c
 10340  002AEA  D7DE               	goto	l11005
 10341                           
 10342                           ; BSR set to: 0
 10343  002AEC  0EFF               	movlw	255
 10344  002AEE  6E13               	movwf	___flge@ff1,c
 10345  002AF0  0EFF               	movlw	255
 10346  002AF2  6E14               	movwf	___flge@ff1+1,c
 10347  002AF4  0E7F               	movlw	127
 10348  002AF6  6E15               	movwf	___flge@ff1+2,c
 10349  002AF8  0E7F               	movlw	127
 10350  002AFA  6E16               	movwf	___flge@ff1+3,c
 10351  002AFC  C0A3  F017         	movff	strtof@_u,___flge@ff2
 10352  002B00  C0A4  F018         	movff	strtof@_u+1,___flge@ff2+1
 10353  002B04  C0A5  F019         	movff	strtof@_u+2,___flge@ff2+2
 10354  002B08  C0A6  F01A         	movff	strtof@_u+3,___flge@ff2+3
 10355  002B0C  EC61  F025         	call	___flge	;wreg free
 10356  002B10  B0D8               	btfsc	status,0,c
 10357  002B12  D015               	goto	l2095
 10358  002B14  0100               	movlb	0	; () banked
 10359  002B16  A19E               	btfss	strtof@flags& (0+255),0,b
 10360  002B18  D009               	goto	l11019
 10361                           
 10362                           ; BSR set to: 0
 10363  002B1A  0E00               	movlw	0
 10364  002B1C  6F82               	movwf	?_strtof& (0+255),b
 10365  002B1E  0E00               	movlw	0
 10366  002B20  6F83               	movwf	(?_strtof+1)& (0+255),b
 10367  002B22  0E80               	movlw	128
 10368  002B24  6F84               	movwf	(?_strtof+2)& (0+255),b
 10369  002B26  0E80               	movlw	128
 10370  002B28  6F85               	movwf	(?_strtof+3)& (0+255),b
 10371  002B2A  0012               	return	
 10372  002B2C                     l11019:
 10373                           
 10374                           ; BSR set to: 0
 10375  002B2C  0E00               	movlw	0
 10376  002B2E  6F82               	movwf	?_strtof& (0+255),b
 10377  002B30  0E00               	movlw	0
 10378  002B32  6F83               	movwf	(?_strtof+1)& (0+255),b
 10379  002B34  0E80               	movlw	128
 10380  002B36  6F84               	movwf	(?_strtof+2)& (0+255),b
 10381  002B38  0E00               	movlw	0
 10382  002B3A  6F85               	movwf	(?_strtof+3)& (0+255),b
 10383  002B3C  0012               	return	
 10384  002B3E                     l2095:
 10385  002B3E  0100               	movlb	0	; () banked
 10386  002B40  A19E               	btfss	strtof@flags& (0+255),0,b
 10387  002B42  D012               	goto	l11025
 10388                           
 10389                           ; BSR set to: 0
 10390  002B44  C0A3  F013         	movff	strtof@_u,___flneg@f1
 10391  002B48  C0A4  F014         	movff	strtof@_u+1,___flneg@f1+1
 10392  002B4C  C0A5  F015         	movff	strtof@_u+2,___flneg@f1+2
 10393  002B50  C0A6  F016         	movff	strtof@_u+3,___flneg@f1+3
 10394  002B54  EC4F  F02D         	call	___flneg	;wreg free
 10395  002B58  C013  F0A3         	movff	?___flneg,strtof@_u
 10396  002B5C  C014  F0A4         	movff	?___flneg+1,strtof@_u+1
 10397  002B60  C015  F0A5         	movff	?___flneg+2,strtof@_u+2
 10398  002B64  C016  F0A6         	movff	?___flneg+3,strtof@_u+3
 10399  002B68                     l11025:
 10400  002B68  C0A3  F082         	movff	strtof@_u,?_strtof
 10401  002B6C  C0A4  F083         	movff	strtof@_u+1,?_strtof+1
 10402  002B70  C0A5  F084         	movff	strtof@_u+2,?_strtof+2
 10403  002B74  C0A6  F085         	movff	strtof@_u+3,?_strtof+3
 10404  002B78  0012               	return		;funcret
 10405  002B7A                     __end_of_strtof:
 10406                           	opt callstack 0
 10407                           
 10408 ;; *************** function _nanf *****************
 10409 ;; Defined at:
 10410 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nanf.c"
 10411 ;; Parameters:    Size  Location     Type
 10412 ;;  s               2   18[COMRAM] PTR const unsigned char 
 10413 ;;		 -> STR_158(1), 
 10414 ;; Auto vars:     Size  Location     Type
 10415 ;;  u               4   22[COMRAM] struct .
 10416 ;; Return value:  Size  Location     Type
 10417 ;;                  4   18[COMRAM] float 
 10418 ;; Registers used:
 10419 ;;		wreg, status,2
 10420 ;; Tracked objects:
 10421 ;;		On entry : 0/0
 10422 ;;		On exit  : 0/0
 10423 ;;		Unchanged: 0/0
 10424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10425 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10426 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10428 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10429 ;;Total ram usage:        8 bytes
 10430 ;; Hardware stack levels used:    1
 10431 ;; Hardware stack levels required when called:    8
 10432 ;; This function calls:
 10433 ;;		Nothing
 10434 ;; This function is called by:
 10435 ;;		_strtof
 10436 ;; This function uses a non-reentrant model
 10437 ;;
 10438                           
 10439                           	psect	text39
 10440  005CFE                     __ptext39:
 10441                           	opt callstack 0
 10442  005CFE                     _nanf:
 10443                           	opt callstack 18
 10444                           
 10445                           ;incstack = 0
 10446  005CFE  0EFF               	movlw	255
 10447  005D00  6E17               	movwf	nanf@u,c
 10448  005D02  0EFF               	movlw	255
 10449  005D04  6E18               	movwf	nanf@u+1,c
 10450  005D06  0EFF               	movlw	255
 10451  005D08  6E19               	movwf	nanf@u+2,c
 10452  005D0A  0E7F               	movlw	127
 10453  005D0C  6E1A               	movwf	nanf@u+3,c
 10454  005D0E  C017  F013         	movff	nanf@u,?_nanf
 10455  005D12  C018  F014         	movff	nanf@u+1,?_nanf+1
 10456  005D16  C019  F015         	movff	nanf@u+2,?_nanf+2
 10457  005D1A  C01A  F016         	movff	nanf@u+3,?_nanf+3
 10458  005D1E  0012               	return		;funcret
 10459  005D20                     __end_of_nanf:
 10460                           	opt callstack 0
 10461                           
 10462 ;; *************** function _isxdigit *****************
 10463 ;; Defined at:
 10464 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isxdigit.c"
 10465 ;; Parameters:    Size  Location     Type
 10466 ;;  c               2   18[COMRAM] int 
 10467 ;; Auto vars:     Size  Location     Type
 10468 ;;		None
 10469 ;; Return value:  Size  Location     Type
 10470 ;;                  2   18[COMRAM] int 
 10471 ;; Registers used:
 10472 ;;		wreg, status,2, status,0
 10473 ;; Tracked objects:
 10474 ;;		On entry : 0/0
 10475 ;;		On exit  : 0/0
 10476 ;;		Unchanged: 0/0
 10477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10478 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10479 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10480 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10481 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10482 ;;Total ram usage:        7 bytes
 10483 ;; Hardware stack levels used:    1
 10484 ;; Hardware stack levels required when called:    8
 10485 ;; This function calls:
 10486 ;;		Nothing
 10487 ;; This function is called by:
 10488 ;;		_strtof
 10489 ;; This function uses a non-reentrant model
 10490 ;;
 10491                           
 10492                           	psect	text40
 10493  0051AA                     __ptext40:
 10494                           	opt callstack 0
 10495  0051AA                     _isxdigit:
 10496                           	opt callstack 18
 10497                           
 10498                           ;incstack = 0
 10499  0051AA  0E01               	movlw	1
 10500  0051AC  6E19               	movwf	_isxdigit$3792,c
 10501  0051AE  0ED0               	movlw	208
 10502  0051B0  6E15               	movwf	??_isxdigit& (0+255),c
 10503  0051B2  0EFF               	movlw	255
 10504  0051B4  6E16               	movwf	(??_isxdigit+1)& (0+255),c
 10505  0051B6  C013  F017         	movff	isxdigit@c,??_isxdigit+2
 10506  0051BA  C014  F018         	movff	isxdigit@c+1,??_isxdigit+3
 10507  0051BE  5015               	movf	??_isxdigit,w,c
 10508  0051C0  2617               	addwf	??_isxdigit+2,f,c
 10509  0051C2  5016               	movf	??_isxdigit+1,w,c
 10510  0051C4  2218               	addwfc	??_isxdigit+3,f,c
 10511  0051C6  5018               	movf	??_isxdigit+3,w,c
 10512  0051C8  E104               	bnz	u13520
 10513  0051CA  0E0A               	movlw	10
 10514  0051CC  5C17               	subwf	??_isxdigit+2,w,c
 10515  0051CE  A0D8               	btfss	status,0,c
 10516  0051D0  D016               	goto	l10571
 10517  0051D2                     u13520:
 10518  0051D2  0E9F               	movlw	159
 10519  0051D4  6E15               	movwf	??_isxdigit& (0+255),c
 10520  0051D6  0EFF               	movlw	255
 10521  0051D8  6E16               	movwf	(??_isxdigit+1)& (0+255),c
 10522  0051DA  0E20               	movlw	32
 10523  0051DC  1013               	iorwf	isxdigit@c,w,c
 10524  0051DE  6E17               	movwf	(??_isxdigit+2)& (0+255),c
 10525  0051E0  0E00               	movlw	0
 10526  0051E2  1014               	iorwf	isxdigit@c+1,w,c
 10527  0051E4  6E18               	movwf	(??_isxdigit+3)& (0+255),c
 10528  0051E6  5015               	movf	??_isxdigit,w,c
 10529  0051E8  2617               	addwf	??_isxdigit+2,f,c
 10530  0051EA  5016               	movf	??_isxdigit+1,w,c
 10531  0051EC  2218               	addwfc	??_isxdigit+3,f,c
 10532  0051EE  5018               	movf	??_isxdigit+3,w,c
 10533  0051F0  E104               	bnz	u13530
 10534  0051F2  0E06               	movlw	6
 10535  0051F4  5C17               	subwf	??_isxdigit+2,w,c
 10536  0051F6  A0D8               	btfss	status,0,c
 10537  0051F8  D002               	goto	l10571
 10538  0051FA                     u13530:
 10539  0051FA  0E00               	movlw	0
 10540  0051FC  6E19               	movwf	_isxdigit$3792,c
 10541  0051FE                     l10571:
 10542  0051FE  C019  F013         	movff	_isxdigit$3792,?_isxdigit
 10543  005202  6A14               	clrf	?_isxdigit+1,c
 10544  005204  0012               	return		;funcret
 10545  005206                     __end_of_isxdigit:
 10546                           	opt callstack 0
 10547                           
 10548 ;; *************** function ___xxtofl *****************
 10549 ;; Defined at:
 10550 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/xxtofl.c"
 10551 ;; Parameters:    Size  Location     Type
 10552 ;;  sign            1    wreg     unsigned char 
 10553 ;;  val             4   18[COMRAM] long 
 10554 ;; Auto vars:     Size  Location     Type
 10555 ;;  sign            1   26[COMRAM] unsigned char 
 10556 ;;  arg             4   28[COMRAM] unsigned long 
 10557 ;;  exp             1   27[COMRAM] unsigned char 
 10558 ;; Return value:  Size  Location     Type
 10559 ;;                  4   18[COMRAM] unsigned char 
 10560 ;; Registers used:
 10561 ;;		wreg, status,2, status,0
 10562 ;; Tracked objects:
 10563 ;;		On entry : 0/0
 10564 ;;		On exit  : 0/0
 10565 ;;		Unchanged: 0/0
 10566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10567 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10568 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10569 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10570 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10571 ;;Total ram usage:       14 bytes
 10572 ;; Hardware stack levels used:    1
 10573 ;; Hardware stack levels required when called:    8
 10574 ;; This function calls:
 10575 ;;		Nothing
 10576 ;; This function is called by:
 10577 ;;		_strtof
 10578 ;; This function uses a non-reentrant model
 10579 ;;
 10580                           
 10581                           	psect	text41
 10582  00422A                     __ptext41:
 10583                           	opt callstack 0
 10584  00422A                     ___xxtofl:
 10585                           	opt callstack 18
 10586                           
 10587                           ;incstack = 0
 10588                           ;___xxtofl@sign stored from wreg
 10589  00422A  6E1B               	movwf	___xxtofl@sign,c
 10590  00422C  501B               	movf	___xxtofl@sign,w,c
 10591  00422E  A4D8               	btfss	status,2,c
 10592  004230  AE16               	btfss	___xxtofl@val+3,7,c
 10593  004232  D01A               	goto	l1894
 10594  004234  C013  F017         	movff	___xxtofl@val,??___xxtofl
 10595  004238  C014  F018         	movff	___xxtofl@val+1,??___xxtofl+1
 10596  00423C  C015  F019         	movff	___xxtofl@val+2,??___xxtofl+2
 10597  004240  C016  F01A         	movff	___xxtofl@val+3,??___xxtofl+3
 10598  004244  1E17               	comf	??___xxtofl,f,c
 10599  004246  1E18               	comf	??___xxtofl+1,f,c
 10600  004248  1E19               	comf	??___xxtofl+2,f,c
 10601  00424A  1E1A               	comf	??___xxtofl+3,f,c
 10602  00424C  2A17               	incf	??___xxtofl,f,c
 10603  00424E  0E00               	movlw	0
 10604  004250  2218               	addwfc	??___xxtofl+1,f,c
 10605  004252  2219               	addwfc	??___xxtofl+2,f,c
 10606  004254  221A               	addwfc	??___xxtofl+3,f,c
 10607  004256  C017  F01D         	movff	??___xxtofl,___xxtofl@arg
 10608  00425A  C018  F01E         	movff	??___xxtofl+1,___xxtofl@arg+1
 10609  00425E  C019  F01F         	movff	??___xxtofl+2,___xxtofl@arg+2
 10610  004262  C01A  F020         	movff	??___xxtofl+3,___xxtofl@arg+3
 10611  004266  D008               	goto	l10505
 10612  004268                     l1894:
 10613  004268  C013  F01D         	movff	___xxtofl@val,___xxtofl@arg
 10614  00426C  C014  F01E         	movff	___xxtofl@val+1,___xxtofl@arg+1
 10615  004270  C015  F01F         	movff	___xxtofl@val+2,___xxtofl@arg+2
 10616  004274  C016  F020         	movff	___xxtofl@val+3,___xxtofl@arg+3
 10617  004278                     l10505:
 10618  004278  5013               	movf	___xxtofl@val,w,c
 10619  00427A  1014               	iorwf	___xxtofl@val+1,w,c
 10620  00427C  1015               	iorwf	___xxtofl@val+2,w,c
 10621  00427E  1016               	iorwf	___xxtofl@val+3,w,c
 10622  004280  A4D8               	btfss	status,2,c
 10623  004282  D009               	goto	l10511
 10624  004284  0E00               	movlw	0
 10625  004286  6E13               	movwf	?___xxtofl,c
 10626  004288  0E00               	movlw	0
 10627  00428A  6E14               	movwf	?___xxtofl+1,c
 10628  00428C  0E00               	movlw	0
 10629  00428E  6E15               	movwf	?___xxtofl+2,c
 10630  004290  0E00               	movlw	0
 10631  004292  6E16               	movwf	?___xxtofl+3,c
 10632  004294  0012               	return	
 10633  004296                     l10511:
 10634  004296  0E96               	movlw	150
 10635  004298  6E1C               	movwf	___xxtofl@exp,c
 10636  00429A  D006               	goto	l10515
 10637  00429C                     l10513:
 10638  00429C  2A1C               	incf	___xxtofl@exp,f,c
 10639  00429E  90D8               	bcf	status,0,c
 10640  0042A0  3220               	rrcf	___xxtofl@arg+3,f,c
 10641  0042A2  321F               	rrcf	___xxtofl@arg+2,f,c
 10642  0042A4  321E               	rrcf	___xxtofl@arg+1,f,c
 10643  0042A6  321D               	rrcf	___xxtofl@arg,f,c
 10644  0042A8                     l10515:
 10645  0042A8  0E00               	movlw	0
 10646  0042AA  141D               	andwf	___xxtofl@arg,w,c
 10647  0042AC  6E17               	movwf	??___xxtofl& (0+255),c
 10648  0042AE  0E00               	movlw	0
 10649  0042B0  141E               	andwf	___xxtofl@arg+1,w,c
 10650  0042B2  6E18               	movwf	(??___xxtofl+1)& (0+255),c
 10651  0042B4  0E00               	movlw	0
 10652  0042B6  141F               	andwf	___xxtofl@arg+2,w,c
 10653  0042B8  6E19               	movwf	(??___xxtofl+2)& (0+255),c
 10654  0042BA  0EFE               	movlw	254
 10655  0042BC  1420               	andwf	___xxtofl@arg+3,w,c
 10656  0042BE  6E1A               	movwf	(??___xxtofl+3)& (0+255),c
 10657  0042C0  5017               	movf	??___xxtofl,w,c
 10658  0042C2  1018               	iorwf	??___xxtofl+1,w,c
 10659  0042C4  1019               	iorwf	??___xxtofl+2,w,c
 10660  0042C6  101A               	iorwf	??___xxtofl+3,w,c
 10661  0042C8  B4D8               	btfsc	status,2,c
 10662  0042CA  D00D               	goto	l1901
 10663  0042CC  D7E7               	goto	l10513
 10664  0042CE                     l10517:
 10665  0042CE  2A1C               	incf	___xxtofl@exp,f,c
 10666  0042D0  0E01               	movlw	1
 10667  0042D2  261D               	addwf	___xxtofl@arg,f,c
 10668  0042D4  0E00               	movlw	0
 10669  0042D6  221E               	addwfc	___xxtofl@arg+1,f,c
 10670  0042D8  221F               	addwfc	___xxtofl@arg+2,f,c
 10671  0042DA  2220               	addwfc	___xxtofl@arg+3,f,c
 10672  0042DC  90D8               	bcf	status,0,c
 10673  0042DE  3220               	rrcf	___xxtofl@arg+3,f,c
 10674  0042E0  321F               	rrcf	___xxtofl@arg+2,f,c
 10675  0042E2  321E               	rrcf	___xxtofl@arg+1,f,c
 10676  0042E4  321D               	rrcf	___xxtofl@arg,f,c
 10677  0042E6                     l1901:
 10678  0042E6  0E00               	movlw	0
 10679  0042E8  141D               	andwf	___xxtofl@arg,w,c
 10680  0042EA  6E17               	movwf	??___xxtofl& (0+255),c
 10681  0042EC  0E00               	movlw	0
 10682  0042EE  141E               	andwf	___xxtofl@arg+1,w,c
 10683  0042F0  6E18               	movwf	(??___xxtofl+1)& (0+255),c
 10684  0042F2  0E00               	movlw	0
 10685  0042F4  141F               	andwf	___xxtofl@arg+2,w,c
 10686  0042F6  6E19               	movwf	(??___xxtofl+2)& (0+255),c
 10687  0042F8  0EFF               	movlw	255
 10688  0042FA  1420               	andwf	___xxtofl@arg+3,w,c
 10689  0042FC  6E1A               	movwf	(??___xxtofl+3)& (0+255),c
 10690  0042FE  5017               	movf	??___xxtofl,w,c
 10691  004300  1018               	iorwf	??___xxtofl+1,w,c
 10692  004302  1019               	iorwf	??___xxtofl+2,w,c
 10693  004304  101A               	iorwf	??___xxtofl+3,w,c
 10694  004306  B4D8               	btfsc	status,2,c
 10695  004308  D007               	goto	l10525
 10696  00430A  D7E1               	goto	l10517
 10697  00430C                     l10523:
 10698  00430C  061C               	decf	___xxtofl@exp,f,c
 10699  00430E  90D8               	bcf	status,0,c
 10700  004310  361D               	rlcf	___xxtofl@arg,f,c
 10701  004312  361E               	rlcf	___xxtofl@arg+1,f,c
 10702  004314  361F               	rlcf	___xxtofl@arg+2,f,c
 10703  004316  3620               	rlcf	___xxtofl@arg+3,f,c
 10704  004318                     l10525:
 10705  004318  BE1F               	btfsc	___xxtofl@arg+2,7,c
 10706  00431A  D003               	goto	u13460
 10707  00431C  0E02               	movlw	2
 10708  00431E  601C               	cpfslt	___xxtofl@exp,c
 10709  004320  D7F5               	goto	l10523
 10710  004322                     u13460:
 10711  004322  A01C               	btfss	___xxtofl@exp,0,c
 10712  004324  9E1F               	bcf	___xxtofl@arg+2,7,c
 10713  004326  90D8               	bcf	status,0,c
 10714  004328  321C               	rrcf	___xxtofl@exp,f,c
 10715  00432A  C01C  F017         	movff	___xxtofl@exp,??___xxtofl
 10716  00432E  6A18               	clrf	(??___xxtofl+1)& (0+255),c
 10717  004330  6A19               	clrf	(??___xxtofl+2)& (0+255),c
 10718  004332  6A1A               	clrf	(??___xxtofl+3)& (0+255),c
 10719  004334  C017  F01A         	movff	??___xxtofl,??___xxtofl+3
 10720  004338  6A19               	clrf	??___xxtofl+2,c
 10721  00433A  6A18               	clrf	??___xxtofl+1,c
 10722  00433C  6A17               	clrf	??___xxtofl,c
 10723  00433E  5017               	movf	??___xxtofl,w,c
 10724  004340  121D               	iorwf	___xxtofl@arg,f,c
 10725  004342  5018               	movf	??___xxtofl+1,w,c
 10726  004344  121E               	iorwf	___xxtofl@arg+1,f,c
 10727  004346  5019               	movf	??___xxtofl+2,w,c
 10728  004348  121F               	iorwf	___xxtofl@arg+2,f,c
 10729  00434A  501A               	movf	??___xxtofl+3,w,c
 10730  00434C  1220               	iorwf	___xxtofl@arg+3,f,c
 10731  00434E  501B               	movf	___xxtofl@sign,w,c
 10732  004350  A4D8               	btfss	status,2,c
 10733  004352  AE16               	btfss	___xxtofl@val+3,7,c
 10734  004354  D001               	goto	l10541
 10735  004356  8E20               	bsf	___xxtofl@arg+3,7,c
 10736  004358                     l10541:
 10737  004358  C01D  F013         	movff	___xxtofl@arg,?___xxtofl
 10738  00435C  C01E  F014         	movff	___xxtofl@arg+1,?___xxtofl+1
 10739  004360  C01F  F015         	movff	___xxtofl@arg+2,?___xxtofl+2
 10740  004364  C020  F016         	movff	___xxtofl@arg+3,?___xxtofl+3
 10741  004368  0012               	return		;funcret
 10742  00436A                     __end_of___xxtofl:
 10743                           	opt callstack 0
 10744                           
 10745 ;; *************** function ___lmul *****************
 10746 ;; Defined at:
 10747 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/Umul32.c"
 10748 ;; Parameters:    Size  Location     Type
 10749 ;;  multiplier      4   18[COMRAM] unsigned long 
 10750 ;;  multiplicand    4   22[COMRAM] unsigned long 
 10751 ;; Auto vars:     Size  Location     Type
 10752 ;;  product         4   26[COMRAM] unsigned long 
 10753 ;; Return value:  Size  Location     Type
 10754 ;;                  4   18[COMRAM] unsigned long 
 10755 ;; Registers used:
 10756 ;;		wreg, status,2, status,0
 10757 ;; Tracked objects:
 10758 ;;		On entry : 0/0
 10759 ;;		On exit  : 0/0
 10760 ;;		Unchanged: 0/0
 10761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10762 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10763 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10765 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10766 ;;Total ram usage:       12 bytes
 10767 ;; Hardware stack levels used:    1
 10768 ;; Hardware stack levels required when called:    8
 10769 ;; This function calls:
 10770 ;;		Nothing
 10771 ;; This function is called by:
 10772 ;;		_strtof
 10773 ;; This function uses a non-reentrant model
 10774 ;;
 10775                           
 10776                           	psect	text42
 10777  005260                     __ptext42:
 10778                           	opt callstack 0
 10779  005260                     ___lmul:
 10780                           	opt callstack 18
 10781                           
 10782                           ;incstack = 0
 10783  005260  0E00               	movlw	0
 10784  005262  6E1B               	movwf	___lmul@product,c
 10785  005264  0E00               	movlw	0
 10786  005266  6E1C               	movwf	___lmul@product+1,c
 10787  005268  0E00               	movlw	0
 10788  00526A  6E1D               	movwf	___lmul@product+2,c
 10789  00526C  0E00               	movlw	0
 10790  00526E  6E1E               	movwf	___lmul@product+3,c
 10791  005270                     l9975:
 10792  005270  A013               	btfss	___lmul@multiplier,0,c
 10793  005272  D008               	goto	l9979
 10794  005274  5017               	movf	___lmul@multiplicand,w,c
 10795  005276  261B               	addwf	___lmul@product,f,c
 10796  005278  5018               	movf	___lmul@multiplicand+1,w,c
 10797  00527A  221C               	addwfc	___lmul@product+1,f,c
 10798  00527C  5019               	movf	___lmul@multiplicand+2,w,c
 10799  00527E  221D               	addwfc	___lmul@product+2,f,c
 10800  005280  501A               	movf	___lmul@multiplicand+3,w,c
 10801  005282  221E               	addwfc	___lmul@product+3,f,c
 10802  005284                     l9979:
 10803  005284  90D8               	bcf	status,0,c
 10804  005286  3617               	rlcf	___lmul@multiplicand,f,c
 10805  005288  3618               	rlcf	___lmul@multiplicand+1,f,c
 10806  00528A  3619               	rlcf	___lmul@multiplicand+2,f,c
 10807  00528C  361A               	rlcf	___lmul@multiplicand+3,f,c
 10808  00528E  90D8               	bcf	status,0,c
 10809  005290  3216               	rrcf	___lmul@multiplier+3,f,c
 10810  005292  3215               	rrcf	___lmul@multiplier+2,f,c
 10811  005294  3214               	rrcf	___lmul@multiplier+1,f,c
 10812  005296  3213               	rrcf	___lmul@multiplier,f,c
 10813  005298  5013               	movf	___lmul@multiplier,w,c
 10814  00529A  1014               	iorwf	___lmul@multiplier+1,w,c
 10815  00529C  1015               	iorwf	___lmul@multiplier+2,w,c
 10816  00529E  1016               	iorwf	___lmul@multiplier+3,w,c
 10817  0052A0  A4D8               	btfss	status,2,c
 10818  0052A2  D7E6               	goto	l9975
 10819  0052A4  C01B  F013         	movff	___lmul@product,?___lmul
 10820  0052A8  C01C  F014         	movff	___lmul@product+1,?___lmul+1
 10821  0052AC  C01D  F015         	movff	___lmul@product+2,?___lmul+2
 10822  0052B0  C01E  F016         	movff	___lmul@product+3,?___lmul+3
 10823  0052B4  0012               	return		;funcret
 10824  0052B6                     __end_of___lmul:
 10825                           	opt callstack 0
 10826                           
 10827 ;; *************** function ___flneg *****************
 10828 ;; Defined at:
 10829 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/flneg.c"
 10830 ;; Parameters:    Size  Location     Type
 10831 ;;  f1              4   18[COMRAM] unsigned long 
 10832 ;; Auto vars:     Size  Location     Type
 10833 ;;		None
 10834 ;; Return value:  Size  Location     Type
 10835 ;;                  4   18[COMRAM] unsigned long 
 10836 ;; Registers used:
 10837 ;;		wreg, status,2, status,0
 10838 ;; Tracked objects:
 10839 ;;		On entry : 0/0
 10840 ;;		On exit  : 0/0
 10841 ;;		Unchanged: 0/0
 10842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10843 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10846 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10847 ;;Total ram usage:        4 bytes
 10848 ;; Hardware stack levels used:    1
 10849 ;; Hardware stack levels required when called:    8
 10850 ;; This function calls:
 10851 ;;		Nothing
 10852 ;; This function is called by:
 10853 ;;		_roundf
 10854 ;;		_strtof
 10855 ;; This function uses a non-reentrant model
 10856 ;;
 10857                           
 10858                           	psect	text43
 10859  005A9E                     __ptext43:
 10860                           	opt callstack 0
 10861  005A9E                     ___flneg:
 10862                           	opt callstack 19
 10863                           
 10864                           ;incstack = 0
 10865  005A9E  5013               	movf	___flneg@f1,w,c
 10866  005AA0  1014               	iorwf	___flneg@f1+1,w,c
 10867  005AA2  1015               	iorwf	___flneg@f1+2,w,c
 10868  005AA4  1016               	iorwf	___flneg@f1+3,w,c
 10869  005AA6  B4D8               	btfsc	status,2,c
 10870  005AA8  D008               	goto	l10495
 10871  005AAA  0E00               	movlw	0
 10872  005AAC  1A13               	xorwf	___flneg@f1,f,c
 10873  005AAE  0E00               	movlw	0
 10874  005AB0  1A14               	xorwf	___flneg@f1+1,f,c
 10875  005AB2  0E00               	movlw	0
 10876  005AB4  1A15               	xorwf	___flneg@f1+2,f,c
 10877  005AB6  0E80               	movlw	128
 10878  005AB8  1A16               	xorwf	___flneg@f1+3,f,c
 10879  005ABA                     l10495:
 10880  005ABA  C013  F013         	movff	___flneg@f1,?___flneg
 10881  005ABE  C014  F014         	movff	___flneg@f1+1,?___flneg+1
 10882  005AC2  C015  F015         	movff	___flneg@f1+2,?___flneg+2
 10883  005AC6  C016  F016         	movff	___flneg@f1+3,?___flneg+3
 10884  005ACA  0012               	return		;funcret
 10885  005ACC                     __end_of___flneg:
 10886                           	opt callstack 0
 10887                           
 10888 ;; *************** function ___flmul *****************
 10889 ;; Defined at:
 10890 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
 10891 ;; Parameters:    Size  Location     Type
 10892 ;;  b               4   42[COMRAM] unsigned long 
 10893 ;;  a               4   46[COMRAM] unsigned long 
 10894 ;; Auto vars:     Size  Location     Type
 10895 ;;  prod            4    7[BANK0 ] struct .
 10896 ;;  grs             4    2[BANK0 ] unsigned long 
 10897 ;;  temp            2   11[BANK0 ] struct .
 10898 ;;  bexp            1    6[BANK0 ] unsigned char 
 10899 ;;  aexp            1    1[BANK0 ] unsigned char 
 10900 ;;  sign            1    0[BANK0 ] unsigned char 
 10901 ;; Return value:  Size  Location     Type
 10902 ;;                  4   42[COMRAM] unsigned char 
 10903 ;; Registers used:
 10904 ;;		wreg, status,2, status,0, prodl, prodh
 10905 ;; Tracked objects:
 10906 ;;		On entry : 0/0
 10907 ;;		On exit  : 0/0
 10908 ;;		Unchanged: 0/0
 10909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10910 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10911 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10912 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10913 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10914 ;;Total ram usage:       25 bytes
 10915 ;; Hardware stack levels used:    1
 10916 ;; Hardware stack levels required when called:    8
 10917 ;; This function calls:
 10918 ;;		Nothing
 10919 ;; This function is called by:
 10920 ;;		_get_pfb
 10921 ;;		_roundf
 10922 ;;		_strtof
 10923 ;; This function uses a non-reentrant model
 10924 ;;
 10925                           
 10926                           	psect	text44
 10927  002B7A                     __ptext44:
 10928                           	opt callstack 0
 10929  002B7A                     ___flmul:
 10930                           	opt callstack 19
 10931                           
 10932                           ;incstack = 0
 10933  002B7A  502E               	movf	___flmul@b+3,w,c
 10934  002B7C  0B80               	andlw	128
 10935  002B7E  0100               	movlb	0	; () banked
 10936  002B80  6F60               	movwf	___flmul@sign& (0+255),b
 10937  002B82  502E               	movf	___flmul@b+3,w,c
 10938  002B84  242E               	addwf	___flmul@b+3,w,c
 10939  002B86  6F66               	movwf	___flmul@bexp& (0+255),b
 10940                           
 10941                           ; BSR set to: 0
 10942  002B88  BE2D               	btfsc	___flmul@b+2,7,c
 10943                           
 10944                           ; BSR set to: 0
 10945  002B8A  8166               	bsf	___flmul@bexp& (0+255),0,b
 10946                           
 10947                           ; BSR set to: 0
 10948  002B8C  5166               	movf	___flmul@bexp& (0+255),w,b
 10949  002B8E  B4D8               	btfsc	status,2,c
 10950  002B90  D00D               	goto	l10337
 10951                           
 10952                           ; BSR set to: 0
 10953  002B92  2966               	incf	___flmul@bexp& (0+255),w,b
 10954  002B94  A4D8               	btfss	status,2,c
 10955  002B96  D008               	goto	l10335
 10956                           
 10957                           ; BSR set to: 0
 10958  002B98  0E00               	movlw	0
 10959  002B9A  6E2B               	movwf	___flmul@b,c
 10960  002B9C  0E00               	movlw	0
 10961  002B9E  6E2C               	movwf	___flmul@b+1,c
 10962  002BA0  0E00               	movlw	0
 10963  002BA2  6E2D               	movwf	___flmul@b+2,c
 10964  002BA4  0E00               	movlw	0
 10965  002BA6  6E2E               	movwf	___flmul@b+3,c
 10966  002BA8                     l10335:
 10967                           
 10968                           ; BSR set to: 0
 10969  002BA8  8E2D               	bsf	___flmul@b+2,7,c
 10970  002BAA  D008               	goto	l10339
 10971  002BAC                     l10337:
 10972                           
 10973                           ; BSR set to: 0
 10974  002BAC  0E00               	movlw	0
 10975  002BAE  6E2B               	movwf	___flmul@b,c
 10976  002BB0  0E00               	movlw	0
 10977  002BB2  6E2C               	movwf	___flmul@b+1,c
 10978  002BB4  0E00               	movlw	0
 10979  002BB6  6E2D               	movwf	___flmul@b+2,c
 10980  002BB8  0E00               	movlw	0
 10981  002BBA  6E2E               	movwf	___flmul@b+3,c
 10982  002BBC                     l10339:
 10983                           
 10984                           ; BSR set to: 0
 10985  002BBC  5032               	movf	___flmul@a+3,w,c
 10986  002BBE  0B80               	andlw	128
 10987  002BC0  1B60               	xorwf	___flmul@sign& (0+255),f,b
 10988                           
 10989                           ; BSR set to: 0
 10990  002BC2  5032               	movf	___flmul@a+3,w,c
 10991  002BC4  2432               	addwf	___flmul@a+3,w,c
 10992  002BC6  6F61               	movwf	___flmul@aexp& (0+255),b
 10993                           
 10994                           ; BSR set to: 0
 10995  002BC8  BE31               	btfsc	___flmul@a+2,7,c
 10996                           
 10997                           ; BSR set to: 0
 10998  002BCA  8161               	bsf	___flmul@aexp& (0+255),0,b
 10999                           
 11000                           ; BSR set to: 0
 11001  002BCC  5161               	movf	___flmul@aexp& (0+255),w,b
 11002  002BCE  B4D8               	btfsc	status,2,c
 11003  002BD0  D00D               	goto	l10355
 11004                           
 11005                           ; BSR set to: 0
 11006  002BD2  2961               	incf	___flmul@aexp& (0+255),w,b
 11007  002BD4  A4D8               	btfss	status,2,c
 11008  002BD6  D008               	goto	l10353
 11009                           
 11010                           ; BSR set to: 0
 11011  002BD8  0E00               	movlw	0
 11012  002BDA  6E2F               	movwf	___flmul@a,c
 11013  002BDC  0E00               	movlw	0
 11014  002BDE  6E30               	movwf	___flmul@a+1,c
 11015  002BE0  0E00               	movlw	0
 11016  002BE2  6E31               	movwf	___flmul@a+2,c
 11017  002BE4  0E00               	movlw	0
 11018  002BE6  6E32               	movwf	___flmul@a+3,c
 11019  002BE8                     l10353:
 11020                           
 11021                           ; BSR set to: 0
 11022  002BE8  8E31               	bsf	___flmul@a+2,7,c
 11023  002BEA  D008               	goto	l1853
 11024  002BEC                     l10355:
 11025                           
 11026                           ; BSR set to: 0
 11027  002BEC  0E00               	movlw	0
 11028  002BEE  6E2F               	movwf	___flmul@a,c
 11029  002BF0  0E00               	movlw	0
 11030  002BF2  6E30               	movwf	___flmul@a+1,c
 11031  002BF4  0E00               	movlw	0
 11032  002BF6  6E31               	movwf	___flmul@a+2,c
 11033  002BF8  0E00               	movlw	0
 11034  002BFA  6E32               	movwf	___flmul@a+3,c
 11035  002BFC                     l1853:
 11036                           
 11037                           ; BSR set to: 0
 11038  002BFC  5161               	movf	___flmul@aexp& (0+255),w,b
 11039  002BFE  B4D8               	btfsc	status,2,c
 11040  002C00  D003               	goto	u13190
 11041                           
 11042                           ; BSR set to: 0
 11043  002C02  5166               	movf	___flmul@bexp& (0+255),w,b
 11044  002C04  A4D8               	btfss	status,2,c
 11045  002C06  D009               	goto	l10363
 11046  002C08                     u13190:
 11047                           
 11048                           ; BSR set to: 0
 11049  002C08  0E00               	movlw	0
 11050  002C0A  6E2B               	movwf	?___flmul,c
 11051  002C0C  0E00               	movlw	0
 11052  002C0E  6E2C               	movwf	?___flmul+1,c
 11053  002C10  0E00               	movlw	0
 11054  002C12  6E2D               	movwf	?___flmul+2,c
 11055  002C14  0E00               	movlw	0
 11056  002C16  6E2E               	movwf	?___flmul+3,c
 11057  002C18  0012               	return	
 11058  002C1A                     l10363:
 11059                           
 11060                           ; BSR set to: 0
 11061  002C1A  5031               	movf	___flmul@a+2,w,c
 11062  002C1C  022B               	mulwf	___flmul@b,c
 11063  002C1E  CFF3 F06B          	movff	prodl,___flmul@temp
 11064  002C22  CFF4 F06C          	movff	prodh,___flmul@temp+1
 11065                           
 11066                           ; BSR set to: 0
 11067  002C26  516B               	movf	___flmul@temp& (0+255),w,b
 11068  002C28  6F62               	movwf	___flmul@grs& (0+255),b
 11069  002C2A  6B63               	clrf	(___flmul@grs+1)& (0+255),b
 11070  002C2C  6B64               	clrf	(___flmul@grs+2)& (0+255),b
 11071  002C2E  6B65               	clrf	(___flmul@grs+3)& (0+255),b
 11072                           
 11073                           ; BSR set to: 0
 11074  002C30  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 11075  002C32  6F67               	movwf	___flmul@prod& (0+255),b
 11076  002C34  6B68               	clrf	(___flmul@prod+1)& (0+255),b
 11077  002C36  6B69               	clrf	(___flmul@prod+2)& (0+255),b
 11078  002C38  6B6A               	clrf	(___flmul@prod+3)& (0+255),b
 11079  002C3A  5030               	movf	___flmul@a+1,w,c
 11080  002C3C  022C               	mulwf	___flmul@b+1,c
 11081  002C3E  CFF3 F06B          	movff	prodl,___flmul@temp
 11082  002C42  CFF4 F06C          	movff	prodh,___flmul@temp+1
 11083                           
 11084                           ; BSR set to: 0
 11085  002C46  516B               	movf	___flmul@temp& (0+255),w,b
 11086  002C48  2762               	addwf	___flmul@grs& (0+255),f,b
 11087  002C4A  0E00               	movlw	0
 11088  002C4C  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 11089  002C4E  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 11090  002C50  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 11091                           
 11092                           ; BSR set to: 0
 11093  002C52  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 11094  002C54  2767               	addwf	___flmul@prod& (0+255),f,b
 11095  002C56  0E00               	movlw	0
 11096  002C58  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11097  002C5A  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11098  002C5C  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11099  002C5E  502F               	movf	___flmul@a,w,c
 11100  002C60  022D               	mulwf	___flmul@b+2,c
 11101  002C62  CFF3 F06B          	movff	prodl,___flmul@temp
 11102  002C66  CFF4 F06C          	movff	prodh,___flmul@temp+1
 11103                           
 11104                           ; BSR set to: 0
 11105  002C6A  516B               	movf	___flmul@temp& (0+255),w,b
 11106  002C6C  2762               	addwf	___flmul@grs& (0+255),f,b
 11107  002C6E  0E00               	movlw	0
 11108  002C70  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 11109  002C72  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 11110  002C74  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 11111                           
 11112                           ; BSR set to: 0
 11113  002C76  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 11114  002C78  2767               	addwf	___flmul@prod& (0+255),f,b
 11115  002C7A  0E00               	movlw	0
 11116  002C7C  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11117  002C7E  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11118  002C80  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11119                           
 11120                           ; BSR set to: 0
 11121  002C82  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 11122  002C86  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 11123  002C8A  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 11124  002C8E  6B62               	clrf	___flmul@grs& (0+255),b
 11125                           
 11126                           ; BSR set to: 0
 11127  002C90  502F               	movf	___flmul@a,w,c
 11128  002C92  022C               	mulwf	___flmul@b+1,c
 11129  002C94  CFF3 F06B          	movff	prodl,___flmul@temp
 11130  002C98  CFF4 F06C          	movff	prodh,___flmul@temp+1
 11131                           
 11132                           ; BSR set to: 0
 11133  002C9C  516B               	movf	___flmul@temp& (0+255),w,b
 11134  002C9E  2762               	addwf	___flmul@grs& (0+255),f,b
 11135  002CA0  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 11136  002CA2  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 11137  002CA4  0E00               	movlw	0
 11138  002CA6  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 11139  002CA8  0E00               	movlw	0
 11140  002CAA  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 11141                           
 11142                           ; BSR set to: 0
 11143  002CAC  5030               	movf	___flmul@a+1,w,c
 11144  002CAE  022B               	mulwf	___flmul@b,c
 11145  002CB0  CFF3 F06B          	movff	prodl,___flmul@temp
 11146  002CB4  CFF4 F06C          	movff	prodh,___flmul@temp+1
 11147                           
 11148                           ; BSR set to: 0
 11149  002CB8  516B               	movf	___flmul@temp& (0+255),w,b
 11150  002CBA  2762               	addwf	___flmul@grs& (0+255),f,b
 11151  002CBC  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 11152  002CBE  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 11153  002CC0  0E00               	movlw	0
 11154  002CC2  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 11155  002CC4  0E00               	movlw	0
 11156  002CC6  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 11157                           
 11158                           ; BSR set to: 0
 11159  002CC8  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 11160  002CCC  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 11161  002CD0  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 11162  002CD4  6B62               	clrf	___flmul@grs& (0+255),b
 11163  002CD6  502F               	movf	___flmul@a,w,c
 11164  002CD8  022B               	mulwf	___flmul@b,c
 11165  002CDA  CFF3 F06B          	movff	prodl,___flmul@temp
 11166  002CDE  CFF4 F06C          	movff	prodh,___flmul@temp+1
 11167                           
 11168                           ; BSR set to: 0
 11169  002CE2  516B               	movf	___flmul@temp& (0+255),w,b
 11170  002CE4  2762               	addwf	___flmul@grs& (0+255),f,b
 11171  002CE6  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 11172  002CE8  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 11173  002CEA  0E00               	movlw	0
 11174  002CEC  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 11175  002CEE  0E00               	movlw	0
 11176  002CF0  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 11177                           
 11178                           ; BSR set to: 0
 11179  002CF2  5031               	movf	___flmul@a+2,w,c
 11180  002CF4  022C               	mulwf	___flmul@b+1,c
 11181  002CF6  CFF3 F06B          	movff	prodl,___flmul@temp
 11182  002CFA  CFF4 F06C          	movff	prodh,___flmul@temp+1
 11183  002CFE  516B               	movf	___flmul@temp& (0+255),w,b
 11184  002D00  2767               	addwf	___flmul@prod& (0+255),f,b
 11185  002D02  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 11186  002D04  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11187  002D06  0E00               	movlw	0
 11188  002D08  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11189  002D0A  0E00               	movlw	0
 11190  002D0C  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11191                           
 11192                           ; BSR set to: 0
 11193  002D0E  5030               	movf	___flmul@a+1,w,c
 11194  002D10  022D               	mulwf	___flmul@b+2,c
 11195  002D12  CFF3 F06B          	movff	prodl,___flmul@temp
 11196  002D16  CFF4 F06C          	movff	prodh,___flmul@temp+1
 11197                           
 11198                           ; BSR set to: 0
 11199  002D1A  516B               	movf	___flmul@temp& (0+255),w,b
 11200  002D1C  2767               	addwf	___flmul@prod& (0+255),f,b
 11201  002D1E  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 11202  002D20  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11203  002D22  0E00               	movlw	0
 11204  002D24  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11205  002D26  0E00               	movlw	0
 11206  002D28  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11207  002D2A  5031               	movf	___flmul@a+2,w,c
 11208  002D2C  022D               	mulwf	___flmul@b+2,c
 11209  002D2E  CFF3 F06B          	movff	prodl,___flmul@temp
 11210  002D32  CFF4 F06C          	movff	prodh,___flmul@temp+1
 11211                           
 11212                           ; BSR set to: 0
 11213  002D36  516B               	movf	___flmul@temp& (0+255),w,b
 11214  002D38  6E33               	movwf	??___flmul& (0+255),c
 11215  002D3A  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 11216  002D3C  6E34               	movwf	(??___flmul+1)& (0+255),c
 11217  002D3E  6A35               	clrf	(??___flmul+2)& (0+255),c
 11218  002D40  6A36               	clrf	(??___flmul+3)& (0+255),c
 11219  002D42  C035  F036         	movff	??___flmul+2,??___flmul+3
 11220  002D46  C034  F035         	movff	??___flmul+1,??___flmul+2
 11221  002D4A  C033  F034         	movff	??___flmul,??___flmul+1
 11222  002D4E  6A33               	clrf	??___flmul,c
 11223  002D50  5033               	movf	??___flmul,w,c
 11224  002D52  2767               	addwf	___flmul@prod& (0+255),f,b
 11225  002D54  5034               	movf	??___flmul+1,w,c
 11226  002D56  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11227  002D58  5035               	movf	??___flmul+2,w,c
 11228  002D5A  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11229  002D5C  5036               	movf	??___flmul+3,w,c
 11230  002D5E  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11231                           
 11232                           ; BSR set to: 0
 11233  002D60  C062  F033         	movff	___flmul@grs,??___flmul
 11234  002D64  C063  F034         	movff	___flmul@grs+1,??___flmul+1
 11235  002D68  C064  F035         	movff	___flmul@grs+2,??___flmul+2
 11236  002D6C  C065  F036         	movff	___flmul@grs+3,??___flmul+3
 11237  002D70  0E19               	movlw	25
 11238  002D72  D005               	goto	u13200
 11239  002D74                     u13205:
 11240  002D74  90D8               	bcf	status,0,c
 11241  002D76  3236               	rrcf	??___flmul+3,f,c
 11242  002D78  3235               	rrcf	??___flmul+2,f,c
 11243  002D7A  3234               	rrcf	??___flmul+1,f,c
 11244  002D7C  3233               	rrcf	??___flmul,f,c
 11245  002D7E                     u13200:
 11246  002D7E  2EE8               	decfsz	wreg,f,c
 11247  002D80  D7F9               	goto	u13205
 11248  002D82  5033               	movf	??___flmul,w,c
 11249  002D84  2767               	addwf	___flmul@prod& (0+255),f,b
 11250  002D86  5034               	movf	??___flmul+1,w,c
 11251  002D88  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11252  002D8A  5035               	movf	??___flmul+2,w,c
 11253  002D8C  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11254  002D8E  5036               	movf	??___flmul+3,w,c
 11255  002D90  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11256                           
 11257                           ; BSR set to: 0
 11258  002D92  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 11259  002D96  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 11260  002D9A  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 11261  002D9E  6B62               	clrf	___flmul@grs& (0+255),b
 11262                           
 11263                           ; BSR set to: 0
 11264  002DA0  5161               	movf	___flmul@aexp& (0+255),w,b
 11265  002DA2  C066  F033         	movff	___flmul@bexp,??___flmul
 11266  002DA6  6A34               	clrf	(??___flmul+1)& (0+255),c
 11267  002DA8  2633               	addwf	??___flmul,f,c
 11268  002DAA  0E00               	movlw	0
 11269  002DAC  2234               	addwfc	??___flmul+1,f,c
 11270  002DAE  0E82               	movlw	130
 11271  002DB0  2433               	addwf	??___flmul,w,c
 11272  002DB2  6F6B               	movwf	___flmul@temp& (0+255),b
 11273  002DB4  0EFF               	movlw	255
 11274  002DB6  2034               	addwfc	??___flmul+1,w,c
 11275  002DB8  6F6C               	movwf	(___flmul@temp+1)& (0+255),b
 11276  002DBA  D00F               	goto	l10411
 11277  002DBC                     l10405:
 11278                           
 11279                           ; BSR set to: 0
 11280  002DBC  90D8               	bcf	status,0,c
 11281  002DBE  3767               	rlcf	___flmul@prod& (0+255),f,b
 11282  002DC0  3768               	rlcf	(___flmul@prod+1)& (0+255),f,b
 11283  002DC2  3769               	rlcf	(___flmul@prod+2)& (0+255),f,b
 11284  002DC4  376A               	rlcf	(___flmul@prod+3)& (0+255),f,b
 11285                           
 11286                           ; BSR set to: 0
 11287  002DC6  BF65               	btfsc	(___flmul@grs+3)& (0+255),7,b
 11288                           
 11289                           ; BSR set to: 0
 11290  002DC8  8167               	bsf	___flmul@prod& (0+255),0,b
 11291                           
 11292                           ; BSR set to: 0
 11293  002DCA  90D8               	bcf	status,0,c
 11294  002DCC  3762               	rlcf	___flmul@grs& (0+255),f,b
 11295  002DCE  3763               	rlcf	(___flmul@grs+1)& (0+255),f,b
 11296  002DD0  3764               	rlcf	(___flmul@grs+2)& (0+255),f,b
 11297  002DD2  3765               	rlcf	(___flmul@grs+3)& (0+255),f,b
 11298  002DD4  076B               	decf	___flmul@temp& (0+255),f,b
 11299  002DD6  A0D8               	btfss	status,0,c
 11300  002DD8  076C               	decf	(___flmul@temp+1)& (0+255),f,b
 11301  002DDA                     l10411:
 11302                           
 11303                           ; BSR set to: 0
 11304  002DDA  AF69               	btfss	(___flmul@prod+2)& (0+255),7,b
 11305  002DDC  D7EF               	goto	l10405
 11306                           
 11307                           ; BSR set to: 0
 11308  002DDE  0E00               	movlw	0
 11309  002DE0  6F61               	movwf	___flmul@aexp& (0+255),b
 11310                           
 11311                           ; BSR set to: 0
 11312  002DE2  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
 11313  002DE4  D017               	goto	l1862
 11314                           
 11315                           ; BSR set to: 0
 11316  002DE6  0EFF               	movlw	255
 11317  002DE8  1562               	andwf	___flmul@grs& (0+255),w,b
 11318  002DEA  6E33               	movwf	??___flmul& (0+255),c
 11319  002DEC  0EFF               	movlw	255
 11320  002DEE  1563               	andwf	(___flmul@grs+1)& (0+255),w,b
 11321  002DF0  6E34               	movwf	(??___flmul+1)& (0+255),c
 11322  002DF2  0EFF               	movlw	255
 11323  002DF4  1564               	andwf	(___flmul@grs+2)& (0+255),w,b
 11324  002DF6  6E35               	movwf	(??___flmul+2)& (0+255),c
 11325  002DF8  0E7F               	movlw	127
 11326  002DFA  1565               	andwf	(___flmul@grs+3)& (0+255),w,b
 11327  002DFC  6E36               	movwf	(??___flmul+3)& (0+255),c
 11328  002DFE  5033               	movf	??___flmul,w,c
 11329  002E00  1034               	iorwf	??___flmul+1,w,c
 11330  002E02  1035               	iorwf	??___flmul+2,w,c
 11331  002E04  1036               	iorwf	??___flmul+3,w,c
 11332  002E06  B4D8               	btfsc	status,2,c
 11333  002E08  D003               	goto	l1863
 11334  002E0A                     u13240:
 11335                           
 11336                           ; BSR set to: 0
 11337  002E0A  0E01               	movlw	1
 11338  002E0C  6F61               	movwf	___flmul@aexp& (0+255),b
 11339  002E0E  D002               	goto	l1862
 11340  002E10                     l1863:
 11341                           
 11342                           ; BSR set to: 0
 11343  002E10  B167               	btfsc	___flmul@prod& (0+255),0,b
 11344  002E12  D7FB               	goto	u13240
 11345  002E14                     l1862:
 11346                           
 11347                           ; BSR set to: 0
 11348  002E14  5161               	movf	___flmul@aexp& (0+255),w,b
 11349  002E16  B4D8               	btfsc	status,2,c
 11350  002E18  D01F               	goto	l10431
 11351                           
 11352                           ; BSR set to: 0
 11353  002E1A  0E01               	movlw	1
 11354  002E1C  2767               	addwf	___flmul@prod& (0+255),f,b
 11355  002E1E  0E00               	movlw	0
 11356  002E20  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11357  002E22  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11358  002E24  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11359                           
 11360                           ; BSR set to: 0
 11361  002E26  A16A               	btfss	(___flmul@prod+3)& (0+255),0,b
 11362  002E28  D017               	goto	l10431
 11363                           
 11364                           ; BSR set to: 0
 11365  002E2A  C067  F033         	movff	___flmul@prod,??___flmul
 11366  002E2E  C068  F034         	movff	___flmul@prod+1,??___flmul+1
 11367  002E32  C069  F035         	movff	___flmul@prod+2,??___flmul+2
 11368  002E36  C06A  F036         	movff	___flmul@prod+3,??___flmul+3
 11369  002E3A  3436               	rlcf	??___flmul+3,w,c
 11370  002E3C  3236               	rrcf	??___flmul+3,f,c
 11371  002E3E  3235               	rrcf	??___flmul+2,f,c
 11372  002E40  3234               	rrcf	??___flmul+1,f,c
 11373  002E42  3233               	rrcf	??___flmul,f,c
 11374  002E44  C033  F067         	movff	??___flmul,___flmul@prod
 11375  002E48  C034  F068         	movff	??___flmul+1,___flmul@prod+1
 11376  002E4C  C035  F069         	movff	??___flmul+2,___flmul@prod+2
 11377  002E50  C036  F06A         	movff	??___flmul+3,___flmul@prod+3
 11378                           
 11379                           ; BSR set to: 0
 11380  002E54  4B6B               	infsnz	___flmul@temp& (0+255),f,b
 11381  002E56  2B6C               	incf	(___flmul@temp+1)& (0+255),f,b
 11382  002E58                     l10431:
 11383                           
 11384                           ; BSR set to: 0
 11385  002E58  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 11386  002E5A  D00D               	goto	l10435
 11387  002E5C  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 11388  002E5E  E103               	bnz	u13280
 11389  002E60  296B               	incf	___flmul@temp& (0+255),w,b
 11390  002E62  A0D8               	btfss	status,0,c
 11391  002E64  D008               	goto	l10435
 11392  002E66                     u13280:
 11393                           
 11394                           ; BSR set to: 0
 11395  002E66  0E00               	movlw	0
 11396  002E68  6F67               	movwf	___flmul@prod& (0+255),b
 11397  002E6A  0E00               	movlw	0
 11398  002E6C  6F68               	movwf	(___flmul@prod+1)& (0+255),b
 11399  002E6E  0E80               	movlw	128
 11400  002E70  6F69               	movwf	(___flmul@prod+2)& (0+255),b
 11401  002E72  0E7F               	movlw	127
 11402  002E74  D020               	goto	L11
 11403  002E76                     l10435:
 11404                           
 11405                           ; BSR set to: 0
 11406  002E76  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 11407  002E78  D005               	goto	u13290
 11408  002E7A  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 11409  002E7C  E10E               	bnz	l1870
 11410  002E7E  056B               	decf	___flmul@temp& (0+255),w,b
 11411  002E80  B0D8               	btfsc	status,0,c
 11412  002E82  D00B               	goto	l1870
 11413  002E84                     u13290:
 11414                           
 11415                           ; BSR set to: 0
 11416  002E84  0E00               	movlw	0
 11417  002E86  6F67               	movwf	___flmul@prod& (0+255),b
 11418  002E88  0E00               	movlw	0
 11419  002E8A  6F68               	movwf	(___flmul@prod+1)& (0+255),b
 11420  002E8C  0E00               	movlw	0
 11421  002E8E  6F69               	movwf	(___flmul@prod+2)& (0+255),b
 11422  002E90  0E00               	movlw	0
 11423  002E92  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 11424  002E94  0E00               	movlw	0
 11425  002E96  6F60               	movwf	___flmul@sign& (0+255),b
 11426  002E98  D00F               	goto	l10447
 11427  002E9A                     l1870:
 11428                           
 11429                           ; BSR set to: 0
 11430  002E9A  C06B  F066         	movff	___flmul@temp,___flmul@bexp
 11431                           
 11432                           ; BSR set to: 0
 11433  002E9E  0EFF               	movlw	255
 11434  002EA0  1767               	andwf	___flmul@prod& (0+255),f,b
 11435  002EA2  0EFF               	movlw	255
 11436  002EA4  1768               	andwf	(___flmul@prod+1)& (0+255),f,b
 11437  002EA6  0E7F               	movlw	127
 11438  002EA8  1769               	andwf	(___flmul@prod+2)& (0+255),f,b
 11439  002EAA  0E00               	movlw	0
 11440  002EAC  176A               	andwf	(___flmul@prod+3)& (0+255),f,b
 11441                           
 11442                           ; BSR set to: 0
 11443  002EAE  B166               	btfsc	___flmul@bexp& (0+255),0,b
 11444                           
 11445                           ; BSR set to: 0
 11446  002EB0  8F69               	bsf	(___flmul@prod+2)& (0+255),7,b
 11447                           
 11448                           ; BSR set to: 0
 11449  002EB2  90D8               	bcf	status,0,c
 11450  002EB4  3166               	rrcf	___flmul@bexp& (0+255),w,b
 11451  002EB6                     L11:
 11452  002EB6  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 11453  002EB8                     l10447:
 11454                           
 11455                           ; BSR set to: 0
 11456  002EB8  5160               	movf	___flmul@sign& (0+255),w,b
 11457  002EBA  136A               	iorwf	(___flmul@prod+3)& (0+255),f,b
 11458                           
 11459                           ; BSR set to: 0
 11460  002EBC  C067  F02B         	movff	___flmul@prod,?___flmul
 11461  002EC0  C068  F02C         	movff	___flmul@prod+1,?___flmul+1
 11462  002EC4  C069  F02D         	movff	___flmul@prod+2,?___flmul+2
 11463  002EC8  C06A  F02E         	movff	___flmul@prod+3,?___flmul+3
 11464                           
 11465                           ; BSR set to: 0
 11466  002ECC  0012               	return		;funcret
 11467  002ECE                     __end_of___flmul:
 11468                           	opt callstack 0
 11469                           
 11470 ;; *************** function ___flge *****************
 11471 ;; Defined at:
 11472 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/flge.c"
 11473 ;; Parameters:    Size  Location     Type
 11474 ;;  ff1             4   18[COMRAM] unsigned char 
 11475 ;;  ff2             4   22[COMRAM] unsigned char 
 11476 ;; Auto vars:     Size  Location     Type
 11477 ;;		None
 11478 ;; Return value:  Size  Location     Type
 11479 ;;		None               void
 11480 ;; Registers used:
 11481 ;;		wreg, status,2, status,0
 11482 ;; Tracked objects:
 11483 ;;		On entry : 0/0
 11484 ;;		On exit  : 0/0
 11485 ;;		Unchanged: 0/0
 11486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11487 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11489 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11490 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11491 ;;Total ram usage:       12 bytes
 11492 ;; Hardware stack levels used:    1
 11493 ;; Hardware stack levels required when called:    8
 11494 ;; This function calls:
 11495 ;;		Nothing
 11496 ;; This function is called by:
 11497 ;;		_roundf
 11498 ;;		_strtof
 11499 ;; This function uses a non-reentrant model
 11500 ;;
 11501                           
 11502                           	psect	text45
 11503  004AC2                     __ptext45:
 11504                           	opt callstack 0
 11505  004AC2                     ___flge:
 11506                           	opt callstack 19
 11507                           
 11508                           ; BSR set to: 0
 11509                           ;incstack = 0
 11510  004AC2  0E00               	movlw	0
 11511  004AC4  1413               	andwf	___flge@ff1,w,c
 11512  004AC6  6E1B               	movwf	??___flge& (0+255),c
 11513  004AC8  0E00               	movlw	0
 11514  004ACA  1414               	andwf	___flge@ff1+1,w,c
 11515  004ACC  6E1C               	movwf	(??___flge+1)& (0+255),c
 11516  004ACE  0E80               	movlw	128
 11517  004AD0  1415               	andwf	___flge@ff1+2,w,c
 11518  004AD2  6E1D               	movwf	(??___flge+2)& (0+255),c
 11519  004AD4  0E7F               	movlw	127
 11520  004AD6  1416               	andwf	___flge@ff1+3,w,c
 11521  004AD8  6E1E               	movwf	(??___flge+3)& (0+255),c
 11522  004ADA  501B               	movf	??___flge,w,c
 11523  004ADC  101C               	iorwf	??___flge+1,w,c
 11524  004ADE  101D               	iorwf	??___flge+2,w,c
 11525  004AE0  101E               	iorwf	??___flge+3,w,c
 11526  004AE2  A4D8               	btfss	status,2,c
 11527  004AE4  D008               	goto	l10473
 11528  004AE6  0E00               	movlw	0
 11529  004AE8  6E13               	movwf	___flge@ff1,c
 11530  004AEA  0E00               	movlw	0
 11531  004AEC  6E14               	movwf	___flge@ff1+1,c
 11532  004AEE  0E00               	movlw	0
 11533  004AF0  6E15               	movwf	___flge@ff1+2,c
 11534  004AF2  0E00               	movlw	0
 11535  004AF4  6E16               	movwf	___flge@ff1+3,c
 11536  004AF6                     l10473:
 11537  004AF6  0E00               	movlw	0
 11538  004AF8  1417               	andwf	___flge@ff2,w,c
 11539  004AFA  6E1B               	movwf	??___flge& (0+255),c
 11540  004AFC  0E00               	movlw	0
 11541  004AFE  1418               	andwf	___flge@ff2+1,w,c
 11542  004B00  6E1C               	movwf	(??___flge+1)& (0+255),c
 11543  004B02  0E80               	movlw	128
 11544  004B04  1419               	andwf	___flge@ff2+2,w,c
 11545  004B06  6E1D               	movwf	(??___flge+2)& (0+255),c
 11546  004B08  0E7F               	movlw	127
 11547  004B0A  141A               	andwf	___flge@ff2+3,w,c
 11548  004B0C  6E1E               	movwf	(??___flge+3)& (0+255),c
 11549  004B0E  501B               	movf	??___flge,w,c
 11550  004B10  101C               	iorwf	??___flge+1,w,c
 11551  004B12  101D               	iorwf	??___flge+2,w,c
 11552  004B14  101E               	iorwf	??___flge+3,w,c
 11553  004B16  A4D8               	btfss	status,2,c
 11554  004B18  D008               	goto	l10477
 11555  004B1A  0E00               	movlw	0
 11556  004B1C  6E17               	movwf	___flge@ff2,c
 11557  004B1E  0E00               	movlw	0
 11558  004B20  6E18               	movwf	___flge@ff2+1,c
 11559  004B22  0E00               	movlw	0
 11560  004B24  6E19               	movwf	___flge@ff2+2,c
 11561  004B26  0E00               	movlw	0
 11562  004B28  6E1A               	movwf	___flge@ff2+3,c
 11563  004B2A                     l10477:
 11564  004B2A  AE16               	btfss	___flge@ff1+3,7,c
 11565  004B2C  D009               	goto	l10481
 11566  004B2E  6C13               	negf	___flge@ff1,c
 11567  004B30  1E14               	comf	___flge@ff1+1,f,c
 11568  004B32  B0D8               	btfsc	status,0,c
 11569  004B34  2A14               	incf	___flge@ff1+1,f,c
 11570  004B36  1E15               	comf	___flge@ff1+2,f,c
 11571  004B38  B0D8               	btfsc	status,0,c
 11572  004B3A  2A15               	incf	___flge@ff1+2,f,c
 11573  004B3C  0E80               	movlw	128
 11574  004B3E  5616               	subfwb	___flge@ff1+3,f,c
 11575  004B40                     l10481:
 11576  004B40  AE1A               	btfss	___flge@ff2+3,7,c
 11577  004B42  D009               	goto	l1504
 11578  004B44  6C17               	negf	___flge@ff2,c
 11579  004B46  1E18               	comf	___flge@ff2+1,f,c
 11580  004B48  B0D8               	btfsc	status,0,c
 11581  004B4A  2A18               	incf	___flge@ff2+1,f,c
 11582  004B4C  1E19               	comf	___flge@ff2+2,f,c
 11583  004B4E  B0D8               	btfsc	status,0,c
 11584  004B50  2A19               	incf	___flge@ff2+2,f,c
 11585  004B52  0E80               	movlw	128
 11586  004B54  561A               	subfwb	___flge@ff2+3,f,c
 11587  004B56                     l1504:
 11588  004B56  0E00               	movlw	0
 11589  004B58  1A13               	xorwf	___flge@ff1,f,c
 11590  004B5A  0E00               	movlw	0
 11591  004B5C  1A14               	xorwf	___flge@ff1+1,f,c
 11592  004B5E  0E00               	movlw	0
 11593  004B60  1A15               	xorwf	___flge@ff1+2,f,c
 11594  004B62  0E80               	movlw	128
 11595  004B64  1A16               	xorwf	___flge@ff1+3,f,c
 11596  004B66  0E00               	movlw	0
 11597  004B68  1A17               	xorwf	___flge@ff2,f,c
 11598  004B6A  0E00               	movlw	0
 11599  004B6C  1A18               	xorwf	___flge@ff2+1,f,c
 11600  004B6E  0E00               	movlw	0
 11601  004B70  1A19               	xorwf	___flge@ff2+2,f,c
 11602  004B72  0E80               	movlw	128
 11603  004B74  1A1A               	xorwf	___flge@ff2+3,f,c
 11604  004B76  5017               	movf	___flge@ff2,w,c
 11605  004B78  5C13               	subwf	___flge@ff1,w,c
 11606  004B7A  5018               	movf	___flge@ff2+1,w,c
 11607  004B7C  5814               	subwfb	___flge@ff1+1,w,c
 11608  004B7E  5019               	movf	___flge@ff2+2,w,c
 11609  004B80  5815               	subwfb	___flge@ff1+2,w,c
 11610  004B82  501A               	movf	___flge@ff2+3,w,c
 11611  004B84  5816               	subwfb	___flge@ff1+3,w,c
 11612  004B86  B0D8               	btfsc	status,0,c
 11613  004B88  D002               	goto	l10487
 11614  004B8A  90D8               	bcf	status,0,c
 11615  004B8C  0012               	return	
 11616  004B8E                     l10487:
 11617  004B8E  80D8               	bsf	status,0,c
 11618  004B90  0012               	return		;funcret
 11619  004B92                     __end_of___flge:
 11620                           	opt callstack 0
 11621                           
 11622 ;; *************** function ___fleq *****************
 11623 ;; Defined at:
 11624 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/fleq.c"
 11625 ;; Parameters:    Size  Location     Type
 11626 ;;  ff1             4   18[COMRAM] unsigned char 
 11627 ;;  ff2             4   22[COMRAM] unsigned char 
 11628 ;; Auto vars:     Size  Location     Type
 11629 ;;		None
 11630 ;; Return value:  Size  Location     Type
 11631 ;;		None               void
 11632 ;; Registers used:
 11633 ;;		wreg, status,2, status,0
 11634 ;; Tracked objects:
 11635 ;;		On entry : 0/0
 11636 ;;		On exit  : 0/0
 11637 ;;		Unchanged: 0/0
 11638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11639 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11641 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11642 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11643 ;;Total ram usage:       12 bytes
 11644 ;; Hardware stack levels used:    1
 11645 ;; Hardware stack levels required when called:    8
 11646 ;; This function calls:
 11647 ;;		Nothing
 11648 ;; This function is called by:
 11649 ;;		_strtof
 11650 ;; This function uses a non-reentrant model
 11651 ;;
 11652                           
 11653                           	psect	text46
 11654  005048                     __ptext46:
 11655                           	opt callstack 0
 11656  005048                     ___fleq:
 11657                           	opt callstack 18
 11658                           
 11659                           ;incstack = 0
 11660  005048  0E00               	movlw	0
 11661  00504A  1413               	andwf	___fleq@ff1,w,c
 11662  00504C  6E1B               	movwf	??___fleq& (0+255),c
 11663  00504E  0E00               	movlw	0
 11664  005050  1414               	andwf	___fleq@ff1+1,w,c
 11665  005052  6E1C               	movwf	(??___fleq+1)& (0+255),c
 11666  005054  0E80               	movlw	128
 11667  005056  1415               	andwf	___fleq@ff1+2,w,c
 11668  005058  6E1D               	movwf	(??___fleq+2)& (0+255),c
 11669  00505A  0E7F               	movlw	127
 11670  00505C  1416               	andwf	___fleq@ff1+3,w,c
 11671  00505E  6E1E               	movwf	(??___fleq+3)& (0+255),c
 11672  005060  501B               	movf	??___fleq,w,c
 11673  005062  101C               	iorwf	??___fleq+1,w,c
 11674  005064  101D               	iorwf	??___fleq+2,w,c
 11675  005066  101E               	iorwf	??___fleq+3,w,c
 11676  005068  A4D8               	btfss	status,2,c
 11677  00506A  D008               	goto	l10457
 11678  00506C  0E00               	movlw	0
 11679  00506E  6E13               	movwf	___fleq@ff1,c
 11680  005070  0E00               	movlw	0
 11681  005072  6E14               	movwf	___fleq@ff1+1,c
 11682  005074  0E00               	movlw	0
 11683  005076  6E15               	movwf	___fleq@ff1+2,c
 11684  005078  0E00               	movlw	0
 11685  00507A  6E16               	movwf	___fleq@ff1+3,c
 11686  00507C                     l10457:
 11687  00507C  0E00               	movlw	0
 11688  00507E  1417               	andwf	___fleq@ff2,w,c
 11689  005080  6E1B               	movwf	??___fleq& (0+255),c
 11690  005082  0E00               	movlw	0
 11691  005084  1418               	andwf	___fleq@ff2+1,w,c
 11692  005086  6E1C               	movwf	(??___fleq+1)& (0+255),c
 11693  005088  0E80               	movlw	128
 11694  00508A  1419               	andwf	___fleq@ff2+2,w,c
 11695  00508C  6E1D               	movwf	(??___fleq+2)& (0+255),c
 11696  00508E  0E7F               	movlw	127
 11697  005090  141A               	andwf	___fleq@ff2+3,w,c
 11698  005092  6E1E               	movwf	(??___fleq+3)& (0+255),c
 11699  005094  501B               	movf	??___fleq,w,c
 11700  005096  101C               	iorwf	??___fleq+1,w,c
 11701  005098  101D               	iorwf	??___fleq+2,w,c
 11702  00509A  101E               	iorwf	??___fleq+3,w,c
 11703  00509C  A4D8               	btfss	status,2,c
 11704  00509E  D008               	goto	l10461
 11705  0050A0  0E00               	movlw	0
 11706  0050A2  6E17               	movwf	___fleq@ff2,c
 11707  0050A4  0E00               	movlw	0
 11708  0050A6  6E18               	movwf	___fleq@ff2+1,c
 11709  0050A8  0E00               	movlw	0
 11710  0050AA  6E19               	movwf	___fleq@ff2+2,c
 11711  0050AC  0E00               	movlw	0
 11712  0050AE  6E1A               	movwf	___fleq@ff2+3,c
 11713  0050B0                     l10461:
 11714  0050B0  5017               	movf	___fleq@ff2,w,c
 11715  0050B2  1813               	xorwf	___fleq@ff1,w,c
 11716  0050B4  E10A               	bnz	u13330
 11717  0050B6  5018               	movf	___fleq@ff2+1,w,c
 11718  0050B8  1814               	xorwf	___fleq@ff1+1,w,c
 11719  0050BA  E107               	bnz	u13330
 11720  0050BC  5019               	movf	___fleq@ff2+2,w,c
 11721  0050BE  1815               	xorwf	___fleq@ff1+2,w,c
 11722  0050C0  E104               	bnz	u13330
 11723  0050C2  501A               	movf	___fleq@ff2+3,w,c
 11724  0050C4  1816               	xorwf	___fleq@ff1+3,w,c
 11725  0050C6  B4D8               	btfsc	status,2,c
 11726  0050C8  D002               	goto	l10465
 11727  0050CA                     u13330:
 11728  0050CA  90D8               	bcf	status,0,c
 11729  0050CC  0012               	return	
 11730  0050CE                     l10465:
 11731  0050CE  80D8               	bsf	status,0,c
 11732  0050D0  0012               	return		;funcret
 11733  0050D2                     __end_of___fleq:
 11734                           	opt callstack 0
 11735                           
 11736 ;; *************** function ___fldiv *****************
 11737 ;; Defined at:
 11738 ;;		line 11 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcdiv.c"
 11739 ;; Parameters:    Size  Location     Type
 11740 ;;  b               4   13[BANK0 ] unsigned char 
 11741 ;;  a               4   17[BANK0 ] unsigned char 
 11742 ;; Auto vars:     Size  Location     Type
 11743 ;;  grs             4   28[BANK0 ] unsigned long 
 11744 ;;  rem             4   21[BANK0 ] unsigned long 
 11745 ;;  new_exp         2   26[BANK0 ] short 
 11746 ;;  aexp            1   33[BANK0 ] unsigned char 
 11747 ;;  bexp            1   32[BANK0 ] unsigned char 
 11748 ;;  sign            1   25[BANK0 ] unsigned char 
 11749 ;; Return value:  Size  Location     Type
 11750 ;;                  4   13[BANK0 ] unsigned char 
 11751 ;; Registers used:
 11752 ;;		wreg, status,2, status,0
 11753 ;; Tracked objects:
 11754 ;;		On entry : 0/0
 11755 ;;		On exit  : 0/0
 11756 ;;		Unchanged: 0/0
 11757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11758 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11759 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11760 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11761 ;;      Totals:         4      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11762 ;;Total ram usage:       25 bytes
 11763 ;; Hardware stack levels used:    1
 11764 ;; Hardware stack levels required when called:    8
 11765 ;; This function calls:
 11766 ;;		Nothing
 11767 ;; This function is called by:
 11768 ;;		_get_pfb
 11769 ;;		_strtof
 11770 ;; This function uses a non-reentrant model
 11771 ;;
 11772                           
 11773                           	psect	text47
 11774  00351A                     __ptext47:
 11775                           	opt callstack 0
 11776  00351A                     ___fldiv:
 11777                           	opt callstack 18
 11778                           
 11779                           ;incstack = 0
 11780  00351A  0100               	movlb	0	; () banked
 11781  00351C  5170               	movf	(___fldiv@b+3)& (0+255),w,b
 11782  00351E  0B80               	andlw	128
 11783  003520  6F79               	movwf	___fldiv@sign& (0+255),b
 11784  003522  5170               	movf	(___fldiv@b+3)& (0+255),w,b
 11785  003524  2570               	addwf	(___fldiv@b+3)& (0+255),w,b
 11786  003526  6F80               	movwf	___fldiv@bexp& (0+255),b
 11787                           
 11788                           ; BSR set to: 0
 11789  003528  BF6F               	btfsc	(___fldiv@b+2)& (0+255),7,b
 11790                           
 11791                           ; BSR set to: 0
 11792  00352A  8180               	bsf	___fldiv@bexp& (0+255),0,b
 11793                           
 11794                           ; BSR set to: 0
 11795  00352C  5180               	movf	___fldiv@bexp& (0+255),w,b
 11796  00352E  B4D8               	btfsc	status,2,c
 11797  003530  D00D               	goto	l10201
 11798                           
 11799                           ; BSR set to: 0
 11800  003532  2980               	incf	___fldiv@bexp& (0+255),w,b
 11801  003534  A4D8               	btfss	status,2,c
 11802  003536  D008               	goto	l10197
 11803                           
 11804                           ; BSR set to: 0
 11805  003538  0E00               	movlw	0
 11806  00353A  6F6D               	movwf	___fldiv@b& (0+255),b
 11807  00353C  0E00               	movlw	0
 11808  00353E  6F6E               	movwf	(___fldiv@b+1)& (0+255),b
 11809  003540  0E00               	movlw	0
 11810  003542  6F6F               	movwf	(___fldiv@b+2)& (0+255),b
 11811  003544  0E00               	movlw	0
 11812  003546  6F70               	movwf	(___fldiv@b+3)& (0+255),b
 11813  003548                     l10197:
 11814                           
 11815                           ; BSR set to: 0
 11816  003548  8F6F               	bsf	(___fldiv@b+2)& (0+255),7,b
 11817  00354A  D006               	goto	L12
 11818  00354C                     l10201:
 11819                           
 11820                           ; BSR set to: 0
 11821  00354C  0E00               	movlw	0
 11822  00354E  6F6D               	movwf	___fldiv@b& (0+255),b
 11823  003550  0E00               	movlw	0
 11824  003552  6F6E               	movwf	(___fldiv@b+1)& (0+255),b
 11825  003554  0E00               	movlw	0
 11826  003556  6F6F               	movwf	(___fldiv@b+2)& (0+255),b
 11827  003558                     L12:
 11828  003558  0E00               	movlw	0
 11829  00355A  6F70               	movwf	(___fldiv@b+3)& (0+255),b
 11830                           
 11831                           ; BSR set to: 0
 11832  00355C  5174               	movf	(___fldiv@a+3)& (0+255),w,b
 11833  00355E  0B80               	andlw	128
 11834  003560  1B79               	xorwf	___fldiv@sign& (0+255),f,b
 11835                           
 11836                           ; BSR set to: 0
 11837  003562  5174               	movf	(___fldiv@a+3)& (0+255),w,b
 11838  003564  2574               	addwf	(___fldiv@a+3)& (0+255),w,b
 11839  003566  6F81               	movwf	___fldiv@aexp& (0+255),b
 11840                           
 11841                           ; BSR set to: 0
 11842  003568  BF73               	btfsc	(___fldiv@a+2)& (0+255),7,b
 11843                           
 11844                           ; BSR set to: 0
 11845  00356A  8181               	bsf	___fldiv@aexp& (0+255),0,b
 11846                           
 11847                           ; BSR set to: 0
 11848  00356C  5181               	movf	___fldiv@aexp& (0+255),w,b
 11849  00356E  B4D8               	btfsc	status,2,c
 11850  003570  D00D               	goto	l10221
 11851                           
 11852                           ; BSR set to: 0
 11853  003572  2981               	incf	___fldiv@aexp& (0+255),w,b
 11854  003574  A4D8               	btfss	status,2,c
 11855  003576  D008               	goto	l10217
 11856                           
 11857                           ; BSR set to: 0
 11858  003578  0E00               	movlw	0
 11859  00357A  6F71               	movwf	___fldiv@a& (0+255),b
 11860  00357C  0E00               	movlw	0
 11861  00357E  6F72               	movwf	(___fldiv@a+1)& (0+255),b
 11862  003580  0E00               	movlw	0
 11863  003582  6F73               	movwf	(___fldiv@a+2)& (0+255),b
 11864  003584  0E00               	movlw	0
 11865  003586  6F74               	movwf	(___fldiv@a+3)& (0+255),b
 11866  003588                     l10217:
 11867                           
 11868                           ; BSR set to: 0
 11869  003588  8F73               	bsf	(___fldiv@a+2)& (0+255),7,b
 11870  00358A  D006               	goto	L13
 11871  00358C                     l10221:
 11872                           
 11873                           ; BSR set to: 0
 11874  00358C  0E00               	movlw	0
 11875  00358E  6F71               	movwf	___fldiv@a& (0+255),b
 11876  003590  0E00               	movlw	0
 11877  003592  6F72               	movwf	(___fldiv@a+1)& (0+255),b
 11878  003594  0E00               	movlw	0
 11879  003596  6F73               	movwf	(___fldiv@a+2)& (0+255),b
 11880  003598                     L13:
 11881  003598  0E00               	movlw	0
 11882  00359A  6F74               	movwf	(___fldiv@a+3)& (0+255),b
 11883                           
 11884                           ; BSR set to: 0
 11885  00359C  5171               	movf	___fldiv@a& (0+255),w,b
 11886  00359E  1172               	iorwf	(___fldiv@a+1)& (0+255),w,b
 11887  0035A0  1173               	iorwf	(___fldiv@a+2)& (0+255),w,b
 11888  0035A2  1174               	iorwf	(___fldiv@a+3)& (0+255),w,b
 11889  0035A4  A4D8               	btfss	status,2,c
 11890  0035A6  D017               	goto	l10235
 11891                           
 11892                           ; BSR set to: 0
 11893  0035A8  0E00               	movlw	0
 11894  0035AA  6F6D               	movwf	___fldiv@b& (0+255),b
 11895  0035AC  0E00               	movlw	0
 11896  0035AE  6F6E               	movwf	(___fldiv@b+1)& (0+255),b
 11897  0035B0  0E00               	movlw	0
 11898  0035B2  6F6F               	movwf	(___fldiv@b+2)& (0+255),b
 11899  0035B4  0E00               	movlw	0
 11900  0035B6  6F70               	movwf	(___fldiv@b+3)& (0+255),b
 11901                           
 11902                           ; BSR set to: 0
 11903  0035B8  0E80               	movlw	128
 11904  0035BA  136F               	iorwf	(___fldiv@b+2)& (0+255),f,b
 11905  0035BC  0E7F               	movlw	127
 11906  0035BE  1370               	iorwf	(___fldiv@b+3)& (0+255),f,b
 11907  0035C0                     l10229:
 11908                           
 11909                           ; BSR set to: 0
 11910  0035C0  5179               	movf	___fldiv@sign& (0+255),w,b
 11911  0035C2  1370               	iorwf	(___fldiv@b+3)& (0+255),f,b
 11912                           
 11913                           ; BSR set to: 0
 11914  0035C4  C06D  F06D         	movff	___fldiv@b,?___fldiv
 11915  0035C8  C06E  F06E         	movff	___fldiv@b+1,?___fldiv+1
 11916  0035CC  C06F  F06F         	movff	___fldiv@b+2,?___fldiv+2
 11917  0035D0  C070  F070         	movff	___fldiv@b+3,?___fldiv+3
 11918  0035D4  0012               	return	
 11919  0035D6                     l10235:
 11920                           
 11921                           ; BSR set to: 0
 11922  0035D6  5180               	movf	___fldiv@bexp& (0+255),w,b
 11923  0035D8  A4D8               	btfss	status,2,c
 11924  0035DA  D009               	goto	l10243
 11925                           
 11926                           ; BSR set to: 0
 11927                           
 11928                           ; BSR set to: 0
 11929  0035DC  0E00               	movlw	0
 11930  0035DE  6F6D               	movwf	?___fldiv& (0+255),b
 11931  0035E0  0E00               	movlw	0
 11932  0035E2  6F6E               	movwf	(?___fldiv+1)& (0+255),b
 11933  0035E4  0E00               	movlw	0
 11934  0035E6  6F6F               	movwf	(?___fldiv+2)& (0+255),b
 11935  0035E8  0E00               	movlw	0
 11936  0035EA  6F70               	movwf	(?___fldiv+3)& (0+255),b
 11937  0035EC  0012               	return	
 11938  0035EE                     l10243:
 11939                           
 11940                           ; BSR set to: 0
 11941  0035EE  5181               	movf	___fldiv@aexp& (0+255),w,b
 11942  0035F0  C080  F037         	movff	___fldiv@bexp,??___fldiv
 11943  0035F4  6A38               	clrf	(??___fldiv+1)& (0+255),c
 11944  0035F6  5E37               	subwf	??___fldiv,f,c
 11945  0035F8  0E00               	movlw	0
 11946  0035FA  5A38               	subwfb	??___fldiv+1,f,c
 11947  0035FC  0E7F               	movlw	127
 11948  0035FE  2437               	addwf	??___fldiv,w,c
 11949  003600  6F7A               	movwf	___fldiv@new_exp& (0+255),b
 11950  003602  0E00               	movlw	0
 11951  003604  2038               	addwfc	??___fldiv+1,w,c
 11952  003606  6F7B               	movwf	(___fldiv@new_exp+1)& (0+255),b
 11953                           
 11954                           ; BSR set to: 0
 11955  003608  C06D  F075         	movff	___fldiv@b,___fldiv@rem
 11956  00360C  C06E  F076         	movff	___fldiv@b+1,___fldiv@rem+1
 11957  003610  C06F  F077         	movff	___fldiv@b+2,___fldiv@rem+2
 11958  003614  C070  F078         	movff	___fldiv@b+3,___fldiv@rem+3
 11959                           
 11960                           ; BSR set to: 0
 11961  003618  0E00               	movlw	0
 11962  00361A  6F6D               	movwf	___fldiv@b& (0+255),b
 11963  00361C  0E00               	movlw	0
 11964  00361E  6F6E               	movwf	(___fldiv@b+1)& (0+255),b
 11965  003620  0E00               	movlw	0
 11966  003622  6F6F               	movwf	(___fldiv@b+2)& (0+255),b
 11967  003624  0E00               	movlw	0
 11968  003626  6F70               	movwf	(___fldiv@b+3)& (0+255),b
 11969                           
 11970                           ; BSR set to: 0
 11971  003628  0E00               	movlw	0
 11972  00362A  6F7C               	movwf	___fldiv@grs& (0+255),b
 11973  00362C  0E00               	movlw	0
 11974  00362E  6F7D               	movwf	(___fldiv@grs+1)& (0+255),b
 11975  003630  0E00               	movlw	0
 11976  003632  6F7E               	movwf	(___fldiv@grs+2)& (0+255),b
 11977  003634  0E00               	movlw	0
 11978  003636  6F7F               	movwf	(___fldiv@grs+3)& (0+255),b
 11979                           
 11980                           ; BSR set to: 0
 11981  003638  0E00               	movlw	0
 11982  00363A  6F81               	movwf	___fldiv@aexp& (0+255),b
 11983  00363C  D028               	goto	l1823
 11984  00363E                     l10253:
 11985                           
 11986                           ; BSR set to: 0
 11987  00363E  5181               	movf	___fldiv@aexp& (0+255),w,b
 11988  003640  B4D8               	btfsc	status,2,c
 11989  003642  D011               	goto	l10261
 11990                           
 11991                           ; BSR set to: 0
 11992  003644  90D8               	bcf	status,0,c
 11993  003646  3775               	rlcf	___fldiv@rem& (0+255),f,b
 11994  003648  3776               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 11995  00364A  3777               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 11996  00364C  3778               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 11997  00364E  90D8               	bcf	status,0,c
 11998  003650  376D               	rlcf	___fldiv@b& (0+255),f,b
 11999  003652  376E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 12000  003654  376F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 12001  003656  3770               	rlcf	(___fldiv@b+3)& (0+255),f,b
 12002                           
 12003                           ; BSR set to: 0
 12004  003658  BF7F               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 12005                           
 12006                           ; BSR set to: 0
 12007  00365A  816D               	bsf	___fldiv@b& (0+255),0,b
 12008                           
 12009                           ; BSR set to: 0
 12010  00365C  90D8               	bcf	status,0,c
 12011  00365E  377C               	rlcf	___fldiv@grs& (0+255),f,b
 12012  003660  377D               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 12013  003662  377E               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 12014  003664  377F               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 12015  003666                     l10261:
 12016                           
 12017                           ; BSR set to: 0
 12018  003666  5171               	movf	___fldiv@a& (0+255),w,b
 12019  003668  5D75               	subwf	___fldiv@rem& (0+255),w,b
 12020  00366A  5172               	movf	(___fldiv@a+1)& (0+255),w,b
 12021  00366C  5976               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 12022  00366E  5173               	movf	(___fldiv@a+2)& (0+255),w,b
 12023  003670  5977               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 12024  003672  5174               	movf	(___fldiv@a+3)& (0+255),w,b
 12025  003674  5978               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 12026  003676  A0D8               	btfss	status,0,c
 12027  003678  D009               	goto	l10267
 12028                           
 12029                           ; BSR set to: 0
 12030  00367A  8D7F               	bsf	(___fldiv@grs+3)& (0+255),6,b
 12031                           
 12032                           ; BSR set to: 0
 12033  00367C  5171               	movf	___fldiv@a& (0+255),w,b
 12034  00367E  5F75               	subwf	___fldiv@rem& (0+255),f,b
 12035  003680  5172               	movf	(___fldiv@a+1)& (0+255),w,b
 12036  003682  5B76               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 12037  003684  5173               	movf	(___fldiv@a+2)& (0+255),w,b
 12038  003686  5B77               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 12039  003688  5174               	movf	(___fldiv@a+3)& (0+255),w,b
 12040  00368A  5B78               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 12041  00368C                     l10267:
 12042                           
 12043                           ; BSR set to: 0
 12044  00368C  2B81               	incf	___fldiv@aexp& (0+255),f,b
 12045  00368E                     l1823:
 12046                           
 12047                           ; BSR set to: 0
 12048  00368E  0E19               	movlw	25
 12049  003690  6581               	cpfsgt	___fldiv@aexp& (0+255),b
 12050  003692  D7D5               	goto	l10253
 12051                           
 12052                           ; BSR set to: 0
 12053  003694  5175               	movf	___fldiv@rem& (0+255),w,b
 12054  003696  1176               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 12055  003698  1177               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 12056  00369A  1178               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 12057  00369C  B4D8               	btfsc	status,2,c
 12058  00369E  D011               	goto	l10279
 12059                           
 12060                           ; BSR set to: 0
 12061  0036A0  817C               	bsf	___fldiv@grs& (0+255),0,b
 12062  0036A2  D00F               	goto	l10279
 12063  0036A4                     l10273:
 12064                           
 12065                           ; BSR set to: 0
 12066  0036A4  90D8               	bcf	status,0,c
 12067  0036A6  376D               	rlcf	___fldiv@b& (0+255),f,b
 12068  0036A8  376E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 12069  0036AA  376F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 12070  0036AC  3770               	rlcf	(___fldiv@b+3)& (0+255),f,b
 12071                           
 12072                           ; BSR set to: 0
 12073  0036AE  BF7F               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 12074                           
 12075                           ; BSR set to: 0
 12076  0036B0  816D               	bsf	___fldiv@b& (0+255),0,b
 12077                           
 12078                           ; BSR set to: 0
 12079  0036B2  90D8               	bcf	status,0,c
 12080  0036B4  377C               	rlcf	___fldiv@grs& (0+255),f,b
 12081  0036B6  377D               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 12082  0036B8  377E               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 12083  0036BA  377F               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 12084  0036BC  077A               	decf	___fldiv@new_exp& (0+255),f,b
 12085  0036BE  A0D8               	btfss	status,0,c
 12086  0036C0  077B               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 12087  0036C2                     l10279:
 12088                           
 12089                           ; BSR set to: 0
 12090  0036C2  AF6F               	btfss	(___fldiv@b+2)& (0+255),7,b
 12091  0036C4  D7EF               	goto	l10273
 12092                           
 12093                           ; BSR set to: 0
 12094  0036C6  0E00               	movlw	0
 12095  0036C8  6F81               	movwf	___fldiv@aexp& (0+255),b
 12096                           
 12097                           ; BSR set to: 0
 12098  0036CA  AF7F               	btfss	(___fldiv@grs+3)& (0+255),7,b
 12099  0036CC  D017               	goto	l1834
 12100                           
 12101                           ; BSR set to: 0
 12102  0036CE  0EFF               	movlw	255
 12103  0036D0  157C               	andwf	___fldiv@grs& (0+255),w,b
 12104  0036D2  6E37               	movwf	??___fldiv& (0+255),c
 12105  0036D4  0EFF               	movlw	255
 12106  0036D6  157D               	andwf	(___fldiv@grs+1)& (0+255),w,b
 12107  0036D8  6E38               	movwf	(??___fldiv+1)& (0+255),c
 12108  0036DA  0EFF               	movlw	255
 12109  0036DC  157E               	andwf	(___fldiv@grs+2)& (0+255),w,b
 12110  0036DE  6E39               	movwf	(??___fldiv+2)& (0+255),c
 12111  0036E0  0E7F               	movlw	127
 12112  0036E2  157F               	andwf	(___fldiv@grs+3)& (0+255),w,b
 12113  0036E4  6E3A               	movwf	(??___fldiv+3)& (0+255),c
 12114  0036E6  5037               	movf	??___fldiv,w,c
 12115  0036E8  1038               	iorwf	??___fldiv+1,w,c
 12116  0036EA  1039               	iorwf	??___fldiv+2,w,c
 12117  0036EC  103A               	iorwf	??___fldiv+3,w,c
 12118  0036EE  B4D8               	btfsc	status,2,c
 12119  0036F0  D003               	goto	l1835
 12120  0036F2                     u13050:
 12121                           
 12122                           ; BSR set to: 0
 12123  0036F2  0E01               	movlw	1
 12124  0036F4  6F81               	movwf	___fldiv@aexp& (0+255),b
 12125  0036F6  D002               	goto	l1834
 12126  0036F8                     l1835:
 12127                           
 12128                           ; BSR set to: 0
 12129  0036F8  B16D               	btfsc	___fldiv@b& (0+255),0,b
 12130  0036FA  D7FB               	goto	u13050
 12131  0036FC                     l1834:
 12132                           
 12133                           ; BSR set to: 0
 12134  0036FC  5181               	movf	___fldiv@aexp& (0+255),w,b
 12135  0036FE  B4D8               	btfsc	status,2,c
 12136  003700  D01F               	goto	l10299
 12137                           
 12138                           ; BSR set to: 0
 12139  003702  0E01               	movlw	1
 12140  003704  276D               	addwf	___fldiv@b& (0+255),f,b
 12141  003706  0E00               	movlw	0
 12142  003708  236E               	addwfc	(___fldiv@b+1)& (0+255),f,b
 12143  00370A  236F               	addwfc	(___fldiv@b+2)& (0+255),f,b
 12144  00370C  2370               	addwfc	(___fldiv@b+3)& (0+255),f,b
 12145                           
 12146                           ; BSR set to: 0
 12147  00370E  A170               	btfss	(___fldiv@b+3)& (0+255),0,b
 12148  003710  D017               	goto	l10299
 12149                           
 12150                           ; BSR set to: 0
 12151  003712  C06D  F037         	movff	___fldiv@b,??___fldiv
 12152  003716  C06E  F038         	movff	___fldiv@b+1,??___fldiv+1
 12153  00371A  C06F  F039         	movff	___fldiv@b+2,??___fldiv+2
 12154  00371E  C070  F03A         	movff	___fldiv@b+3,??___fldiv+3
 12155  003722  343A               	rlcf	??___fldiv+3,w,c
 12156  003724  323A               	rrcf	??___fldiv+3,f,c
 12157  003726  3239               	rrcf	??___fldiv+2,f,c
 12158  003728  3238               	rrcf	??___fldiv+1,f,c
 12159  00372A  3237               	rrcf	??___fldiv,f,c
 12160  00372C  C037  F06D         	movff	??___fldiv,___fldiv@b
 12161  003730  C038  F06E         	movff	??___fldiv+1,___fldiv@b+1
 12162  003734  C039  F06F         	movff	??___fldiv+2,___fldiv@b+2
 12163  003738  C03A  F070         	movff	??___fldiv+3,___fldiv@b+3
 12164                           
 12165                           ; BSR set to: 0
 12166  00373C  4B7A               	infsnz	___fldiv@new_exp& (0+255),f,b
 12167  00373E  2B7B               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 12168  003740                     l10299:
 12169                           
 12170                           ; BSR set to: 0
 12171  003740  BF7B               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 12172  003742  D010               	goto	l10303
 12173  003744  517B               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 12174  003746  E103               	bnz	u13090
 12175  003748  297A               	incf	___fldiv@new_exp& (0+255),w,b
 12176  00374A  A0D8               	btfss	status,0,c
 12177  00374C  D00B               	goto	l10303
 12178  00374E                     u13090:
 12179                           
 12180                           ; BSR set to: 0
 12181  00374E  0E00               	movlw	0
 12182  003750  6F7B               	movwf	(___fldiv@new_exp+1)& (0+255),b
 12183  003752  697A               	setf	___fldiv@new_exp& (0+255),b
 12184  003754  0E00               	movlw	0
 12185  003756  6F6D               	movwf	___fldiv@b& (0+255),b
 12186  003758  0E00               	movlw	0
 12187  00375A  6F6E               	movwf	(___fldiv@b+1)& (0+255),b
 12188  00375C  0E00               	movlw	0
 12189  00375E  6F6F               	movwf	(___fldiv@b+2)& (0+255),b
 12190  003760  0E00               	movlw	0
 12191  003762  6F70               	movwf	(___fldiv@b+3)& (0+255),b
 12192  003764                     l10303:
 12193                           
 12194                           ; BSR set to: 0
 12195  003764  BF7B               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 12196  003766  D005               	goto	u13100
 12197  003768  517B               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 12198  00376A  E111               	bnz	l10307
 12199  00376C  057A               	decf	___fldiv@new_exp& (0+255),w,b
 12200  00376E  B0D8               	btfsc	status,0,c
 12201  003770  D00E               	goto	l10307
 12202  003772                     u13100:
 12203                           
 12204                           ; BSR set to: 0
 12205  003772  0E00               	movlw	0
 12206  003774  6F7B               	movwf	(___fldiv@new_exp+1)& (0+255),b
 12207  003776  0E00               	movlw	0
 12208  003778  6F7A               	movwf	___fldiv@new_exp& (0+255),b
 12209  00377A  0E00               	movlw	0
 12210  00377C  6F6D               	movwf	___fldiv@b& (0+255),b
 12211  00377E  0E00               	movlw	0
 12212  003780  6F6E               	movwf	(___fldiv@b+1)& (0+255),b
 12213  003782  0E00               	movlw	0
 12214  003784  6F6F               	movwf	(___fldiv@b+2)& (0+255),b
 12215  003786  0E00               	movlw	0
 12216  003788  6F70               	movwf	(___fldiv@b+3)& (0+255),b
 12217  00378A  0E00               	movlw	0
 12218  00378C  6F79               	movwf	___fldiv@sign& (0+255),b
 12219  00378E                     l10307:
 12220                           
 12221                           ; BSR set to: 0
 12222  00378E  C07A  F080         	movff	___fldiv@new_exp,___fldiv@bexp
 12223                           
 12224                           ; BSR set to: 0
 12225  003792  A180               	btfss	___fldiv@bexp& (0+255),0,b
 12226  003794  D002               	goto	l10313
 12227                           
 12228                           ; BSR set to: 0
 12229  003796  8F6F               	bsf	(___fldiv@b+2)& (0+255),7,b
 12230  003798  D001               	goto	l10315
 12231  00379A                     l10313:
 12232                           
 12233                           ; BSR set to: 0
 12234  00379A  9F6F               	bcf	(___fldiv@b+2)& (0+255),7,b
 12235  00379C                     l10315:
 12236                           
 12237                           ; BSR set to: 0
 12238  00379C  90D8               	bcf	status,0,c
 12239  00379E  3180               	rrcf	___fldiv@bexp& (0+255),w,b
 12240  0037A0  6F70               	movwf	(___fldiv@b+3)& (0+255),b
 12241  0037A2  D70E               	goto	l10229
 12242  0037A4                     __end_of___fldiv:
 12243                           	opt callstack 0
 12244                           
 12245 ;; *************** function ___fltol *****************
 12246 ;; Defined at:
 12247 ;;		line 43 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/fltol.c"
 12248 ;; Parameters:    Size  Location     Type
 12249 ;;  f1              4   35[BANK0 ] unsigned char 
 12250 ;; Auto vars:     Size  Location     Type
 12251 ;;  exp1            1   44[BANK0 ] unsigned char 
 12252 ;;  sign1           1   43[BANK0 ] unsigned char 
 12253 ;; Return value:  Size  Location     Type
 12254 ;;                  4   35[BANK0 ] long 
 12255 ;; Registers used:
 12256 ;;		wreg, status,2, status,0
 12257 ;; Tracked objects:
 12258 ;;		On entry : 0/0
 12259 ;;		On exit  : 0/0
 12260 ;;		Unchanged: 0/0
 12261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12262 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12263 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12264 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12265 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12266 ;;Total ram usage:       10 bytes
 12267 ;; Hardware stack levels used:    1
 12268 ;; Hardware stack levels required when called:    8
 12269 ;; This function calls:
 12270 ;;		Nothing
 12271 ;; This function is called by:
 12272 ;;		_get_pfb
 12273 ;; This function uses a non-reentrant model
 12274 ;;
 12275                           
 12276                           	psect	text48
 12277  004C60                     __ptext48:
 12278                           	opt callstack 0
 12279  004C60                     ___fltol:
 12280                           	opt callstack 20
 12281                           
 12282                           ; BSR set to: 0
 12283                           ;incstack = 0
 12284  004C60  0100               	movlb	0	; () banked
 12285  004C62  3585               	rlcf	(___fltol@f1+2)& (0+255),w,b
 12286  004C64  3586               	rlcf	(___fltol@f1+3)& (0+255),w,b
 12287  004C66  6F8C               	movwf	___fltol@exp1& (0+255),b
 12288  004C68  518C               	movf	___fltol@exp1& (0+255),w,b
 12289  004C6A  A4D8               	btfss	status,2,c
 12290  004C6C  D009               	goto	l11201
 12291  004C6E                     u14900:
 12292                           
 12293                           ; BSR set to: 0
 12294  004C6E  0E00               	movlw	0
 12295  004C70  6F83               	movwf	?___fltol& (0+255),b
 12296  004C72  0E00               	movlw	0
 12297  004C74  6F84               	movwf	(?___fltol+1)& (0+255),b
 12298  004C76  0E00               	movlw	0
 12299  004C78  6F85               	movwf	(?___fltol+2)& (0+255),b
 12300  004C7A  0E00               	movlw	0
 12301  004C7C  6F86               	movwf	(?___fltol+3)& (0+255),b
 12302  004C7E  0012               	return	
 12303  004C80                     l11201:
 12304                           
 12305                           ; BSR set to: 0
 12306  004C80  C083  F087         	movff	___fltol@f1,??___fltol
 12307  004C84  C084  F088         	movff	___fltol@f1+1,??___fltol+1
 12308  004C88  C085  F089         	movff	___fltol@f1+2,??___fltol+2
 12309  004C8C  C086  F08A         	movff	___fltol@f1+3,??___fltol+3
 12310  004C90  0E20               	movlw	32
 12311  004C92  D005               	goto	u14910
 12312  004C94                     u14915:
 12313  004C94  90D8               	bcf	status,0,c
 12314  004C96  338A               	rrcf	(??___fltol+3)& (0+255),f,b
 12315  004C98  3389               	rrcf	(??___fltol+2)& (0+255),f,b
 12316  004C9A  3388               	rrcf	(??___fltol+1)& (0+255),f,b
 12317  004C9C  3387               	rrcf	??___fltol& (0+255),f,b
 12318  004C9E                     u14910:
 12319  004C9E  2EE8               	decfsz	wreg,f,c
 12320  004CA0  D7F9               	goto	u14915
 12321  004CA2  5187               	movf	??___fltol& (0+255),w,b
 12322  004CA4  6F8B               	movwf	___fltol@sign1& (0+255),b
 12323                           
 12324                           ; BSR set to: 0
 12325  004CA6  8F85               	bsf	(___fltol@f1+2)& (0+255),7,b
 12326                           
 12327                           ; BSR set to: 0
 12328  004CA8  0EFF               	movlw	255
 12329  004CAA  1783               	andwf	___fltol@f1& (0+255),f,b
 12330  004CAC  0EFF               	movlw	255
 12331  004CAE  1784               	andwf	(___fltol@f1+1)& (0+255),f,b
 12332  004CB0  0EFF               	movlw	255
 12333  004CB2  1785               	andwf	(___fltol@f1+2)& (0+255),f,b
 12334  004CB4  0E00               	movlw	0
 12335  004CB6  1786               	andwf	(___fltol@f1+3)& (0+255),f,b
 12336                           
 12337                           ; BSR set to: 0
 12338  004CB8  0E96               	movlw	150
 12339  004CBA  5F8C               	subwf	___fltol@exp1& (0+255),f,b
 12340                           
 12341                           ; BSR set to: 0
 12342  004CBC  AF8C               	btfss	___fltol@exp1& (0+255),7,b
 12343  004CBE  D00D               	goto	l11221
 12344                           
 12345                           ; BSR set to: 0
 12346  004CC0  518C               	movf	___fltol@exp1& (0+255),w,b
 12347  004CC2  0A80               	xorlw	128
 12348  004CC4  0F97               	addlw	151
 12349  004CC6  A0D8               	btfss	status,0,c
 12350  004CC8  D7D2               	goto	u14900
 12351  004CCA                     l11217:
 12352                           
 12353                           ; BSR set to: 0
 12354  004CCA  90D8               	bcf	status,0,c
 12355  004CCC  3386               	rrcf	(___fltol@f1+3)& (0+255),f,b
 12356  004CCE  3385               	rrcf	(___fltol@f1+2)& (0+255),f,b
 12357  004CD0  3384               	rrcf	(___fltol@f1+1)& (0+255),f,b
 12358  004CD2  3383               	rrcf	___fltol@f1& (0+255),f,b
 12359                           
 12360                           ; BSR set to: 0
 12361  004CD4  3F8C               	incfsz	___fltol@exp1& (0+255),f,b
 12362  004CD6  D7F9               	goto	l11217
 12363  004CD8  D00D               	goto	u14950
 12364  004CDA                     l11221:
 12365                           
 12366                           ; BSR set to: 0
 12367  004CDA  0E1F               	movlw	31
 12368  004CDC  658C               	cpfsgt	___fltol@exp1& (0+255),b
 12369  004CDE  D007               	goto	l11229
 12370  004CE0  D7C6               	goto	u14900
 12371  004CE2                     l11227:
 12372                           
 12373                           ; BSR set to: 0
 12374  004CE2  90D8               	bcf	status,0,c
 12375  004CE4  3783               	rlcf	___fltol@f1& (0+255),f,b
 12376  004CE6  3784               	rlcf	(___fltol@f1+1)& (0+255),f,b
 12377  004CE8  3785               	rlcf	(___fltol@f1+2)& (0+255),f,b
 12378  004CEA  3786               	rlcf	(___fltol@f1+3)& (0+255),f,b
 12379  004CEC  078C               	decf	___fltol@exp1& (0+255),f,b
 12380  004CEE                     l11229:
 12381                           
 12382                           ; BSR set to: 0
 12383  004CEE  518C               	movf	___fltol@exp1& (0+255),w,b
 12384  004CF0  A4D8               	btfss	status,2,c
 12385  004CF2  D7F7               	goto	l11227
 12386  004CF4                     u14950:
 12387                           
 12388                           ; BSR set to: 0
 12389  004CF4  518B               	movf	___fltol@sign1& (0+255),w,b
 12390  004CF6  B4D8               	btfsc	status,2,c
 12391  004CF8  D008               	goto	l11235
 12392                           
 12393                           ; BSR set to: 0
 12394  004CFA  1F86               	comf	(___fltol@f1+3)& (0+255),f,b
 12395  004CFC  1F85               	comf	(___fltol@f1+2)& (0+255),f,b
 12396  004CFE  1F84               	comf	(___fltol@f1+1)& (0+255),f,b
 12397  004D00  6D83               	negf	___fltol@f1& (0+255),b
 12398  004D02  0E00               	movlw	0
 12399  004D04  2384               	addwfc	(___fltol@f1+1)& (0+255),f,b
 12400  004D06  2385               	addwfc	(___fltol@f1+2)& (0+255),f,b
 12401  004D08  2386               	addwfc	(___fltol@f1+3)& (0+255),f,b
 12402  004D0A                     l11235:
 12403                           
 12404                           ; BSR set to: 0
 12405  004D0A  C083  F083         	movff	___fltol@f1,?___fltol
 12406  004D0E  C084  F084         	movff	___fltol@f1+1,?___fltol+1
 12407  004D12  C085  F085         	movff	___fltol@f1+2,?___fltol+2
 12408  004D16  C086  F086         	movff	___fltol@f1+3,?___fltol+3
 12409                           
 12410                           ; BSR set to: 0
 12411  004D1A  0012               	return		;funcret
 12412  004D1C                     __end_of___fltol:
 12413                           	opt callstack 0
 12414                           
 12415 ;; *************** function _display_ea_version *****************
 12416 ;; Defined at:
 12417 ;;		line 14 in file "board/ea_display.c"
 12418 ;; Parameters:    Size  Location     Type
 12419 ;;  pause           2   81[BANK0 ] unsigned short 
 12420 ;; Auto vars:     Size  Location     Type
 12421 ;;		None
 12422 ;; Return value:  Size  Location     Type
 12423 ;;                  1    wreg      void 
 12424 ;; Registers used:
 12425 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12426 ;; Tracked objects:
 12427 ;;		On entry : 0/0
 12428 ;;		On exit  : 0/0
 12429 ;;		Unchanged: 0/0
 12430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12431 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12434 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12435 ;;Total ram usage:        2 bytes
 12436 ;; Hardware stack levels used:    1
 12437 ;; Hardware stack levels required when called:   17
 12438 ;; This function calls:
 12439 ;;		_WaitMs
 12440 ;;		_printf
 12441 ;; This function is called by:
 12442 ;;		_APP_Tasks
 12443 ;; This function uses a non-reentrant model
 12444 ;;
 12445                           
 12446                           	psect	text49
 12447  005C6E                     __ptext49:
 12448                           	opt callstack 0
 12449  005C6E                     _display_ea_version:
 12450                           	opt callstack 12
 12451                           
 12452                           ;board/ea_display.c: 14: void display_ea_version(uint16_t pause);board/ea_display.c: 15:
      +                           {;board/ea_display.c: 16:  printf("%s", d_version);
 12453                           
 12454                           ; BSR set to: 0
 12455                           ;incstack = 0
 12456  005C6E  0E92               	movlw	low (STR_40+4)
 12457  005C70  0100               	movlb	0	; () banked
 12458  005C72  6FA9               	movwf	printf@fmt& (0+255),b
 12459  005C74  0E7F               	movlw	high (STR_40+4)
 12460  005C76  6FAA               	movwf	(printf@fmt+1)& (0+255),b
 12461  005C78  0EB4               	movlw	low _d_version
 12462  005C7A  6FAB               	movwf	(?_printf+2)& (0+255),b
 12463  005C7C  0E7D               	movlw	high _d_version
 12464  005C7E  6FAC               	movwf	(?_printf+3)& (0+255),b
 12465  005C80  ECFC  F02D         	call	_printf	;wreg free
 12466                           
 12467                           ;board/ea_display.c: 17:  WaitMs(pause);
 12468  005C84  C0B1  F018         	movff	display_ea_version@pause,WaitMs@numMilliseconds
 12469  005C88  C0B2  F019         	movff	display_ea_version@pause+1,WaitMs@numMilliseconds+1
 12470  005C8C  ECF4  F02E         	call	_WaitMs	;wreg free
 12471  005C90  0012               	return		;funcret
 12472  005C92                     __end_of_display_ea_version:
 12473                           	opt callstack 0
 12474                           
 12475 ;; *************** function _display_ea_line *****************
 12476 ;; Defined at:
 12477 ;;		line 32 in file "board/ea_display.c"
 12478 ;; Parameters:    Size  Location     Type
 12479 ;;  line            2   81[BANK0 ] PTR unsigned char 
 12480 ;;		 -> APP_Tasks@mc_response(66), 
 12481 ;; Auto vars:     Size  Location     Type
 12482 ;;		None
 12483 ;; Return value:  Size  Location     Type
 12484 ;;                  1    wreg      void 
 12485 ;; Registers used:
 12486 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12487 ;; Tracked objects:
 12488 ;;		On entry : 0/0
 12489 ;;		On exit  : 0/0
 12490 ;;		Unchanged: 0/0
 12491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12492 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12495 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12496 ;;Total ram usage:        2 bytes
 12497 ;; Hardware stack levels used:    1
 12498 ;; Hardware stack levels required when called:   17
 12499 ;; This function calls:
 12500 ;;		_printf
 12501 ;; This function is called by:
 12502 ;;		_APP_Tasks
 12503 ;; This function uses a non-reentrant model
 12504 ;;
 12505                           
 12506                           	psect	text50
 12507  005E54                     __ptext50:
 12508                           	opt callstack 0
 12509  005E54                     _display_ea_line:
 12510                           	opt callstack 12
 12511                           
 12512                           ;board/ea_display.c: 32: void display_ea_line(char * line);board/ea_display.c: 33: {;boa
      +                          rd/ea_display.c: 34:  printf("%s", line);
 12513                           
 12514                           ;incstack = 0
 12515  005E54  0E92               	movlw	low (STR_40+4)
 12516  005E56  0100               	movlb	0	; () banked
 12517  005E58  6FA9               	movwf	printf@fmt& (0+255),b
 12518  005E5A  0E7F               	movlw	high (STR_40+4)
 12519  005E5C  6FAA               	movwf	(printf@fmt+1)& (0+255),b
 12520  005E5E  C0B1  F0AB         	movff	display_ea_line@line,?_printf+2
 12521  005E62  C0B2  F0AC         	movff	display_ea_line@line+1,?_printf+3
 12522  005E66  ECFC  F02D         	call	_printf	;wreg free
 12523  005E6A  0012               	return		;funcret
 12524  005E6C                     __end_of_display_ea_line:
 12525                           	opt callstack 0
 12526                           
 12527 ;; *************** function _display_ea_init *****************
 12528 ;; Defined at:
 12529 ;;		line 8 in file "board/ea_display.c"
 12530 ;; Parameters:    Size  Location     Type
 12531 ;;  pause           2   81[BANK0 ] unsigned short 
 12532 ;; Auto vars:     Size  Location     Type
 12533 ;;		None
 12534 ;; Return value:  Size  Location     Type
 12535 ;;                  1    wreg      void 
 12536 ;; Registers used:
 12537 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12538 ;; Tracked objects:
 12539 ;;		On entry : 0/0
 12540 ;;		On exit  : 0/0
 12541 ;;		Unchanged: 0/0
 12542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12543 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12546 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12547 ;;Total ram usage:        2 bytes
 12548 ;; Hardware stack levels used:    1
 12549 ;; Hardware stack levels required when called:   17
 12550 ;; This function calls:
 12551 ;;		_WaitMs
 12552 ;;		_printf
 12553 ;; This function is called by:
 12554 ;;		_APP_Tasks
 12555 ;; This function uses a non-reentrant model
 12556 ;;
 12557                           
 12558                           	psect	text51
 12559  005C92                     __ptext51:
 12560                           	opt callstack 0
 12561  005C92                     _display_ea_init:
 12562                           	opt callstack 12
 12563                           
 12564                           ;board/ea_display.c: 8: void display_ea_init(uint16_t pause);board/ea_display.c: 9: {;bo
      +                          ard/ea_display.c: 10:  printf("%s", d_reset);
 12565                           
 12566                           ;incstack = 0
 12567  005C92  0E92               	movlw	low (STR_40+4)
 12568  005C94  0100               	movlb	0	; () banked
 12569  005C96  6FA9               	movwf	printf@fmt& (0+255),b
 12570  005C98  0E7F               	movlw	high (STR_40+4)
 12571  005C9A  6FAA               	movwf	(printf@fmt+1)& (0+255),b
 12572  005C9C  0EB7               	movlw	low _d_reset
 12573  005C9E  6FAB               	movwf	(?_printf+2)& (0+255),b
 12574  005CA0  0E7D               	movlw	high _d_reset
 12575  005CA2  6FAC               	movwf	(?_printf+3)& (0+255),b
 12576  005CA4  ECFC  F02D         	call	_printf	;wreg free
 12577                           
 12578                           ;board/ea_display.c: 11:  WaitMs(pause);
 12579  005CA8  C0B1  F018         	movff	display_ea_init@pause,WaitMs@numMilliseconds
 12580  005CAC  C0B2  F019         	movff	display_ea_init@pause+1,WaitMs@numMilliseconds+1
 12581  005CB0  ECF4  F02E         	call	_WaitMs	;wreg free
 12582  005CB4  0012               	return		;funcret
 12583  005CB6                     __end_of_display_ea_init:
 12584                           	opt callstack 0
 12585                           
 12586 ;; *************** function _display_ea_ff *****************
 12587 ;; Defined at:
 12588 ;;		line 20 in file "board/ea_display.c"
 12589 ;; Parameters:    Size  Location     Type
 12590 ;;  pause           2   81[BANK0 ] unsigned short 
 12591 ;; Auto vars:     Size  Location     Type
 12592 ;;		None
 12593 ;; Return value:  Size  Location     Type
 12594 ;;                  1    wreg      void 
 12595 ;; Registers used:
 12596 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12597 ;; Tracked objects:
 12598 ;;		On entry : 0/0
 12599 ;;		On exit  : 0/0
 12600 ;;		Unchanged: 0/0
 12601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12602 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12605 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12606 ;;Total ram usage:        2 bytes
 12607 ;; Hardware stack levels used:    1
 12608 ;; Hardware stack levels required when called:   17
 12609 ;; This function calls:
 12610 ;;		_WaitMs
 12611 ;;		_printf
 12612 ;; This function is called by:
 12613 ;;		_APP_Tasks
 12614 ;; This function uses a non-reentrant model
 12615 ;;
 12616                           
 12617                           	psect	text52
 12618  005CB6                     __ptext52:
 12619                           	opt callstack 0
 12620  005CB6                     _display_ea_ff:
 12621                           	opt callstack 12
 12622                           
 12623                           ;board/ea_display.c: 20: void display_ea_ff(uint16_t pause);board/ea_display.c: 21: {;bo
      +                          ard/ea_display.c: 22:  printf("%s", d_ff);
 12624                           
 12625                           ;incstack = 0
 12626  005CB6  0E92               	movlw	low (STR_40+4)
 12627  005CB8  0100               	movlb	0	; () banked
 12628  005CBA  6FA9               	movwf	printf@fmt& (0+255),b
 12629  005CBC  0E7F               	movlw	high (STR_40+4)
 12630  005CBE  6FAA               	movwf	(printf@fmt+1)& (0+255),b
 12631  005CC0  0EBA               	movlw	low _d_ff
 12632  005CC2  6FAB               	movwf	(?_printf+2)& (0+255),b
 12633  005CC4  0E7D               	movlw	high _d_ff
 12634  005CC6  6FAC               	movwf	(?_printf+3)& (0+255),b
 12635  005CC8  ECFC  F02D         	call	_printf	;wreg free
 12636                           
 12637                           ;board/ea_display.c: 23:  WaitMs(pause);
 12638  005CCC  C0B1  F018         	movff	display_ea_ff@pause,WaitMs@numMilliseconds
 12639  005CD0  C0B2  F019         	movff	display_ea_ff@pause+1,WaitMs@numMilliseconds+1
 12640  005CD4  ECF4  F02E         	call	_WaitMs	;wreg free
 12641  005CD8  0012               	return		;funcret
 12642  005CDA                     __end_of_display_ea_ff:
 12643                           	opt callstack 0
 12644                           
 12645 ;; *************** function _display_ea_cursor_off *****************
 12646 ;; Defined at:
 12647 ;;		line 26 in file "board/ea_display.c"
 12648 ;; Parameters:    Size  Location     Type
 12649 ;;  pause           2   81[BANK0 ] unsigned short 
 12650 ;; Auto vars:     Size  Location     Type
 12651 ;;		None
 12652 ;; Return value:  Size  Location     Type
 12653 ;;                  1    wreg      void 
 12654 ;; Registers used:
 12655 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12656 ;; Tracked objects:
 12657 ;;		On entry : 0/0
 12658 ;;		On exit  : 0/0
 12659 ;;		Unchanged: 0/0
 12660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12661 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12664 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12665 ;;Total ram usage:        2 bytes
 12666 ;; Hardware stack levels used:    1
 12667 ;; Hardware stack levels required when called:   17
 12668 ;; This function calls:
 12669 ;;		_WaitMs
 12670 ;;		_printf
 12671 ;; This function is called by:
 12672 ;;		_APP_Tasks
 12673 ;; This function uses a non-reentrant model
 12674 ;;
 12675                           
 12676                           	psect	text53
 12677  005CDA                     __ptext53:
 12678                           	opt callstack 0
 12679  005CDA                     _display_ea_cursor_off:
 12680                           	opt callstack 12
 12681                           
 12682                           ;board/ea_display.c: 26: void display_ea_cursor_off(uint16_t pause);board/ea_display.c: 
      +                          27: {;board/ea_display.c: 28:  printf("%s", d_cur_off);
 12683                           
 12684                           ;incstack = 0
 12685  005CDA  0E92               	movlw	low (STR_40+4)
 12686  005CDC  0100               	movlb	0	; () banked
 12687  005CDE  6FA9               	movwf	printf@fmt& (0+255),b
 12688  005CE0  0E7F               	movlw	high (STR_40+4)
 12689  005CE2  6FAA               	movwf	(printf@fmt+1)& (0+255),b
 12690  005CE4  0EB0               	movlw	low _d_cur_off
 12691  005CE6  6FAB               	movwf	(?_printf+2)& (0+255),b
 12692  005CE8  0E7D               	movlw	high _d_cur_off
 12693  005CEA  6FAC               	movwf	(?_printf+3)& (0+255),b
 12694  005CEC  ECFC  F02D         	call	_printf	;wreg free
 12695                           
 12696                           ;board/ea_display.c: 29:  WaitMs(pause);
 12697  005CF0  C0B1  F018         	movff	display_ea_cursor_off@pause,WaitMs@numMilliseconds
 12698  005CF4  C0B2  F019         	movff	display_ea_cursor_off@pause+1,WaitMs@numMilliseconds+1
 12699  005CF8  ECF4  F02E         	call	_WaitMs	;wreg free
 12700  005CFC  0012               	return		;funcret
 12701  005CFE                     __end_of_display_ea_cursor_off:
 12702                           	opt callstack 0
 12703                           
 12704 ;; *************** function _printf *****************
 12705 ;; Defined at:
 12706 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
 12707 ;; Parameters:    Size  Location     Type
 12708 ;;  fmt             2   73[BANK0 ] PTR const unsigned char 
 12709 ;;		 -> STR_8(3), STR_7(3), STR_6(3), STR_5(3), 
 12710 ;;		 -> STR_4(3), 
 12711 ;; Auto vars:     Size  Location     Type
 12712 ;;  ap              2   79[BANK0 ] PTR void [1]
 12713 ;;		 -> ?_printf(2), ?_sprintf(2), 
 12714 ;;  ret             2    0        int 
 12715 ;; Return value:  Size  Location     Type
 12716 ;;                  2   73[BANK0 ] int 
 12717 ;; Registers used:
 12718 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12719 ;; Tracked objects:
 12720 ;;		On entry : 0/0
 12721 ;;		On exit  : 0/0
 12722 ;;		Unchanged: 0/0
 12723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12724 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12725 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12727 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12728 ;;Total ram usage:        8 bytes
 12729 ;; Hardware stack levels used:    1
 12730 ;; Hardware stack levels required when called:   16
 12731 ;; This function calls:
 12732 ;;		_vfprintf
 12733 ;; This function is called by:
 12734 ;;		_display_ea_init
 12735 ;;		_display_ea_version
 12736 ;;		_display_ea_ff
 12737 ;;		_display_ea_cursor_off
 12738 ;;		_display_ea_line
 12739 ;; This function uses a non-reentrant model
 12740 ;;
 12741                           
 12742                           	psect	text54
 12743  005BF8                     __ptext54:
 12744                           	opt callstack 0
 12745  005BF8                     _printf:
 12746                           	opt callstack 12
 12747                           
 12748                           ;incstack = 0
 12749  005BF8  0EAB               	movlw	low (?_printf+2)
 12750  005BFA  0100               	movlb	0	; () banked
 12751  005BFC  6FAF               	movwf	printf@ap& (0+255),b
 12752  005BFE  0E00               	movlw	high (?_printf+2)
 12753  005C00  6FB0               	movwf	(printf@ap+1)& (0+255),b
 12754                           
 12755                           ; BSR set to: 0
 12756  005C02  0E00               	movlw	0
 12757  005C04  6FA1               	movwf	vfprintf@fp& (0+255),b
 12758  005C06  0E00               	movlw	0
 12759  005C08  6FA2               	movwf	(vfprintf@fp+1)& (0+255),b
 12760  005C0A  C0A9  F0A3         	movff	printf@fmt,vfprintf@fmt
 12761  005C0E  C0AA  F0A4         	movff	printf@fmt+1,vfprintf@fmt+1
 12762  005C12  0EAF               	movlw	low printf@ap
 12763  005C14  6FA5               	movwf	vfprintf@ap& (0+255),b
 12764  005C16  0E00               	movlw	high printf@ap
 12765  005C18  6FA6               	movwf	(vfprintf@ap+1)& (0+255),b
 12766  005C1A  EC5B  F029         	call	_vfprintf	;wreg free
 12767  005C1E  0012               	return		;funcret
 12768  005C20                     __end_of_printf:
 12769                           	opt callstack 0
 12770                           
 12771 ;; *************** function _vfprintf *****************
 12772 ;; Defined at:
 12773 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 12774 ;; Parameters:    Size  Location     Type
 12775 ;;  fp              2   65[BANK0 ] PTR struct _IO_FILE
 12776 ;;		 -> sprintf@f(6), NULL(0), 
 12777 ;;  fmt             2   67[BANK0 ] PTR const unsigned char 
 12778 ;;		 -> STR_50(2), STR_49(3), STR_48(15), STR_47(24), 
 12779 ;;		 -> STR_45(9), STR_44(11), STR_43(7), STR_42(7), 
 12780 ;;		 -> STR_41(7), STR_40(7), STR_10(21), STR_8(3), 
 12781 ;;		 -> STR_7(3), STR_6(3), STR_5(3), STR_4(3), 
 12782 ;;  ap              2   69[BANK0 ] PTR PTR void 
 12783 ;;		 -> printf@ap(2), sprintf@ap(2), 
 12784 ;; Auto vars:     Size  Location     Type
 12785 ;;  cfmt            2   71[BANK0 ] PTR unsigned char 
 12786 ;;		 -> STR_50(2), STR_49(3), STR_48(15), STR_47(24), 
 12787 ;;		 -> STR_45(9), STR_44(11), STR_43(7), STR_42(7), 
 12788 ;;		 -> STR_41(7), STR_40(7), STR_10(21), STR_8(3), 
 12789 ;;		 -> STR_7(3), STR_6(3), STR_5(3), STR_4(3), 
 12790 ;; Return value:  Size  Location     Type
 12791 ;;                  2   65[BANK0 ] int 
 12792 ;; Registers used:
 12793 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12794 ;; Tracked objects:
 12795 ;;		On entry : 0/0
 12796 ;;		On exit  : 0/0
 12797 ;;		Unchanged: 0/0
 12798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12799 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12800 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12802 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12803 ;;Total ram usage:        8 bytes
 12804 ;; Hardware stack levels used:    1
 12805 ;; Hardware stack levels required when called:   15
 12806 ;; This function calls:
 12807 ;;		_vfpfcnvrt
 12808 ;; This function is called by:
 12809 ;;		_sprintf
 12810 ;;		_printf
 12811 ;; This function uses a non-reentrant model
 12812 ;;
 12813                           
 12814                           	psect	text55
 12815  0052B6                     __ptext55:
 12816                           	opt callstack 0
 12817  0052B6                     _vfprintf:
 12818                           	opt callstack 13
 12819                           
 12820                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 12821                           
 12822                           ;incstack = 0
 12823  0052B6  C0A3  F0A7         	movff	vfprintf@fmt,vfprintf@cfmt
 12824  0052BA  C0A4  F0A8         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 12825                           
 12826                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 12827  0052BE  0E00               	movlw	0
 12828  0052C0  0100               	movlb	0	; () banked
 12829  0052C2  6FC3               	movwf	(_nout+1)& (0+255),b
 12830  0052C4  0E00               	movlw	0
 12831  0052C6  6FC2               	movwf	_nout& (0+255),b
 12832                           
 12833                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 12834  0052C8  D013               	goto	l10593
 12835  0052CA                     l10591:
 12836                           
 12837                           ; BSR set to: 0
 12838                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 12839  0052CA  C0A1  F07C         	movff	vfprintf@fp,vfpfcnvrt@fp
 12840  0052CE  C0A2  F07D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 12841  0052D2  0EA7               	movlw	low vfprintf@cfmt
 12842  0052D4  6F7E               	movwf	vfpfcnvrt@fmt& (0+255),b
 12843  0052D6  0E00               	movlw	high vfprintf@cfmt
 12844  0052D8  6F7F               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
 12845  0052DA  C0A5  F080         	movff	vfprintf@ap,vfpfcnvrt@ap
 12846  0052DE  C0A6  F081         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 12847  0052E2  ECC0  F007         	call	_vfpfcnvrt	;wreg free
 12848  0052E6  0100               	movlb	0	; () banked
 12849  0052E8  517C               	movf	?_vfpfcnvrt& (0+255),w,b
 12850  0052EA  27C2               	addwf	_nout& (0+255),f,b
 12851  0052EC  517D               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
 12852  0052EE  23C3               	addwfc	(_nout+1)& (0+255),f,b
 12853  0052F0                     l10593:
 12854                           
 12855                           ; BSR set to: 0
 12856                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 12857  0052F0  C0A7  FFF6         	movff	vfprintf@cfmt,tblptrl
 12858  0052F4  C0A8  FFF7         	movff	vfprintf@cfmt+1,tblptrh
 12859  0052F8                     	if	0	;tblptru may be non-zero
 12860  0052F8                     	endif
 12861  0052F8                     	if	0	;tblptru may be non-zero
 12862  0052F8                     	endif
 12863  0052F8  0008               	tblrd		*
 12864  0052FA  50F5               	movf	tablat,w,c
 12865  0052FC  0900               	iorlw	0
 12866  0052FE  A4D8               	btfss	status,2,c
 12867  005300  D7E4               	goto	l10591
 12868                           
 12869                           ; BSR set to: 0
 12870                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 12871  005302  C0C2  F0A1         	movff	_nout,?_vfprintf
 12872  005306  C0C3  F0A2         	movff	_nout+1,?_vfprintf+1
 12873                           
 12874                           ; BSR set to: 0
 12875  00530A  0012               	return		;funcret
 12876  00530C                     __end_of_vfprintf:
 12877                           	opt callstack 0
 12878                           
 12879 ;; *************** function _vfpfcnvrt *****************
 12880 ;; Defined at:
 12881 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 12882 ;; Parameters:    Size  Location     Type
 12883 ;;  fp              2   28[BANK0 ] PTR struct _IO_FILE
 12884 ;;		 -> sprintf@f(6), NULL(0), 
 12885 ;;  fmt             2   30[BANK0 ] PTR PTR unsigned char 
 12886 ;;		 -> vfprintf@cfmt(2), 
 12887 ;;  ap              2   32[BANK0 ] PTR PTR void 
 12888 ;;		 -> printf@ap(2), sprintf@ap(2), 
 12889 ;; Auto vars:     Size  Location     Type
 12890 ;;  llu             8   57[BANK0 ] unsigned long long 
 12891 ;;  ll              8   46[BANK0 ] long long 
 12892 ;;  f               4    0        long long 
 12893 ;;  ct              3    0        unsigned char [3]
 12894 ;;  vp              2   54[BANK0 ] PTR void 
 12895 ;;		 -> ?_printf(2), ?_sprintf(2), STR_46(2), STR_39(21), 
 12896 ;;		 -> STR_38(18), STR_26(13), STR_24(21), STR_23(21), 
 12897 ;;		 -> STR_22(21), STR_21(21), STR_20(21), STR_19(21), 
 12898 ;;		 -> STR_13(11), STR_12(21), STR_11(21), STR_9(15), 
 12899 ;;		 -> d_cur_off(4), d_ff(2), d_version(3), d_reset(3), 
 12900 ;;		 -> STR_3(9), STR_2(12), STR_1(4), APP_Tasks@mc_response(66), 
 12901 ;;		 -> appData(76), 
 12902 ;;  done            2   40[BANK0 ] int 
 12903 ;;  cp              2   38[BANK0 ] PTR unsigned char 
 12904 ;;		 -> ?_printf(2), ?_sprintf(2), STR_46(2), STR_39(21), 
 12905 ;;		 -> STR_38(18), STR_26(13), STR_24(21), STR_23(21), 
 12906 ;;		 -> STR_22(21), STR_21(21), STR_20(21), STR_19(21), 
 12907 ;;		 -> STR_13(11), STR_12(21), STR_11(21), STR_9(15), 
 12908 ;;		 -> d_cur_off(4), d_ff(2), d_version(3), d_reset(3), 
 12909 ;;		 -> STR_3(9), STR_2(12), STR_1(4), APP_Tasks@mc_response(66), 
 12910 ;;		 -> appData(76), 
 12911 ;;  i               2    0        int 
 12912 ;;  c               1   56[BANK0 ] unsigned char 
 12913 ;; Return value:  Size  Location     Type
 12914 ;;                  2   28[BANK0 ] int 
 12915 ;; Registers used:
 12916 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12917 ;; Tracked objects:
 12918 ;;		On entry : 0/0
 12919 ;;		On exit  : 0/0
 12920 ;;		Unchanged: 0/0
 12921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12922 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12923 ;;      Locals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12924 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12925 ;;      Totals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12926 ;;Total ram usage:       37 bytes
 12927 ;; Hardware stack levels used:    1
 12928 ;; Hardware stack levels required when called:   14
 12929 ;; This function calls:
 12930 ;;		_atoi
 12931 ;;		_ctoa
 12932 ;;		_dtoa
 12933 ;;		_fputc
 12934 ;;		_isdigit
 12935 ;;		_otoa
 12936 ;;		_stoa
 12937 ;;		_strncmp
 12938 ;;		_utoa
 12939 ;;		_xtoa
 12940 ;; This function is called by:
 12941 ;;		_vfprintf
 12942 ;; This function uses a non-reentrant model
 12943 ;;
 12944                           
 12945                           	psect	text56
 12946  000F80                     __ptext56:
 12947                           	opt callstack 0
 12948  000F80                     _vfpfcnvrt:
 12949                           	opt callstack 13
 12950                           
 12951                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 12952                           
 12953                           ; BSR set to: 0
 12954                           ;incstack = 0
 12955  000F80  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12956  000F84  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12957  000F88  CFDE FFF6          	movff	postinc2,tblptrl
 12958  000F8C  CFDD FFF7          	movff	postdec2,tblptrh
 12959  000F90                     	if	0	;tblptru may be non-zero
 12960  000F90                     	endif
 12961  000F90                     	if	0	;tblptru may be non-zero
 12962  000F90                     	endif
 12963  000F90  0008               	tblrd		*
 12964  000F92  50F5               	movf	tablat,w,c
 12965  000F94  0A25               	xorlw	37
 12966  000F96  A4D8               	btfss	status,2,c
 12967  000F98  EFEB  F00E         	goto	l9957
 12968                           
 12969                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 12970  000F9C  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12971  000FA0  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12972  000FA4  2ADE               	incf	postinc2,f,c
 12973  000FA6  0E00               	movlw	0
 12974  000FA8  22DD               	addwfc	postdec2,f,c
 12975                           
 12976                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 12977  000FAA  0E00               	movlw	0
 12978  000FAC  6E3C               	movwf	_width+1,c
 12979  000FAE  0E00               	movlw	0
 12980  000FB0  6E3B               	movwf	_width,c
 12981  000FB2  C03B  F03F         	movff	_width,_flags
 12982  000FB6  C03C  F040         	movff	_width+1,_flags+1
 12983                           
 12984                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 12985  000FBA  683D               	setf	_prec,c
 12986  000FBC  683E               	setf	_prec+1,c
 12987                           
 12988                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 688:         done = 0;
 12989  000FBE  0E00               	movlw	0
 12990  000FC0  0100               	movlb	0	; () banked
 12991  000FC2  6F89               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 12992  000FC4  0E00               	movlw	0
 12993  000FC6  D014               	goto	L14
 12994  000FC8                     l9649:
 12995                           
 12996                           ; BSR set to: 0
 12997                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 692:                     flag
      +                          s |= (1 << 0);
 12998  000FC8  803F               	bsf	_flags,0,c
 12999  000FCA                     l9651:
 13000                           
 13001                           ; BSR set to: 0
 13002                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 693:                     ++*f
      +                          mt;
 13003  000FCA  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13004  000FCE  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13005  000FD2  2ADE               	incf	postinc2,f,c
 13006  000FD4  0E00               	movlw	0
 13007  000FD6  22DD               	addwfc	postdec2,f,c
 13008                           
 13009                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 694:                     brea
      +                          k;
 13010  000FD8  D02E               	goto	l9675
 13011  000FDA                     l9653:
 13012                           
 13013                           ; BSR set to: 0
 13014                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 696:                     flag
      +                          s |= (1 << 1);
 13015  000FDA  823F               	bsf	_flags,1,c
 13016  000FDC  D7F6               	goto	l9651
 13017  000FDE                     l9657:
 13018                           
 13019                           ; BSR set to: 0
 13020                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 700:                     flag
      +                          s |= (1 << 2);
 13021  000FDE  843F               	bsf	_flags,2,c
 13022  000FE0  D7F4               	goto	l9651
 13023  000FE2                     l9661:
 13024                           
 13025                           ; BSR set to: 0
 13026                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 704:                     flag
      +                          s |= (1 << 3);
 13027  000FE2  863F               	bsf	_flags,3,c
 13028  000FE4  D7F2               	goto	l9651
 13029  000FE6                     l9665:
 13030                           
 13031                           ; BSR set to: 0
 13032                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 708:                     flag
      +                          s |= (1 << 4);
 13033  000FE6  883F               	bsf	_flags,4,c
 13034  000FE8  D7F0               	goto	l9651
 13035  000FEA                     l9669:
 13036                           
 13037                           ; BSR set to: 0
 13038                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 712:                     done
      +                           = 1;
 13039  000FEA  0E00               	movlw	0
 13040  000FEC  6F89               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 13041  000FEE  0E01               	movlw	1
 13042  000FF0                     L14:
 13043  000FF0  6F88               	movwf	vfpfcnvrt@done& (0+255),b
 13044                           
 13045                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 713:                     brea
      +                          k;
 13046  000FF2  D021               	goto	l9675
 13047  000FF4                     l9673:
 13048                           
 13049                           ; BSR set to: 0
 13050  000FF4  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13051  000FF8  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13052  000FFC  CFDE FFF6          	movff	postinc2,tblptrl
 13053  001000  CFDD FFF7          	movff	postdec2,tblptrh
 13054  001004                     	if	0	;tblptru may be non-zero
 13055  001004                     	endif
 13056  001004                     	if	0	;tblptru may be non-zero
 13057  001004                     	endif
 13058  001004  0008               	tblrd		*
 13059  001006  50F5               	movf	tablat,w,c
 13060  001008  6F82               	movwf	??_vfpfcnvrt& (0+255),b
 13061  00100A  6B83               	clrf	(??_vfpfcnvrt+1)& (0+255),b
 13062                           
 13063                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13064                           ; Switch size 1, requested type "simple"
 13065                           ; Number of cases is 1, Range of values is 0 to 0
 13066                           ; switch strategies available:
 13067                           ; Name         Instructions Cycles
 13068                           ; simple_byte            4     3 (average)
 13069                           ;	Chosen strategy is simple_byte
 13070  00100C  5183               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
 13071  00100E  0A00               	xorlw	0	; case 0
 13072  001010  A4D8               	btfss	status,2,c
 13073  001012  D7EB               	goto	l9669
 13074                           
 13075                           ; BSR set to: 0
 13076                           ; Switch size 1, requested type "simple"
 13077                           ; Number of cases is 5, Range of values is 32 to 48
 13078                           ; switch strategies available:
 13079                           ; Name         Instructions Cycles
 13080                           ; simple_byte           16     9 (average)
 13081                           ;	Chosen strategy is simple_byte
 13082  001014  5182               	movf	??_vfpfcnvrt& (0+255),w,b
 13083  001016  0A20               	xorlw	32	; case 32
 13084  001018  B4D8               	btfsc	status,2,c
 13085  00101A  D7E3               	goto	l9661
 13086  00101C  0A03               	xorlw	3	; case 35
 13087  00101E  B4D8               	btfsc	status,2,c
 13088  001020  D7E2               	goto	l9665
 13089  001022  0A08               	xorlw	8	; case 43
 13090  001024  B4D8               	btfsc	status,2,c
 13091  001026  D7DB               	goto	l9657
 13092  001028  0A06               	xorlw	6	; case 45
 13093  00102A  B4D8               	btfsc	status,2,c
 13094  00102C  D7CD               	goto	l9649
 13095  00102E  0A1D               	xorlw	29	; case 48
 13096  001030  B4D8               	btfsc	status,2,c
 13097  001032  D7D3               	goto	l9653
 13098  001034  D7DA               	goto	l9669
 13099  001036                     l9675:
 13100                           
 13101                           ; BSR set to: 0
 13102                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 689:         while (!done) {
 13103  001036  5188               	movf	vfpfcnvrt@done& (0+255),w,b
 13104  001038  1189               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
 13105  00103A  B4D8               	btfsc	status,2,c
 13106  00103C  D7DB               	goto	l9673
 13107                           
 13108                           ; BSR set to: 0
 13109                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 716:         if (flags & (1 <
      +                          < 0)) {
 13110  00103E  B03F               	btfsc	_flags,0,c
 13111                           
 13112                           ; BSR set to: 0
 13113                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 717:             flags &= ~(1
      +                           << 1);
 13114  001040  923F               	bcf	_flags,1,c
 13115                           
 13116                           ; BSR set to: 0
 13117                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 13118  001042  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13119  001046  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13120  00104A  CFDE FFF6          	movff	postinc2,tblptrl
 13121  00104E  CFDD FFF7          	movff	postdec2,tblptrh
 13122  001052                     	if	0	;tblptru may be non-zero
 13123  001052                     	endif
 13124  001052                     	if	0	;tblptru may be non-zero
 13125  001052                     	endif
 13126  001052  0008               	tblrd		*
 13127  001054  50F5               	movf	tablat,w,c
 13128  001056  0A2A               	xorlw	42
 13129  001058  A4D8               	btfss	status,2,c
 13130  00105A  D023               	goto	l9687
 13131                           
 13132                           ; BSR set to: 0
 13133                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 13134  00105C  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13135  001060  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13136  001064  2ADE               	incf	postinc2,f,c
 13137  001066  0E00               	movlw	0
 13138  001068  22DD               	addwfc	postdec2,f,c
 13139                           
 13140                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 13141  00106A  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 13142  00106E  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 13143  001072  CFDF F082          	movff	indf2,??_vfpfcnvrt
 13144  001076  0E02               	movlw	2
 13145  001078  26DE               	addwf	postinc2,f,c
 13146  00107A  CFDF F083          	movff	indf2,??_vfpfcnvrt+1
 13147  00107E  0E00               	movlw	0
 13148  001080  22DD               	addwfc	postdec2,f,c
 13149  001082  C082  FFD9         	movff	??_vfpfcnvrt,fsr2l
 13150  001086  C083  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 13151  00108A  CFDE F03B          	movff	postinc2,_width
 13152  00108E  CFDD F03C          	movff	postdec2,_width+1
 13153                           
 13154                           ; BSR set to: 0
 13155                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 13156  001092  AE3C               	btfss	_width+1,7,c
 13157  001094  D040               	goto	u12060
 13158                           
 13159                           ; BSR set to: 0
 13160                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 13161  001096  803F               	bsf	_flags,0,c
 13162                           
 13163                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 13164  001098  6C3B               	negf	_width,c
 13165  00109A  1E3C               	comf	_width+1,f,c
 13166  00109C  B0D8               	btfsc	status,0,c
 13167  00109E  2A3C               	incf	_width+1,f,c
 13168  0010A0  D03A               	goto	u12060
 13169  0010A2                     l9687:
 13170                           
 13171                           ; BSR set to: 0
 13172                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 13173  0010A2  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13174  0010A6  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13175  0010AA  CFDE F01A          	movff	postinc2,atoi@s
 13176  0010AE  CFDD F01B          	movff	postdec2,atoi@s+1
 13177  0010B2  ECB5  F021         	call	_atoi	;wreg free
 13178  0010B6  C01A  F03B         	movff	?_atoi,_width
 13179  0010BA  C01B  F03C         	movff	?_atoi+1,_width+1
 13180                           
 13181                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 13182  0010BE  D007               	goto	l9691
 13183  0010C0                     l9689:
 13184                           
 13185                           ; BSR set to: 0
 13186                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 13187  0010C0  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13188  0010C4  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13189  0010C8  2ADE               	incf	postinc2,f,c
 13190  0010CA  0E00               	movlw	0
 13191  0010CC  22DD               	addwfc	postdec2,f,c
 13192  0010CE                     l9691:
 13193  0010CE  0ED0               	movlw	208
 13194  0010D0  0100               	movlb	0	; () banked
 13195  0010D2  6F82               	movwf	??_vfpfcnvrt& (0+255),b
 13196  0010D4  0EFF               	movlw	255
 13197  0010D6  6F83               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 13198  0010D8  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13199  0010DC  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13200  0010E0  CFDE FFF6          	movff	postinc2,tblptrl
 13201  0010E4  CFDD FFF7          	movff	postdec2,tblptrh
 13202  0010E8                     	if	0	;tblptru may be non-zero
 13203  0010E8                     	endif
 13204  0010E8                     	if	0	;tblptru may be non-zero
 13205  0010E8                     	endif
 13206  0010E8  0008               	tblrd		*
 13207  0010EA  50F5               	movf	tablat,w,c
 13208  0010EC  6F84               	movwf	(??_vfpfcnvrt+2)& (0+255),b
 13209  0010EE  6B85               	clrf	(??_vfpfcnvrt+3)& (0+255),b
 13210  0010F0  5182               	movf	??_vfpfcnvrt& (0+255),w,b
 13211  0010F2  2784               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
 13212  0010F4  5183               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
 13213  0010F6  2385               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
 13214  0010F8  5185               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
 13215  0010FA  E106               	bnz	u12040
 13216  0010FC  0E0A               	movlw	10
 13217  0010FE  5D84               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
 13218  001100  B0D8               	btfsc	status,0,c
 13219  001102  D002               	goto	u12040
 13220  001104  0E01               	movlw	1
 13221  001106  D001               	goto	u12050
 13222  001108                     u12040:
 13223  001108  0E00               	movlw	0
 13224  00110A                     u12050:
 13225  00110A  6F8A               	movwf	_vfpfcnvrt$2972& (0+255),b
 13226  00110C  6B8B               	clrf	(_vfpfcnvrt$2972+1)& (0+255),b
 13227                           
 13228                           ; BSR set to: 0
 13229  00110E  518A               	movf	_vfpfcnvrt$2972& (0+255),w,b
 13230  001110  118B               	iorwf	(_vfpfcnvrt$2972+1)& (0+255),w,b
 13231  001112  A4D8               	btfss	status,2,c
 13232  001114  D7D5               	goto	l9689
 13233  001116                     u12060:
 13234                           
 13235                           ; BSR set to: 0
 13236                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 13237  001116  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13238  00111A  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13239  00111E  CFDE FFF6          	movff	postinc2,tblptrl
 13240  001122  CFDD FFF7          	movff	postdec2,tblptrh
 13241  001126                     	if	0	;tblptru may be non-zero
 13242  001126                     	endif
 13243  001126                     	if	0	;tblptru may be non-zero
 13244  001126                     	endif
 13245  001126  0008               	tblrd		*
 13246  001128  50F5               	movf	tablat,w,c
 13247  00112A  0A2E               	xorlw	46
 13248  00112C  A4D8               	btfss	status,2,c
 13249  00112E  D06E               	goto	u12110
 13250                           
 13251                           ; BSR set to: 0
 13252                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 13253  001130  0E00               	movlw	0
 13254  001132  6E3E               	movwf	_prec+1,c
 13255  001134  0E00               	movlw	0
 13256  001136  6E3D               	movwf	_prec,c
 13257                           
 13258                           ; BSR set to: 0
 13259                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 13260  001138  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13261  00113C  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13262  001140  2ADE               	incf	postinc2,f,c
 13263  001142  0E00               	movlw	0
 13264  001144  22DD               	addwfc	postdec2,f,c
 13265                           
 13266                           ; BSR set to: 0
 13267                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 13268  001146  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13269  00114A  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13270  00114E  CFDE FFF6          	movff	postinc2,tblptrl
 13271  001152  CFDD FFF7          	movff	postdec2,tblptrh
 13272  001156                     	if	0	;tblptru may be non-zero
 13273  001156                     	endif
 13274  001156                     	if	0	;tblptru may be non-zero
 13275  001156                     	endif
 13276  001156  0008               	tblrd		*
 13277  001158  50F5               	movf	tablat,w,c
 13278  00115A  0A2A               	xorlw	42
 13279  00115C  A4D8               	btfss	status,2,c
 13280  00115E  D01C               	goto	l9707
 13281                           
 13282                           ; BSR set to: 0
 13283                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 13284  001160  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13285  001164  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13286  001168  2ADE               	incf	postinc2,f,c
 13287  00116A  0E00               	movlw	0
 13288  00116C  22DD               	addwfc	postdec2,f,c
 13289                           
 13290                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 13291  00116E  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 13292  001172  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 13293  001176  CFDF F082          	movff	indf2,??_vfpfcnvrt
 13294  00117A  0E02               	movlw	2
 13295  00117C  26DE               	addwf	postinc2,f,c
 13296  00117E  CFDF F083          	movff	indf2,??_vfpfcnvrt+1
 13297  001182  0E00               	movlw	0
 13298  001184  22DD               	addwfc	postdec2,f,c
 13299  001186  C082  FFD9         	movff	??_vfpfcnvrt,fsr2l
 13300  00118A  C083  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 13301  00118E  CFDE F03D          	movff	postinc2,_prec
 13302  001192  CFDD F03E          	movff	postdec2,_prec+1
 13303                           
 13304                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 746:             } else {
 13305  001196  D03A               	goto	u12110
 13306  001198                     l9707:
 13307                           
 13308                           ; BSR set to: 0
 13309                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 13310  001198  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13311  00119C  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13312  0011A0  CFDE F01A          	movff	postinc2,atoi@s
 13313  0011A4  CFDD F01B          	movff	postdec2,atoi@s+1
 13314  0011A8  ECB5  F021         	call	_atoi	;wreg free
 13315  0011AC  C01A  F03D         	movff	?_atoi,_prec
 13316  0011B0  C01B  F03E         	movff	?_atoi+1,_prec+1
 13317                           
 13318                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 13319  0011B4  D007               	goto	l9711
 13320  0011B6                     l9709:
 13321                           
 13322                           ; BSR set to: 0
 13323                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 13324  0011B6  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13325  0011BA  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13326  0011BE  2ADE               	incf	postinc2,f,c
 13327  0011C0  0E00               	movlw	0
 13328  0011C2  22DD               	addwfc	postdec2,f,c
 13329  0011C4                     l9711:
 13330  0011C4  0ED0               	movlw	208
 13331  0011C6  0100               	movlb	0	; () banked
 13332  0011C8  6F82               	movwf	??_vfpfcnvrt& (0+255),b
 13333  0011CA  0EFF               	movlw	255
 13334  0011CC  6F83               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 13335  0011CE  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13336  0011D2  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13337  0011D6  CFDE FFF6          	movff	postinc2,tblptrl
 13338  0011DA  CFDD FFF7          	movff	postdec2,tblptrh
 13339  0011DE                     	if	0	;tblptru may be non-zero
 13340  0011DE                     	endif
 13341  0011DE                     	if	0	;tblptru may be non-zero
 13342  0011DE                     	endif
 13343  0011DE  0008               	tblrd		*
 13344  0011E0  50F5               	movf	tablat,w,c
 13345  0011E2  6F84               	movwf	(??_vfpfcnvrt+2)& (0+255),b
 13346  0011E4  6B85               	clrf	(??_vfpfcnvrt+3)& (0+255),b
 13347  0011E6  5182               	movf	??_vfpfcnvrt& (0+255),w,b
 13348  0011E8  2784               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
 13349  0011EA  5183               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
 13350  0011EC  2385               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
 13351  0011EE  5185               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
 13352  0011F0  E106               	bnz	u12090
 13353  0011F2  0E0A               	movlw	10
 13354  0011F4  5D84               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
 13355  0011F6  B0D8               	btfsc	status,0,c
 13356  0011F8  D002               	goto	u12090
 13357  0011FA  0E01               	movlw	1
 13358  0011FC  D001               	goto	u12100
 13359  0011FE                     u12090:
 13360  0011FE  0E00               	movlw	0
 13361  001200                     u12100:
 13362  001200  6F8C               	movwf	_vfpfcnvrt$2973& (0+255),b
 13363  001202  6B8D               	clrf	(_vfpfcnvrt$2973+1)& (0+255),b
 13364                           
 13365                           ; BSR set to: 0
 13366  001204  518C               	movf	_vfpfcnvrt$2973& (0+255),w,b
 13367  001206  118D               	iorwf	(_vfpfcnvrt$2973+1)& (0+255),w,b
 13368  001208  A4D8               	btfss	status,2,c
 13369  00120A  D7D5               	goto	l9709
 13370  00120C                     u12110:
 13371                           
 13372                           ; BSR set to: 0
 13373                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 13374  00120C  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13375  001210  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13376  001214  CFDE FFF6          	movff	postinc2,tblptrl
 13377  001218  CFDD FFF7          	movff	postdec2,tblptrh
 13378  00121C                     	if	0	;tblptru may be non-zero
 13379  00121C                     	endif
 13380  00121C                     	if	0	;tblptru may be non-zero
 13381  00121C                     	endif
 13382  00121C  0008               	tblrd		*
 13383  00121E  50F5               	movf	tablat,w,c
 13384  001220  0A63               	xorlw	99
 13385  001222  A4D8               	btfss	status,2,c
 13386  001224  D026               	goto	l9725
 13387                           
 13388                           ; BSR set to: 0
 13389                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 13390  001226  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13391  00122A  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13392  00122E  2ADE               	incf	postinc2,f,c
 13393  001230  0E00               	movlw	0
 13394  001232  22DD               	addwfc	postdec2,f,c
 13395                           
 13396                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 13397  001234  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 13398  001238  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 13399  00123C  CFDF F082          	movff	indf2,??_vfpfcnvrt
 13400  001240  0E02               	movlw	2
 13401  001242  26DE               	addwf	postinc2,f,c
 13402  001244  CFDF F083          	movff	indf2,??_vfpfcnvrt+1
 13403  001248  0E00               	movlw	0
 13404  00124A  22DD               	addwfc	postdec2,f,c
 13405  00124C  C082  FFD9         	movff	??_vfpfcnvrt,fsr2l
 13406  001250  C083  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 13407  001254  50DF               	movf	indf2,w,c
 13408  001256  6F98               	movwf	vfpfcnvrt@c& (0+255),b
 13409                           
 13410                           ; BSR set to: 0
 13411                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 13412  001258  C07C  F030         	movff	vfpfcnvrt@fp,ctoa@fp
 13413  00125C  C07D  F031         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
 13414  001260  C098  F032         	movff	vfpfcnvrt@c,ctoa@c
 13415  001264  EC78  F02A         	call	_ctoa	;wreg free
 13416  001268  C030  F07C         	movff	?_ctoa,?_vfpfcnvrt
 13417  00126C  C031  F07D         	movff	?_ctoa+1,?_vfpfcnvrt+1
 13418  001270  0012               	return	
 13419  001272                     l9725:
 13420                           
 13421                           ; BSR set to: 0
 13422                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 802:         if (!strncmp(*fm
      +                          t, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi", ((sizeof("hhi")
      +                          /sizeof("hhi"[0]))-1))) {
 13423  001272  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13424  001276  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13425  00127A  CFDE F013          	movff	postinc2,strncmp@_l
 13426  00127E  CFDD F014          	movff	postdec2,strncmp@_l+1
 13427  001282  0ECB               	movlw	low STR_51
 13428  001284  6E15               	movwf	strncmp@_r,c
 13429  001286  0E7F               	movlw	high STR_51
 13430  001288  6E16               	movwf	strncmp@_r+1,c
 13431  00128A  0E00               	movlw	0
 13432  00128C  6E18               	movwf	strncmp@n+1,c
 13433  00128E  0E03               	movlw	3
 13434  001290  6E17               	movwf	strncmp@n,c
 13435  001292  EC13  F024         	call	_strncmp	;wreg free
 13436  001296  5013               	movf	?_strncmp,w,c
 13437  001298  1014               	iorwf	?_strncmp+1,w,c
 13438  00129A  B4D8               	btfsc	status,2,c
 13439  00129C  D016               	goto	u12140
 13440  00129E  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13441  0012A2  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13442  0012A6  CFDE F013          	movff	postinc2,strncmp@_l
 13443  0012AA  CFDD F014          	movff	postdec2,strncmp@_l+1
 13444  0012AE  0ECF               	movlw	low STR_55
 13445  0012B0  6E15               	movwf	strncmp@_r,c
 13446  0012B2  0E7F               	movlw	high STR_55
 13447  0012B4  6E16               	movwf	strncmp@_r+1,c
 13448  0012B6  0E00               	movlw	0
 13449  0012B8  6E18               	movwf	strncmp@n+1,c
 13450  0012BA  0E03               	movlw	3
 13451  0012BC  6E17               	movwf	strncmp@n,c
 13452  0012BE  EC13  F024         	call	_strncmp	;wreg free
 13453  0012C2  5013               	movf	?_strncmp,w,c
 13454  0012C4  1014               	iorwf	?_strncmp+1,w,c
 13455  0012C6  A4D8               	btfss	status,2,c
 13456  0012C8  D040               	goto	l9735
 13457  0012CA                     u12140:
 13458                           
 13459                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 803: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 805:             *fmt += ((sizeof("hhd")/sizeof("hhd"
      +                          [0]))-1);
 13460  0012CA  0E03               	movlw	3
 13461  0012CC  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13462  0012D0  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13463  0012D4  26DE               	addwf	postinc2,f,c
 13464  0012D6  0E00               	movlw	0
 13465  0012D8  22DD               	addwfc	postdec2,f,c
 13466                           
 13467                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 806:             ll = (long l
      +                          ong)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
 13468  0012DA  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 13469  0012DE  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 13470  0012E2  CFDF F082          	movff	indf2,??_vfpfcnvrt
 13471  0012E6  0E02               	movlw	2
 13472  0012E8  26DE               	addwf	postinc2,f,c
 13473  0012EA  CFDF F083          	movff	indf2,??_vfpfcnvrt+1
 13474  0012EE  0E00               	movlw	0
 13475  0012F0  22DD               	addwfc	postdec2,f,c
 13476  0012F2  C082  FFD9         	movff	??_vfpfcnvrt,fsr2l
 13477  0012F6  C083  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 13478  0012FA  50DF               	movf	indf2,w,c
 13479  0012FC  0100               	movlb	0	; () banked
 13480  0012FE  6F8E               	movwf	vfpfcnvrt@ll& (0+255),b
 13481  001300  0E00               	movlw	0
 13482  001302  BF8E               	btfsc	vfpfcnvrt@ll& (0+255),7,b
 13483  001304  0EFF               	movlw	-1
 13484  001306  6F8F               	movwf	(vfpfcnvrt@ll+1)& (0+255),b
 13485  001308                     L15:
 13486  001308  6F90               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
 13487  00130A  6F91               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
 13488  00130C  6F92               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
 13489  00130E  6F93               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
 13490  001310  6F94               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
 13491  001312  6F95               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
 13492  001314                     l9731:
 13493                           
 13494                           ; BSR set to: 0
 13495                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 808:             return dtoa(
      +                          fp, ll);
 13496  001314  C07C  F030         	movff	vfpfcnvrt@fp,dtoa@fp
 13497  001318  C07D  F031         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 13498  00131C  C08E  F032         	movff	vfpfcnvrt@ll,dtoa@d
 13499  001320  C08F  F033         	movff	vfpfcnvrt@ll+1,dtoa@d+1
 13500  001324  C090  F034         	movff	vfpfcnvrt@ll+2,dtoa@d+2
 13501  001328  C091  F035         	movff	vfpfcnvrt@ll+3,dtoa@d+3
 13502  00132C  C092  F036         	movff	vfpfcnvrt@ll+4,dtoa@d+4
 13503  001330  C093  F037         	movff	vfpfcnvrt@ll+5,dtoa@d+5
 13504  001334  C094  F038         	movff	vfpfcnvrt@ll+6,dtoa@d+6
 13505  001338  C095  F039         	movff	vfpfcnvrt@ll+7,dtoa@d+7
 13506  00133C  ECD2  F01B         	call	_dtoa	;wreg free
 13507  001340  C030  F07C         	movff	?_dtoa,?_vfpfcnvrt
 13508  001344  C031  F07D         	movff	?_dtoa+1,?_vfpfcnvrt+1
 13509  001348  0012               	return	
 13510  00134A                     l9735:
 13511                           
 13512                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 814:         if (!strncmp(*fm
      +                          t, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", ((sizeof("hi")/size
      +                          of("hi"[0]))-1))) {
 13513  00134A  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13514  00134E  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13515  001352  CFDE F013          	movff	postinc2,strncmp@_l
 13516  001356  CFDD F014          	movff	postdec2,strncmp@_l+1
 13517  00135A  0ECC               	movlw	low (STR_51+1)
 13518  00135C  6E15               	movwf	strncmp@_r,c
 13519  00135E  0E7F               	movlw	high (STR_51+1)
 13520  001360  6E16               	movwf	strncmp@_r+1,c
 13521  001362  0E00               	movlw	0
 13522  001364  6E18               	movwf	strncmp@n+1,c
 13523  001366  0E02               	movlw	2
 13524  001368  6E17               	movwf	strncmp@n,c
 13525  00136A  EC13  F024         	call	_strncmp	;wreg free
 13526  00136E  5013               	movf	?_strncmp,w,c
 13527  001370  1014               	iorwf	?_strncmp+1,w,c
 13528  001372  B4D8               	btfsc	status,2,c
 13529  001374  D016               	goto	u12160
 13530  001376  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13531  00137A  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13532  00137E  CFDE F013          	movff	postinc2,strncmp@_l
 13533  001382  CFDD F014          	movff	postdec2,strncmp@_l+1
 13534  001386  0ED0               	movlw	low (STR_55+1)
 13535  001388  6E15               	movwf	strncmp@_r,c
 13536  00138A  0E7F               	movlw	high (STR_55+1)
 13537  00138C  6E16               	movwf	strncmp@_r+1,c
 13538  00138E  0E00               	movlw	0
 13539  001390  6E18               	movwf	strncmp@n+1,c
 13540  001392  0E02               	movlw	2
 13541  001394  6E17               	movwf	strncmp@n,c
 13542  001396  EC13  F024         	call	_strncmp	;wreg free
 13543  00139A  5013               	movf	?_strncmp,w,c
 13544  00139C  1014               	iorwf	?_strncmp+1,w,c
 13545  00139E  A4D8               	btfss	status,2,c
 13546  0013A0  D007               	goto	l9745
 13547  0013A2                     u12160:
 13548                           
 13549                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 815: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 817:             *fmt += ((sizeof("hd")/sizeof("hd"[0
      +                          ]))-1);
 13550  0013A2  0E02               	movlw	2
 13551  0013A4  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13552  0013A8  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13553  0013AC  26DE               	addwf	postinc2,f,c
 13554  0013AE  D01F               	goto	L19
 13555  0013B0                     l9745:
 13556                           
 13557                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 13558  0013B0  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13559  0013B4  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13560  0013B8  CFDE FFF6          	movff	postinc2,tblptrl
 13561  0013BC  CFDD FFF7          	movff	postdec2,tblptrh
 13562  0013C0                     	if	0	;tblptru may be non-zero
 13563  0013C0                     	endif
 13564  0013C0                     	if	0	;tblptru may be non-zero
 13565  0013C0                     	endif
 13566  0013C0  0008               	tblrd		*
 13567  0013C2  50F5               	movf	tablat,w,c
 13568  0013C4  0A64               	xorlw	100
 13569  0013C6  B4D8               	btfsc	status,2,c
 13570  0013C8  D00D               	goto	u12180
 13571  0013CA  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13572  0013CE  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13573  0013D2  CFDE FFF6          	movff	postinc2,tblptrl
 13574  0013D6  CFDD FFF7          	movff	postdec2,tblptrh
 13575  0013DA                     	if	0	;tblptru may be non-zero
 13576  0013DA                     	endif
 13577  0013DA                     	if	0	;tblptru may be non-zero
 13578  0013DA                     	endif
 13579  0013DA  0008               	tblrd		*
 13580  0013DC  50F5               	movf	tablat,w,c
 13581  0013DE  0A69               	xorlw	105
 13582  0013E0  A4D8               	btfss	status,2,c
 13583  0013E2  D020               	goto	l9755
 13584  0013E4                     u12180:
 13585                           
 13586                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 13587  0013E4  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13588  0013E8  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13589  0013EC  2ADE               	incf	postinc2,f,c
 13590  0013EE                     L19:
 13591  0013EE  0E00               	movlw	0
 13592  0013F0  22DD               	addwfc	postdec2,f,c
 13593                           
 13594                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 13595  0013F2  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 13596  0013F6  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 13597  0013FA  CFDF F082          	movff	indf2,??_vfpfcnvrt
 13598  0013FE  0E02               	movlw	2
 13599  001400  26DE               	addwf	postinc2,f,c
 13600  001402  CFDF F083          	movff	indf2,??_vfpfcnvrt+1
 13601  001406  0E00               	movlw	0
 13602  001408  22DD               	addwfc	postdec2,f,c
 13603  00140A  C082  FFD9         	movff	??_vfpfcnvrt,fsr2l
 13604  00140E  C083  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 13605  001412  CFDE F08E          	movff	postinc2,vfpfcnvrt@ll
 13606  001416  CFDD F08F          	movff	postdec2,vfpfcnvrt@ll+1
 13607  00141A  0100               	movlb	0	; () banked
 13608  00141C  0E00               	movlw	0
 13609  00141E  BF8F               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
 13610  001420  0EFF               	movlw	-1
 13611  001422  D772               	goto	L15
 13612  001424                     l9755:
 13613                           
 13614                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 883:         if (!strncmp(*fm
      +                          t, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", ((sizeof("zi")/size
      +                          of("zi"[0]))-1))) {
 13615  001424  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13616  001428  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13617  00142C  CFDE F013          	movff	postinc2,strncmp@_l
 13618  001430  CFDD F014          	movff	postdec2,strncmp@_l+1
 13619  001434  0EEA               	movlw	low STR_69
 13620  001436  6E15               	movwf	strncmp@_r,c
 13621  001438  0E7F               	movlw	high STR_69
 13622  00143A  6E16               	movwf	strncmp@_r+1,c
 13623  00143C  0E00               	movlw	0
 13624  00143E  6E18               	movwf	strncmp@n+1,c
 13625  001440  0E02               	movlw	2
 13626  001442  6E17               	movwf	strncmp@n,c
 13627  001444  EC13  F024         	call	_strncmp	;wreg free
 13628  001448  5013               	movf	?_strncmp,w,c
 13629  00144A  1014               	iorwf	?_strncmp+1,w,c
 13630  00144C  B4D8               	btfsc	status,2,c
 13631  00144E  D016               	goto	u12200
 13632  001450  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13633  001454  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13634  001458  CFDE F013          	movff	postinc2,strncmp@_l
 13635  00145C  CFDD F014          	movff	postdec2,strncmp@_l+1
 13636  001460  0EED               	movlw	low STR_73
 13637  001462  6E15               	movwf	strncmp@_r,c
 13638  001464  0E7F               	movlw	high STR_73
 13639  001466  6E16               	movwf	strncmp@_r+1,c
 13640  001468  0E00               	movlw	0
 13641  00146A  6E18               	movwf	strncmp@n+1,c
 13642  00146C  0E02               	movlw	2
 13643  00146E  6E17               	movwf	strncmp@n,c
 13644  001470  EC13  F024         	call	_strncmp	;wreg free
 13645  001474  5013               	movf	?_strncmp,w,c
 13646  001476  1014               	iorwf	?_strncmp+1,w,c
 13647  001478  A4D8               	btfss	status,2,c
 13648  00147A  D028               	goto	l9765
 13649  00147C                     u12200:
 13650                           
 13651                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 884: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 886:             *fmt += ((sizeof("zd")/sizeof("zd"[0
      +                          ]))-1);
 13652  00147C  0E02               	movlw	2
 13653  00147E  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13654  001482  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13655  001486  26DE               	addwf	postinc2,f,c
 13656  001488  0E00               	movlw	0
 13657  00148A  22DD               	addwfc	postdec2,f,c
 13658                           
 13659                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 887:             ll = (long l
      +                          ong)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 13660  00148C  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 13661  001490  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 13662  001494  CFDF F082          	movff	indf2,??_vfpfcnvrt
 13663  001498  0E02               	movlw	2
 13664  00149A  26DE               	addwf	postinc2,f,c
 13665  00149C  CFDF F083          	movff	indf2,??_vfpfcnvrt+1
 13666  0014A0  0E00               	movlw	0
 13667  0014A2  22DD               	addwfc	postdec2,f,c
 13668  0014A4  C082  FFD9         	movff	??_vfpfcnvrt,fsr2l
 13669  0014A8  C083  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 13670  0014AC  CFDE F084          	movff	postinc2,??_vfpfcnvrt+2
 13671  0014B0  CFDD F085          	movff	postdec2,??_vfpfcnvrt+3
 13672  0014B4  C084  F08E         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
 13673  0014B8  C085  F08F         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
 13674  0014BC  0100               	movlb	0	; () banked
 13675  0014BE  6B90               	clrf	(vfpfcnvrt@ll+2)& (0+255),b
 13676  0014C0  6B91               	clrf	(vfpfcnvrt@ll+3)& (0+255),b
 13677  0014C2  6B92               	clrf	(vfpfcnvrt@ll+4)& (0+255),b
 13678  0014C4  6B93               	clrf	(vfpfcnvrt@ll+5)& (0+255),b
 13679  0014C6  6B94               	clrf	(vfpfcnvrt@ll+6)& (0+255),b
 13680  0014C8  6B95               	clrf	(vfpfcnvrt@ll+7)& (0+255),b
 13681  0014CA  D724               	goto	l9731
 13682  0014CC                     l9765:
 13683                           
 13684                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 969:         if (!strncmp(*fm
      +                          t, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
 13685  0014CC  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13686  0014D0  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13687  0014D4  CFDE F013          	movff	postinc2,strncmp@_l
 13688  0014D8  CFDD F014          	movff	postdec2,strncmp@_l+1
 13689  0014DC  0ED7               	movlw	low STR_78
 13690  0014DE  6E15               	movwf	strncmp@_r,c
 13691  0014E0  0E7F               	movlw	high STR_78
 13692  0014E2  6E16               	movwf	strncmp@_r+1,c
 13693  0014E4  0E00               	movlw	0
 13694  0014E6  6E18               	movwf	strncmp@n+1,c
 13695  0014E8  0E03               	movlw	3
 13696  0014EA  6E17               	movwf	strncmp@n,c
 13697  0014EC  EC13  F024         	call	_strncmp	;wreg free
 13698  0014F0  5013               	movf	?_strncmp,w,c
 13699  0014F2  1014               	iorwf	?_strncmp+1,w,c
 13700  0014F4  A4D8               	btfss	status,2,c
 13701  0014F6  D03F               	goto	l9773
 13702                           
 13703                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 971:             *fmt += ((si
      +                          zeof("hho")/sizeof("hho"[0]))-1);
 13704  0014F8  0E03               	movlw	3
 13705  0014FA  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13706  0014FE  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13707  001502  26DE               	addwf	postinc2,f,c
 13708  001504  0E00               	movlw	0
 13709  001506  22DD               	addwfc	postdec2,f,c
 13710                           
 13711                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 972:             llu = (unsig
      +                          ned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 13712  001508  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 13713  00150C  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 13714  001510  CFDF F082          	movff	indf2,??_vfpfcnvrt
 13715  001514  0E02               	movlw	2
 13716  001516  26DE               	addwf	postinc2,f,c
 13717  001518  CFDF F083          	movff	indf2,??_vfpfcnvrt+1
 13718  00151C  0E00               	movlw	0
 13719  00151E  22DD               	addwfc	postdec2,f,c
 13720  001520  C082  FFD9         	movff	??_vfpfcnvrt,fsr2l
 13721  001524  C083  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 13722  001528  50DF               	movf	indf2,w,c
 13723  00152A  0100               	movlb	0	; () banked
 13724  00152C  6F84               	movwf	(??_vfpfcnvrt+2)& (0+255),b
 13725  00152E  5184               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
 13726  001530  6F99               	movwf	vfpfcnvrt@llu& (0+255),b
 13727  001532  6B9A               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
 13728  001534                     L16:
 13729  001534  6B9B               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 13730  001536  6B9C               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 13731  001538  6B9D               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 13732  00153A  6B9E               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 13733  00153C  6B9F               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 13734  00153E  6BA0               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 13735                           
 13736                           ; BSR set to: 0
 13737                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 974:             return otoa(
      +                          fp, llu);
 13738  001540  C07C  F030         	movff	vfpfcnvrt@fp,otoa@fp
 13739  001544  C07D  F031         	movff	vfpfcnvrt@fp+1,otoa@fp+1
 13740  001548  C099  F032         	movff	vfpfcnvrt@llu,otoa@d
 13741  00154C  C09A  F033         	movff	vfpfcnvrt@llu+1,otoa@d+1
 13742  001550  C09B  F034         	movff	vfpfcnvrt@llu+2,otoa@d+2
 13743  001554  C09C  F035         	movff	vfpfcnvrt@llu+3,otoa@d+3
 13744  001558  C09D  F036         	movff	vfpfcnvrt@llu+4,otoa@d+4
 13745  00155C  C09E  F037         	movff	vfpfcnvrt@llu+5,otoa@d+5
 13746  001560  C09F  F038         	movff	vfpfcnvrt@llu+6,otoa@d+6
 13747  001564  C0A0  F039         	movff	vfpfcnvrt@llu+7,otoa@d+7
 13748  001568  ECAF  F01F         	call	_otoa	;wreg free
 13749  00156C  C030  F07C         	movff	?_otoa,?_vfpfcnvrt
 13750  001570  C031  F07D         	movff	?_otoa+1,?_vfpfcnvrt+1
 13751  001574  0012               	return	
 13752  001576                     l9773:
 13753                           
 13754                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 980:         if (!strncmp(*fm
      +                          t, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
 13755  001576  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13756  00157A  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13757  00157E  CFDE F013          	movff	postinc2,strncmp@_l
 13758  001582  CFDD F014          	movff	postdec2,strncmp@_l+1
 13759  001586  0ED8               	movlw	low (STR_78+1)
 13760  001588  6E15               	movwf	strncmp@_r,c
 13761  00158A  0E7F               	movlw	high (STR_78+1)
 13762  00158C  6E16               	movwf	strncmp@_r+1,c
 13763  00158E  0E00               	movlw	0
 13764  001590  6E18               	movwf	strncmp@n+1,c
 13765  001592  0E02               	movlw	2
 13766  001594  6E17               	movwf	strncmp@n,c
 13767  001596  EC13  F024         	call	_strncmp	;wreg free
 13768  00159A  5013               	movf	?_strncmp,w,c
 13769  00159C  1014               	iorwf	?_strncmp+1,w,c
 13770  00159E  B4D8               	btfsc	status,2,c
 13771  0015A0  D029               	goto	u12240
 13772                           
 13773                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 990:         if (*fmt[0] == '
      +                          o') {
 13774                           
 13775                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 983:             llu = (unsig
      +                          ned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
 13776                           
 13777                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 982:             *fmt += ((si
      +                          zeof("ho")/sizeof("ho"[0]))-1);
 13778  0015A2  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13779  0015A6  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13780  0015AA  CFDE FFF6          	movff	postinc2,tblptrl
 13781  0015AE  CFDD FFF7          	movff	postdec2,tblptrh
 13782  0015B2                     	if	0	;tblptru may be non-zero
 13783  0015B2                     	endif
 13784  0015B2                     	if	0	;tblptru may be non-zero
 13785  0015B2                     	endif
 13786  0015B2  0008               	tblrd		*
 13787  0015B4  50F5               	movf	tablat,w,c
 13788  0015B6  0A6F               	xorlw	111
 13789  0015B8  A4D8               	btfss	status,2,c
 13790  0015BA  D006               	goto	l9789
 13791                           
 13792                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 992:             ++*fmt;
 13793  0015BC  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13794  0015C0  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13795  0015C4  2ADE               	incf	postinc2,f,c
 13796  0015C6  D01C               	goto	L21
 13797  0015C8                     l9789:
 13798                           
 13799                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1044:         if (!strncmp(*f
      +                          mt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
 13800  0015C8  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13801  0015CC  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13802  0015D0  CFDE F013          	movff	postinc2,strncmp@_l
 13803  0015D4  CFDD F014          	movff	postdec2,strncmp@_l+1
 13804  0015D8  0EF3               	movlw	low STR_88
 13805  0015DA  6E15               	movwf	strncmp@_r,c
 13806  0015DC  0E7F               	movlw	high STR_88
 13807  0015DE  6E16               	movwf	strncmp@_r+1,c
 13808  0015E0  0E00               	movlw	0
 13809  0015E2  6E18               	movwf	strncmp@n+1,c
 13810  0015E4  0E02               	movlw	2
 13811  0015E6  6E17               	movwf	strncmp@n,c
 13812  0015E8  EC13  F024         	call	_strncmp	;wreg free
 13813  0015EC  5013               	movf	?_strncmp,w,c
 13814  0015EE  1014               	iorwf	?_strncmp+1,w,c
 13815  0015F0  A4D8               	btfss	status,2,c
 13816  0015F2  D022               	goto	l9797
 13817  0015F4                     u12240:
 13818                           
 13819                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1046:             *fmt += ((s
      +                          izeof("zo")/sizeof("zo"[0]))-1);
 13820  0015F4  0E02               	movlw	2
 13821  0015F6  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13822  0015FA  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13823  0015FE  26DE               	addwf	postinc2,f,c
 13824  001600                     L21:
 13825  001600  0E00               	movlw	0
 13826  001602  22DD               	addwfc	postdec2,f,c
 13827                           
 13828                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1047:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 13829  001604  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 13830  001608  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 13831  00160C  CFDF F082          	movff	indf2,??_vfpfcnvrt
 13832  001610  0E02               	movlw	2
 13833  001612  26DE               	addwf	postinc2,f,c
 13834  001614  CFDF F083          	movff	indf2,??_vfpfcnvrt+1
 13835  001618  0E00               	movlw	0
 13836  00161A  22DD               	addwfc	postdec2,f,c
 13837  00161C  C082  FFD9         	movff	??_vfpfcnvrt,fsr2l
 13838  001620  C083  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 13839  001624  CFDE F084          	movff	postinc2,??_vfpfcnvrt+2
 13840  001628  CFDD F085          	movff	postdec2,??_vfpfcnvrt+3
 13841  00162C  C084  F099         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 13842  001630  C085  F09A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 13843  001634  0100               	movlb	0	; () banked
 13844  001636  D77E               	goto	L16
 13845  001638                     l9797:
 13846                           
 13847                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1058:         if (!strncmp(*f
      +                          mt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
 13848  001638  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13849  00163C  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13850  001640  CFDE F013          	movff	postinc2,strncmp@_l
 13851  001644  CFDD F014          	movff	postdec2,strncmp@_l+1
 13852  001648  0ED3               	movlw	low STR_93
 13853  00164A  6E15               	movwf	strncmp@_r,c
 13854  00164C  0E7F               	movlw	high STR_93
 13855  00164E  6E16               	movwf	strncmp@_r+1,c
 13856  001650  0E00               	movlw	0
 13857  001652  6E18               	movwf	strncmp@n+1,c
 13858  001654  0E03               	movlw	3
 13859  001656  6E17               	movwf	strncmp@n,c
 13860  001658  EC13  F024         	call	_strncmp	;wreg free
 13861  00165C  5013               	movf	?_strncmp,w,c
 13862  00165E  1014               	iorwf	?_strncmp+1,w,c
 13863  001660  A4D8               	btfss	status,2,c
 13864  001662  D034               	goto	l9807
 13865                           
 13866                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1060:             *fmt += ((s
      +                          izeof("hhn")/sizeof("hhn"[0]))-1);
 13867  001664  0E03               	movlw	3
 13868  001666  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13869  00166A  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13870  00166E  26DE               	addwf	postinc2,f,c
 13871  001670  0E00               	movlw	0
 13872  001672  22DD               	addwfc	postdec2,f,c
 13873                           
 13874                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1061:             vp = (void 
      +                          *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
 13875  001674  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 13876  001678  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 13877  00167C  CFDF F082          	movff	indf2,??_vfpfcnvrt
 13878  001680  0E02               	movlw	2
 13879  001682  26DE               	addwf	postinc2,f,c
 13880  001684  CFDF F083          	movff	indf2,??_vfpfcnvrt+1
 13881  001688  0E00               	movlw	0
 13882  00168A  22DD               	addwfc	postdec2,f,c
 13883  00168C  C082  FFD9         	movff	??_vfpfcnvrt,fsr2l
 13884  001690  C083  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 13885  001694  CFDE F096          	movff	postinc2,vfpfcnvrt@vp
 13886  001698  CFDD F097          	movff	postdec2,vfpfcnvrt@vp+1
 13887                           
 13888                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1062:             *(char *)vp
      +                           = (char)nout;
 13889  00169C  C096  FFF6         	movff	vfpfcnvrt@vp,tblptrl
 13890  0016A0  C097  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
 13891  0016A4  6AF8               	clrf	tblptru,c
 13892  0016A6  0E0E               	movlw	(high __ramtop+-1)
 13893  0016A8  64F7               	cpfsgt	tblptrh,c
 13894  0016AA  D004               	bra	u12267
 13895  0016AC  C0C2  FFF5         	movff	_nout,tablat
 13896  0016B0  000C               	tblwt		*
 13897  0016B2  D006               	bra	u12260
 13898  0016B4                     u12267:
 13899  0016B4  CFF6 FFE9          	movff	tblptrl,fsr0l
 13900  0016B8  CFF7 FFEA          	movff	tblptrh,fsr0h
 13901  0016BC  C0C2  FFEF         	movff	_nout,indf0
 13902  0016C0                     u12260:
 13903                           
 13904                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1063:             return 0;
 13905  0016C0  0E00               	movlw	0
 13906  0016C2  0100               	movlb	0	; () banked
 13907  0016C4  6F7D               	movwf	(?_vfpfcnvrt+1)& (0+255),b
 13908  0016C6  0E00               	movlw	0
 13909  0016C8  6F7C               	movwf	?_vfpfcnvrt& (0+255),b
 13910  0016CA  0012               	return	
 13911  0016CC                     l9807:
 13912                           
 13913                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1068:         if (!strncmp(*f
      +                          mt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
 13914  0016CC  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13915  0016D0  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13916  0016D4  CFDE F013          	movff	postinc2,strncmp@_l
 13917  0016D8  CFDD F014          	movff	postdec2,strncmp@_l+1
 13918  0016DC  0ED4               	movlw	low (STR_93+1)
 13919  0016DE  6E15               	movwf	strncmp@_r,c
 13920  0016E0  0E7F               	movlw	high (STR_93+1)
 13921  0016E2  6E16               	movwf	strncmp@_r+1,c
 13922  0016E4  0E00               	movlw	0
 13923  0016E6  6E18               	movwf	strncmp@n+1,c
 13924  0016E8  0E02               	movlw	2
 13925  0016EA  6E17               	movwf	strncmp@n,c
 13926  0016EC  EC13  F024         	call	_strncmp	;wreg free
 13927  0016F0  5013               	movf	?_strncmp,w,c
 13928  0016F2  1014               	iorwf	?_strncmp+1,w,c
 13929  0016F4  A4D8               	btfss	status,2,c
 13930  0016F6  D02D               	goto	l9817
 13931                           
 13932                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1070:             *fmt += ((s
      +                          izeof("hn")/sizeof("hn"[0]))-1);
 13933  0016F8  0E02               	movlw	2
 13934  0016FA  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13935  0016FE  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13936  001702  26DE               	addwf	postinc2,f,c
 13937  001704  0E00               	movlw	0
 13938  001706  22DD               	addwfc	postdec2,f,c
 13939                           
 13940                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1071:             vp = (void 
      +                          *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
 13941  001708  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 13942  00170C  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 13943  001710  CFDF F082          	movff	indf2,??_vfpfcnvrt
 13944  001714  0E02               	movlw	2
 13945  001716  26DE               	addwf	postinc2,f,c
 13946  001718  CFDF F083          	movff	indf2,??_vfpfcnvrt+1
 13947  00171C  0E00               	movlw	0
 13948  00171E  22DD               	addwfc	postdec2,f,c
 13949  001720  C082  FFD9         	movff	??_vfpfcnvrt,fsr2l
 13950  001724  C083  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 13951  001728  CFDE F096          	movff	postinc2,vfpfcnvrt@vp
 13952  00172C  CFDD F097          	movff	postdec2,vfpfcnvrt@vp+1
 13953                           
 13954                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1072:             *(short *)v
      +                          p = (short)nout;
 13955  001730  C096  FFF6         	movff	vfpfcnvrt@vp,tblptrl
 13956  001734  C097  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
 13957  001738  6AF8               	clrf	tblptru,c
 13958  00173A  0E0E               	movlw	(high __ramtop+-1)
 13959  00173C  64F7               	cpfsgt	tblptrh,c
 13960  00173E  D007               	bra	u12287
 13961  001740  C0C2  FFF5         	movff	_nout,tablat
 13962  001744  000D               	tblwt		*+
 13963  001746  C0C3  FFF5         	movff	_nout+1,tablat
 13964  00174A  000C               	tblwt		*
 13965  00174C  D001               	bra	u12280
 13966  00174E                     u12287:
 13967  00174E  D07B               	goto	u12327
 13968  001750                     u12280:
 13969  001750  D7B7               	goto	u12260
 13970  001752                     l9817:
 13971                           
 13972                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1077:         if (*fmt[0] == 
      +                          'n') {
 13973  001752  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13974  001756  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13975  00175A  CFDE FFF6          	movff	postinc2,tblptrl
 13976  00175E  CFDD FFF7          	movff	postdec2,tblptrh
 13977  001762                     	if	0	;tblptru may be non-zero
 13978  001762                     	endif
 13979  001762                     	if	0	;tblptru may be non-zero
 13980  001762                     	endif
 13981  001762  0008               	tblrd		*
 13982  001764  50F5               	movf	tablat,w,c
 13983  001766  0A6E               	xorlw	110
 13984  001768  A4D8               	btfss	status,2,c
 13985  00176A  D02C               	goto	l9827
 13986                           
 13987                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1078:             ++*fmt;
 13988  00176C  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13989  001770  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13990  001774  2ADE               	incf	postinc2,f,c
 13991  001776  0E00               	movlw	0
 13992  001778  22DD               	addwfc	postdec2,f,c
 13993                           
 13994                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1079:             vp = (void 
      +                          *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
 13995  00177A  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 13996  00177E  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 13997  001782  CFDF F082          	movff	indf2,??_vfpfcnvrt
 13998  001786  0E02               	movlw	2
 13999  001788  26DE               	addwf	postinc2,f,c
 14000  00178A  CFDF F083          	movff	indf2,??_vfpfcnvrt+1
 14001  00178E  0E00               	movlw	0
 14002  001790  22DD               	addwfc	postdec2,f,c
 14003  001792  C082  FFD9         	movff	??_vfpfcnvrt,fsr2l
 14004  001796  C083  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 14005  00179A  CFDE F096          	movff	postinc2,vfpfcnvrt@vp
 14006  00179E  CFDD F097          	movff	postdec2,vfpfcnvrt@vp+1
 14007                           
 14008                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1080:             *(int *)vp 
      +                          = nout;
 14009  0017A2  C096  FFF6         	movff	vfpfcnvrt@vp,tblptrl
 14010  0017A6  C097  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
 14011  0017AA  6AF8               	clrf	tblptru,c
 14012  0017AC  0E0E               	movlw	(high __ramtop+-1)
 14013  0017AE  64F7               	cpfsgt	tblptrh,c
 14014  0017B0  D007               	bra	u12307
 14015  0017B2  C0C2  FFF5         	movff	_nout,tablat
 14016  0017B6  000D               	tblwt		*+
 14017  0017B8  C0C3  FFF5         	movff	_nout+1,tablat
 14018  0017BC  000C               	tblwt		*
 14019  0017BE  D001               	bra	u12300
 14020  0017C0                     u12307:
 14021  0017C0  D042               	goto	u12327
 14022  0017C2                     u12300:
 14023  0017C2  D77E               	goto	u12260
 14024  0017C4                     l9827:
 14025                           
 14026                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1125:         if (!strncmp(*f
      +                          mt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
 14027  0017C4  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14028  0017C8  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14029  0017CC  CFDE F013          	movff	postinc2,strncmp@_l
 14030  0017D0  CFDD F014          	movff	postdec2,strncmp@_l+1
 14031  0017D4  0EF0               	movlw	low STR_103
 14032  0017D6  6E15               	movwf	strncmp@_r,c
 14033  0017D8  0E7F               	movlw	high STR_103
 14034  0017DA  6E16               	movwf	strncmp@_r+1,c
 14035  0017DC  0E00               	movlw	0
 14036  0017DE  6E18               	movwf	strncmp@n+1,c
 14037  0017E0  0E02               	movlw	2
 14038  0017E2  6E17               	movwf	strncmp@n,c
 14039  0017E4  EC13  F024         	call	_strncmp	;wreg free
 14040  0017E8  5013               	movf	?_strncmp,w,c
 14041  0017EA  1014               	iorwf	?_strncmp+1,w,c
 14042  0017EC  A4D8               	btfss	status,2,c
 14043  0017EE  D034               	goto	l9837
 14044                           
 14045                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1127:             *fmt += ((s
      +                          izeof("zn")/sizeof("zn"[0]))-1);
 14046  0017F0  0E02               	movlw	2
 14047  0017F2  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14048  0017F6  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14049  0017FA  26DE               	addwf	postinc2,f,c
 14050  0017FC  0E00               	movlw	0
 14051  0017FE  22DD               	addwfc	postdec2,f,c
 14052                           
 14053                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1128:             vp = (void 
      +                          *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
 14054  001800  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 14055  001804  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 14056  001808  CFDF F082          	movff	indf2,??_vfpfcnvrt
 14057  00180C  0E02               	movlw	2
 14058  00180E  26DE               	addwf	postinc2,f,c
 14059  001810  CFDF F083          	movff	indf2,??_vfpfcnvrt+1
 14060  001814  0E00               	movlw	0
 14061  001816  22DD               	addwfc	postdec2,f,c
 14062  001818  C082  FFD9         	movff	??_vfpfcnvrt,fsr2l
 14063  00181C  C083  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 14064  001820  CFDE F096          	movff	postinc2,vfpfcnvrt@vp
 14065  001824  CFDD F097          	movff	postdec2,vfpfcnvrt@vp+1
 14066                           
 14067                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1129:             *(size_t *)
      +                          vp = (size_t)nout;
 14068  001828  C096  FFF6         	movff	vfpfcnvrt@vp,tblptrl
 14069  00182C  C097  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
 14070  001830  6AF8               	clrf	tblptru,c
 14071  001832  0E0E               	movlw	(high __ramtop+-1)
 14072  001834  64F7               	cpfsgt	tblptrh,c
 14073  001836  D007               	bra	u12327
 14074  001838  C0C2  FFF5         	movff	_nout,tablat
 14075  00183C  000D               	tblwt		*+
 14076  00183E  C0C3  FFF5         	movff	_nout+1,tablat
 14077  001842  000C               	tblwt		*
 14078  001844  D008               	bra	u12320
 14079  001846                     u12327:
 14080  001846  CFF6 FFE9          	movff	tblptrl,fsr0l
 14081  00184A  CFF7 FFEA          	movff	tblptrh,fsr0h
 14082  00184E  C0C2  FFEE         	movff	_nout,postinc0
 14083  001852  C0C3  FFEF         	movff	_nout+1,indf0
 14084  001856                     u12320:
 14085  001856  D734               	goto	u12260
 14086  001858                     l9837:
 14087                           
 14088                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1138:         if (*fmt[0] == 
      +                          'p') {
 14089  001858  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14090  00185C  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14091  001860  CFDE FFF6          	movff	postinc2,tblptrl
 14092  001864  CFDD FFF7          	movff	postdec2,tblptrh
 14093  001868                     	if	0	;tblptru may be non-zero
 14094  001868                     	endif
 14095  001868                     	if	0	;tblptru may be non-zero
 14096  001868                     	endif
 14097  001868  0008               	tblrd		*
 14098  00186A  50F5               	movf	tablat,w,c
 14099  00186C  0A70               	xorlw	112
 14100  00186E  A4D8               	btfss	status,2,c
 14101  001870  D043               	goto	l9845
 14102                           
 14103                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1140:             ++*fmt;
 14104  001872  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14105  001876  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14106  00187A  2ADE               	incf	postinc2,f,c
 14107  00187C  0E00               	movlw	0
 14108  00187E  22DD               	addwfc	postdec2,f,c
 14109                           
 14110                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1141:             llu = (unsi
      +                          gned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0));
 14111  001880  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 14112  001884  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 14113  001888  CFDF F082          	movff	indf2,??_vfpfcnvrt
 14114  00188C  0E02               	movlw	2
 14115  00188E  26DE               	addwf	postinc2,f,c
 14116  001890  CFDF F083          	movff	indf2,??_vfpfcnvrt+1
 14117  001894  0E00               	movlw	0
 14118  001896  22DD               	addwfc	postdec2,f,c
 14119  001898  C082  FFD9         	movff	??_vfpfcnvrt,fsr2l
 14120  00189C  C083  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 14121  0018A0  CFDE F084          	movff	postinc2,??_vfpfcnvrt+2
 14122  0018A4  CFDD F085          	movff	postdec2,??_vfpfcnvrt+3
 14123  0018A8  C084  F099         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 14124  0018AC  C085  F09A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 14125  0018B0  0100               	movlb	0	; () banked
 14126  0018B2  6B9B               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 14127  0018B4  6B9C               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 14128  0018B6  6B9D               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 14129  0018B8  6B9E               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 14130  0018BA  6B9F               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 14131  0018BC  6BA0               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 14132                           
 14133                           ; BSR set to: 0
 14134                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1143:             return xtoa
      +                          (fp, llu, 'x');
 14135  0018BE  C07C  F030         	movff	vfpfcnvrt@fp,xtoa@fp
 14136  0018C2  C07D  F031         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 14137  0018C6  C099  F032         	movff	vfpfcnvrt@llu,xtoa@d
 14138  0018CA  C09A  F033         	movff	vfpfcnvrt@llu+1,xtoa@d+1
 14139  0018CE  C09B  F034         	movff	vfpfcnvrt@llu+2,xtoa@d+2
 14140  0018D2  C09C  F035         	movff	vfpfcnvrt@llu+3,xtoa@d+3
 14141  0018D6  C09D  F036         	movff	vfpfcnvrt@llu+4,xtoa@d+4
 14142  0018DA  C09E  F037         	movff	vfpfcnvrt@llu+5,xtoa@d+5
 14143  0018DE  C09F  F038         	movff	vfpfcnvrt@llu+6,xtoa@d+6
 14144  0018E2  C0A0  F039         	movff	vfpfcnvrt@llu+7,xtoa@d+7
 14145  0018E6  0E78               	movlw	120
 14146  0018E8  6E3A               	movwf	xtoa@x,c
 14147  0018EA  ECF6  F01C         	call	_xtoa	;wreg free
 14148  0018EE  C030  F07C         	movff	?_xtoa,?_vfpfcnvrt
 14149  0018F2  C031  F07D         	movff	?_xtoa+1,?_vfpfcnvrt+1
 14150  0018F6  0012               	return	
 14151  0018F8                     l9845:
 14152                           
 14153                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 14154  0018F8  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14155  0018FC  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14156  001900  CFDE FFF6          	movff	postinc2,tblptrl
 14157  001904  CFDD FFF7          	movff	postdec2,tblptrh
 14158  001908                     	if	0	;tblptru may be non-zero
 14159  001908                     	endif
 14160  001908                     	if	0	;tblptru may be non-zero
 14161  001908                     	endif
 14162  001908  0008               	tblrd		*
 14163  00190A  50F5               	movf	tablat,w,c
 14164  00190C  0A73               	xorlw	115
 14165  00190E  A4D8               	btfss	status,2,c
 14166  001910  D02A               	goto	l9853
 14167                           
 14168                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 14169  001912  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14170  001916  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14171  00191A  2ADE               	incf	postinc2,f,c
 14172  00191C  0E00               	movlw	0
 14173  00191E  22DD               	addwfc	postdec2,f,c
 14174                           
 14175                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 14176  001920  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 14177  001924  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 14178  001928  CFDF F082          	movff	indf2,??_vfpfcnvrt
 14179  00192C  0E02               	movlw	2
 14180  00192E  26DE               	addwf	postinc2,f,c
 14181  001930  CFDF F083          	movff	indf2,??_vfpfcnvrt+1
 14182  001934  0E00               	movlw	0
 14183  001936  22DD               	addwfc	postdec2,f,c
 14184  001938  C082  FFD9         	movff	??_vfpfcnvrt,fsr2l
 14185  00193C  C083  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 14186  001940  CFDE F086          	movff	postinc2,vfpfcnvrt@cp
 14187  001944  CFDD F087          	movff	postdec2,vfpfcnvrt@cp+1
 14188                           
 14189                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 14190  001948  C07C  F01E         	movff	vfpfcnvrt@fp,stoa@fp
 14191  00194C  C07D  F01F         	movff	vfpfcnvrt@fp+1,stoa@fp+1
 14192  001950  C086  F020         	movff	vfpfcnvrt@cp,stoa@s
 14193  001954  C087  F021         	movff	vfpfcnvrt@cp+1,stoa@s+1
 14194  001958  EC55  F022         	call	_stoa	;wreg free
 14195  00195C  C01E  F07C         	movff	?_stoa,?_vfpfcnvrt
 14196  001960  C01F  F07D         	movff	?_stoa+1,?_vfpfcnvrt+1
 14197  001964  0012               	return	
 14198  001966                     l9853:
 14199                           
 14200                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1161:         if (!strncmp(*f
      +                          mt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
 14201  001966  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14202  00196A  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14203  00196E  CFDE F013          	movff	postinc2,strncmp@_l
 14204  001972  CFDD F014          	movff	postdec2,strncmp@_l+1
 14205  001976  0EDB               	movlw	low STR_108
 14206  001978  6E15               	movwf	strncmp@_r,c
 14207  00197A  0E7F               	movlw	high STR_108
 14208  00197C  6E16               	movwf	strncmp@_r+1,c
 14209  00197E  0E00               	movlw	0
 14210  001980  6E18               	movwf	strncmp@n+1,c
 14211  001982  0E03               	movlw	3
 14212  001984  6E17               	movwf	strncmp@n,c
 14213  001986  EC13  F024         	call	_strncmp	;wreg free
 14214  00198A  5013               	movf	?_strncmp,w,c
 14215  00198C  1014               	iorwf	?_strncmp+1,w,c
 14216  00198E  A4D8               	btfss	status,2,c
 14217  001990  D03F               	goto	l9861
 14218                           
 14219                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1163:             *fmt += ((s
      +                          izeof("hhu")/sizeof("hhu"[0]))-1);
 14220  001992  0E03               	movlw	3
 14221  001994  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14222  001998  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14223  00199C  26DE               	addwf	postinc2,f,c
 14224  00199E  0E00               	movlw	0
 14225  0019A0  22DD               	addwfc	postdec2,f,c
 14226                           
 14227                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1164:             llu = (unsi
      +                          gned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 14228  0019A2  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 14229  0019A6  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 14230  0019AA  CFDF F082          	movff	indf2,??_vfpfcnvrt
 14231  0019AE  0E02               	movlw	2
 14232  0019B0  26DE               	addwf	postinc2,f,c
 14233  0019B2  CFDF F083          	movff	indf2,??_vfpfcnvrt+1
 14234  0019B6  0E00               	movlw	0
 14235  0019B8  22DD               	addwfc	postdec2,f,c
 14236  0019BA  C082  FFD9         	movff	??_vfpfcnvrt,fsr2l
 14237  0019BE  C083  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 14238  0019C2  50DF               	movf	indf2,w,c
 14239  0019C4  0100               	movlb	0	; () banked
 14240  0019C6  6F84               	movwf	(??_vfpfcnvrt+2)& (0+255),b
 14241  0019C8  5184               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
 14242  0019CA  6F99               	movwf	vfpfcnvrt@llu& (0+255),b
 14243  0019CC  6B9A               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
 14244  0019CE                     L17:
 14245  0019CE  6B9B               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 14246  0019D0  6B9C               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 14247  0019D2  6B9D               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 14248  0019D4  6B9E               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 14249  0019D6  6B9F               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 14250  0019D8  6BA0               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 14251                           
 14252                           ; BSR set to: 0
 14253                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1166:             return utoa
      +                          (fp, llu);
 14254  0019DA  C07C  F030         	movff	vfpfcnvrt@fp,utoa@fp
 14255  0019DE  C07D  F031         	movff	vfpfcnvrt@fp+1,utoa@fp+1
 14256  0019E2  C099  F032         	movff	vfpfcnvrt@llu,utoa@d
 14257  0019E6  C09A  F033         	movff	vfpfcnvrt@llu+1,utoa@d+1
 14258  0019EA  C09B  F034         	movff	vfpfcnvrt@llu+2,utoa@d+2
 14259  0019EE  C09C  F035         	movff	vfpfcnvrt@llu+3,utoa@d+3
 14260  0019F2  C09D  F036         	movff	vfpfcnvrt@llu+4,utoa@d+4
 14261  0019F6  C09E  F037         	movff	vfpfcnvrt@llu+5,utoa@d+5
 14262  0019FA  C09F  F038         	movff	vfpfcnvrt@llu+6,utoa@d+6
 14263  0019FE  C0A0  F039         	movff	vfpfcnvrt@llu+7,utoa@d+7
 14264  001A02  EC11  F01E         	call	_utoa	;wreg free
 14265  001A06  C030  F07C         	movff	?_utoa,?_vfpfcnvrt
 14266  001A0A  C031  F07D         	movff	?_utoa+1,?_vfpfcnvrt+1
 14267  001A0E  0012               	return	
 14268  001A10                     l9861:
 14269                           
 14270                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1172:         if (!strncmp(*f
      +                          mt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
 14271  001A10  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14272  001A14  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14273  001A18  CFDE F013          	movff	postinc2,strncmp@_l
 14274  001A1C  CFDD F014          	movff	postdec2,strncmp@_l+1
 14275  001A20  0EDC               	movlw	low (STR_108+1)
 14276  001A22  6E15               	movwf	strncmp@_r,c
 14277  001A24  0E7F               	movlw	high (STR_108+1)
 14278  001A26  6E16               	movwf	strncmp@_r+1,c
 14279  001A28  0E00               	movlw	0
 14280  001A2A  6E18               	movwf	strncmp@n+1,c
 14281  001A2C  0E02               	movlw	2
 14282  001A2E  6E17               	movwf	strncmp@n,c
 14283  001A30  EC13  F024         	call	_strncmp	;wreg free
 14284  001A34  5013               	movf	?_strncmp,w,c
 14285  001A36  1014               	iorwf	?_strncmp+1,w,c
 14286  001A38  B4D8               	btfsc	status,2,c
 14287  001A3A  D029               	goto	u12380
 14288                           
 14289                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 14290                           
 14291                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1175:             llu = (unsi
      +                          gned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
 14292                           
 14293                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1174:             *fmt += ((s
      +                          izeof("hu")/sizeof("hu"[0]))-1);
 14294  001A3C  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14295  001A40  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14296  001A44  CFDE FFF6          	movff	postinc2,tblptrl
 14297  001A48  CFDD FFF7          	movff	postdec2,tblptrh
 14298  001A4C                     	if	0	;tblptru may be non-zero
 14299  001A4C                     	endif
 14300  001A4C                     	if	0	;tblptru may be non-zero
 14301  001A4C                     	endif
 14302  001A4C  0008               	tblrd		*
 14303  001A4E  50F5               	movf	tablat,w,c
 14304  001A50  0A75               	xorlw	117
 14305  001A52  A4D8               	btfss	status,2,c
 14306  001A54  D006               	goto	l9877
 14307                           
 14308                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 14309  001A56  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14310  001A5A  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14311  001A5E  2ADE               	incf	postinc2,f,c
 14312  001A60  D01C               	goto	L23
 14313  001A62                     l9877:
 14314                           
 14315                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1236:         if (!strncmp(*f
      +                          mt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
 14316  001A62  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14317  001A66  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14318  001A6A  CFDE F013          	movff	postinc2,strncmp@_l
 14319  001A6E  CFDD F014          	movff	postdec2,strncmp@_l+1
 14320  001A72  0EF6               	movlw	low STR_118
 14321  001A74  6E15               	movwf	strncmp@_r,c
 14322  001A76  0E7F               	movlw	high STR_118
 14323  001A78  6E16               	movwf	strncmp@_r+1,c
 14324  001A7A  0E00               	movlw	0
 14325  001A7C  6E18               	movwf	strncmp@n+1,c
 14326  001A7E  0E02               	movlw	2
 14327  001A80  6E17               	movwf	strncmp@n,c
 14328  001A82  EC13  F024         	call	_strncmp	;wreg free
 14329  001A86  5013               	movf	?_strncmp,w,c
 14330  001A88  1014               	iorwf	?_strncmp+1,w,c
 14331  001A8A  A4D8               	btfss	status,2,c
 14332  001A8C  D022               	goto	l9885
 14333  001A8E                     u12380:
 14334                           
 14335                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1238:             *fmt += ((s
      +                          izeof("zu")/sizeof("zu"[0]))-1);
 14336  001A8E  0E02               	movlw	2
 14337  001A90  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14338  001A94  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14339  001A98  26DE               	addwf	postinc2,f,c
 14340  001A9A                     L23:
 14341  001A9A  0E00               	movlw	0
 14342  001A9C  22DD               	addwfc	postdec2,f,c
 14343                           
 14344                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1239:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 14345  001A9E  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 14346  001AA2  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 14347  001AA6  CFDF F082          	movff	indf2,??_vfpfcnvrt
 14348  001AAA  0E02               	movlw	2
 14349  001AAC  26DE               	addwf	postinc2,f,c
 14350  001AAE  CFDF F083          	movff	indf2,??_vfpfcnvrt+1
 14351  001AB2  0E00               	movlw	0
 14352  001AB4  22DD               	addwfc	postdec2,f,c
 14353  001AB6  C082  FFD9         	movff	??_vfpfcnvrt,fsr2l
 14354  001ABA  C083  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 14355  001ABE  CFDE F084          	movff	postinc2,??_vfpfcnvrt+2
 14356  001AC2  CFDD F085          	movff	postdec2,??_vfpfcnvrt+3
 14357  001AC6  C084  F099         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 14358  001ACA  C085  F09A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 14359  001ACE  0100               	movlb	0	; () banked
 14360  001AD0  D77E               	goto	L17
 14361  001AD2                     l9885:
 14362                           
 14363                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1249:         if (!strncmp(*f
      +                          mt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hhX", ((sizeof("hhX"
      +                          )/sizeof("hhX"[0]))-1))) {
 14364  001AD2  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14365  001AD6  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14366  001ADA  CFDE F013          	movff	postinc2,strncmp@_l
 14367  001ADE  CFDD F014          	movff	postdec2,strncmp@_l+1
 14368  001AE2  0EDF               	movlw	low STR_123
 14369  001AE4  6E15               	movwf	strncmp@_r,c
 14370  001AE6  0E7F               	movlw	high STR_123
 14371  001AE8  6E16               	movwf	strncmp@_r+1,c
 14372  001AEA  0E00               	movlw	0
 14373  001AEC  6E18               	movwf	strncmp@n+1,c
 14374  001AEE  0E03               	movlw	3
 14375  001AF0  6E17               	movwf	strncmp@n,c
 14376  001AF2  EC13  F024         	call	_strncmp	;wreg free
 14377  001AF6  5013               	movf	?_strncmp,w,c
 14378  001AF8  1014               	iorwf	?_strncmp+1,w,c
 14379  001AFA  B4D8               	btfsc	status,2,c
 14380  001AFC  D016               	goto	u12400
 14381  001AFE  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14382  001B02  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14383  001B06  CFDE F013          	movff	postinc2,strncmp@_l
 14384  001B0A  CFDD F014          	movff	postdec2,strncmp@_l+1
 14385  001B0E  0EC7               	movlw	low STR_127
 14386  001B10  6E15               	movwf	strncmp@_r,c
 14387  001B12  0E7F               	movlw	high STR_127
 14388  001B14  6E16               	movwf	strncmp@_r+1,c
 14389  001B16  0E00               	movlw	0
 14390  001B18  6E18               	movwf	strncmp@n+1,c
 14391  001B1A  0E03               	movlw	3
 14392  001B1C  6E17               	movwf	strncmp@n,c
 14393  001B1E  EC13  F024         	call	_strncmp	;wreg free
 14394  001B22  5013               	movf	?_strncmp,w,c
 14395  001B24  1014               	iorwf	?_strncmp+1,w,c
 14396  001B26  A4D8               	btfss	status,2,c
 14397  001B28  D054               	goto	l9899
 14398  001B2A                     u12400:
 14399                           
 14400                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1250: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1252:             c = (*fmt)[2];
 14401  001B2A  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14402  001B2E  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14403  001B32  CFDE F082          	movff	postinc2,??_vfpfcnvrt
 14404  001B36  CFDD F083          	movff	postdec2,??_vfpfcnvrt+1
 14405  001B3A  0E02               	movlw	2
 14406  001B3C  0100               	movlb	0	; () banked
 14407  001B3E  2782               	addwf	??_vfpfcnvrt& (0+255),f,b
 14408  001B40  0E00               	movlw	0
 14409  001B42  2383               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
 14410  001B44  C082  FFF6         	movff	??_vfpfcnvrt,tblptrl
 14411  001B48  C083  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
 14412  001B4C                     	if	0	;tblptru may be non-zero
 14413  001B4C                     	endif
 14414  001B4C                     	if	0	;tblptru may be non-zero
 14415  001B4C                     	endif
 14416  001B4C  0008               	tblrd		*
 14417  001B4E  CFF5 F098          	movff	tablat,vfpfcnvrt@c
 14418                           
 14419                           ; BSR set to: 0
 14420                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1253:             *fmt += ((s
      +                          izeof("hhx")/sizeof("hhx"[0]))-1);
 14421  001B52  0E03               	movlw	3
 14422  001B54  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14423  001B58  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14424  001B5C  26DE               	addwf	postinc2,f,c
 14425  001B5E  0E00               	movlw	0
 14426  001B60  22DD               	addwfc	postdec2,f,c
 14427                           
 14428                           ; BSR set to: 0
 14429                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1254:             llu = (unsi
      +                          gned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 14430  001B62  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 14431  001B66  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 14432  001B6A  CFDF F082          	movff	indf2,??_vfpfcnvrt
 14433  001B6E  0E02               	movlw	2
 14434  001B70  26DE               	addwf	postinc2,f,c
 14435  001B72  CFDF F083          	movff	indf2,??_vfpfcnvrt+1
 14436  001B76  0E00               	movlw	0
 14437  001B78  22DD               	addwfc	postdec2,f,c
 14438  001B7A  C082  FFD9         	movff	??_vfpfcnvrt,fsr2l
 14439  001B7E  C083  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 14440  001B82  50DF               	movf	indf2,w,c
 14441  001B84  6F84               	movwf	(??_vfpfcnvrt+2)& (0+255),b
 14442  001B86  5184               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
 14443  001B88  6F99               	movwf	vfpfcnvrt@llu& (0+255),b
 14444  001B8A  6B9A               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
 14445  001B8C                     L18:
 14446  001B8C  6B9B               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 14447  001B8E  6B9C               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 14448  001B90  6B9D               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 14449  001B92  6B9E               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 14450  001B94  6B9F               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 14451  001B96  6BA0               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 14452                           
 14453                           ; BSR set to: 0
 14454                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1256:             return xtoa
      +                          (fp, llu, c);
 14455  001B98  C07C  F030         	movff	vfpfcnvrt@fp,xtoa@fp
 14456  001B9C  C07D  F031         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 14457  001BA0  C099  F032         	movff	vfpfcnvrt@llu,xtoa@d
 14458  001BA4  C09A  F033         	movff	vfpfcnvrt@llu+1,xtoa@d+1
 14459  001BA8  C09B  F034         	movff	vfpfcnvrt@llu+2,xtoa@d+2
 14460  001BAC  C09C  F035         	movff	vfpfcnvrt@llu+3,xtoa@d+3
 14461  001BB0  C09D  F036         	movff	vfpfcnvrt@llu+4,xtoa@d+4
 14462  001BB4  C09E  F037         	movff	vfpfcnvrt@llu+5,xtoa@d+5
 14463  001BB8  C09F  F038         	movff	vfpfcnvrt@llu+6,xtoa@d+6
 14464  001BBC  C0A0  F039         	movff	vfpfcnvrt@llu+7,xtoa@d+7
 14465  001BC0  C098  F03A         	movff	vfpfcnvrt@c,xtoa@x
 14466  001BC4  ECF6  F01C         	call	_xtoa	;wreg free
 14467  001BC8  C030  F07C         	movff	?_xtoa,?_vfpfcnvrt
 14468  001BCC  C031  F07D         	movff	?_xtoa+1,?_vfpfcnvrt+1
 14469  001BD0  0012               	return	
 14470  001BD2                     l9899:
 14471                           
 14472                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1262:         if (!strncmp(*f
      +                          mt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", ((sizeof("hX")/siz
      +                          eof("hX"[0]))-1))) {
 14473  001BD2  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14474  001BD6  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14475  001BDA  CFDE F013          	movff	postinc2,strncmp@_l
 14476  001BDE  CFDD F014          	movff	postdec2,strncmp@_l+1
 14477  001BE2  0EE0               	movlw	low (STR_123+1)
 14478  001BE4  6E15               	movwf	strncmp@_r,c
 14479  001BE6  0E7F               	movlw	high (STR_123+1)
 14480  001BE8  6E16               	movwf	strncmp@_r+1,c
 14481  001BEA  0E00               	movlw	0
 14482  001BEC  6E18               	movwf	strncmp@n+1,c
 14483  001BEE  0E02               	movlw	2
 14484  001BF0  6E17               	movwf	strncmp@n,c
 14485  001BF2  EC13  F024         	call	_strncmp	;wreg free
 14486  001BF6  5013               	movf	?_strncmp,w,c
 14487  001BF8  1014               	iorwf	?_strncmp+1,w,c
 14488  001BFA  B4D8               	btfsc	status,2,c
 14489  001BFC  D092               	goto	u12460
 14490  001BFE  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14491  001C02  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14492  001C06  CFDE F013          	movff	postinc2,strncmp@_l
 14493  001C0A  CFDD F014          	movff	postdec2,strncmp@_l+1
 14494  001C0E  0EC8               	movlw	low (STR_127+1)
 14495  001C10  6E15               	movwf	strncmp@_r,c
 14496  001C12  0E7F               	movlw	high (STR_127+1)
 14497  001C14  6E16               	movwf	strncmp@_r+1,c
 14498  001C16  0E00               	movlw	0
 14499  001C18  6E18               	movwf	strncmp@n+1,c
 14500  001C1A  0E02               	movlw	2
 14501  001C1C  6E17               	movwf	strncmp@n,c
 14502  001C1E  EC13  F024         	call	_strncmp	;wreg free
 14503  001C22  5013               	movf	?_strncmp,w,c
 14504  001C24  1014               	iorwf	?_strncmp+1,w,c
 14505  001C26  A4D8               	btfss	status,2,c
 14506  001C28  D00A               	goto	l9913
 14507  001C2A  D07B               	goto	u12460
 14508  001C2C                     l9905:
 14509                           
 14510                           ; BSR set to: 0
 14511                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1266:             *fmt += ((s
      +                          izeof("hx")/sizeof("hx"[0]))-1);
 14512  001C2C  0E02               	movlw	2
 14513  001C2E  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14514  001C32  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14515  001C36  26DE               	addwf	postinc2,f,c
 14516  001C38  0E00               	movlw	0
 14517  001C3A  22DD               	addwfc	postdec2,f,c
 14518  001C3C  D087               	goto	l9935
 14519  001C3E                     l9913:
 14520                           
 14521                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 14522  001C3E  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14523  001C42  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14524  001C46  CFDE FFF6          	movff	postinc2,tblptrl
 14525  001C4A  CFDD FFF7          	movff	postdec2,tblptrh
 14526  001C4E                     	if	0	;tblptru may be non-zero
 14527  001C4E                     	endif
 14528  001C4E                     	if	0	;tblptru may be non-zero
 14529  001C4E                     	endif
 14530  001C4E  0008               	tblrd		*
 14531  001C50  50F5               	movf	tablat,w,c
 14532  001C52  0A78               	xorlw	120
 14533  001C54  B4D8               	btfsc	status,2,c
 14534  001C56  D00D               	goto	u12440
 14535  001C58  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14536  001C5C  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14537  001C60  CFDE FFF6          	movff	postinc2,tblptrl
 14538  001C64  CFDD FFF7          	movff	postdec2,tblptrh
 14539  001C68                     	if	0	;tblptru may be non-zero
 14540  001C68                     	endif
 14541  001C68                     	if	0	;tblptru may be non-zero
 14542  001C68                     	endif
 14543  001C68  0008               	tblrd		*
 14544  001C6A  50F5               	movf	tablat,w,c
 14545  001C6C  0A58               	xorlw	88
 14546  001C6E  A4D8               	btfss	status,2,c
 14547  001C70  D02C               	goto	l9927
 14548  001C72                     u12440:
 14549                           
 14550                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 14551  001C72  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14552  001C76  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14553  001C7A  CFDE FFF6          	movff	postinc2,tblptrl
 14554  001C7E  CFDD FFF7          	movff	postdec2,tblptrh
 14555  001C82                     	if	0	;tblptru may be non-zero
 14556  001C82                     	endif
 14557  001C82                     	if	0	;tblptru may be non-zero
 14558  001C82                     	endif
 14559  001C82  0008               	tblrd		*
 14560  001C84  CFF5 F098          	movff	tablat,vfpfcnvrt@c
 14561                           
 14562                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 14563  001C88  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14564  001C8C  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14565  001C90  2ADE               	incf	postinc2,f,c
 14566  001C92  0E00               	movlw	0
 14567  001C94  22DD               	addwfc	postdec2,f,c
 14568                           
 14569                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 14570  001C96  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 14571  001C9A  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 14572  001C9E  CFDF F082          	movff	indf2,??_vfpfcnvrt
 14573  001CA2  0E02               	movlw	2
 14574  001CA4  26DE               	addwf	postinc2,f,c
 14575  001CA6  CFDF F083          	movff	indf2,??_vfpfcnvrt+1
 14576  001CAA  0E00               	movlw	0
 14577  001CAC  22DD               	addwfc	postdec2,f,c
 14578  001CAE  C082  FFD9         	movff	??_vfpfcnvrt,fsr2l
 14579  001CB2  C083  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 14580  001CB6  CFDE F084          	movff	postinc2,??_vfpfcnvrt+2
 14581  001CBA  CFDD F085          	movff	postdec2,??_vfpfcnvrt+3
 14582  001CBE  C084  F099         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 14583  001CC2  C085  F09A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 14584  001CC6  0100               	movlb	0	; () banked
 14585  001CC8  D761               	goto	L18
 14586  001CCA                     l9927:
 14587                           
 14588                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1337:         if (!strncmp(*f
      +                          mt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", ((sizeof("zX")/siz
      +                          eof("zX"[0]))-1))) {
 14589  001CCA  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14590  001CCE  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14591  001CD2  CFDE F013          	movff	postinc2,strncmp@_l
 14592  001CD6  CFDD F014          	movff	postdec2,strncmp@_l+1
 14593  001CDA  0EF9               	movlw	low STR_141
 14594  001CDC  6E15               	movwf	strncmp@_r,c
 14595  001CDE  0E7F               	movlw	high STR_141
 14596  001CE0  6E16               	movwf	strncmp@_r+1,c
 14597  001CE2  0E00               	movlw	0
 14598  001CE4  6E18               	movwf	strncmp@n+1,c
 14599  001CE6  0E02               	movlw	2
 14600  001CE8  6E17               	movwf	strncmp@n,c
 14601  001CEA  EC13  F024         	call	_strncmp	;wreg free
 14602  001CEE  5013               	movf	?_strncmp,w,c
 14603  001CF0  1014               	iorwf	?_strncmp+1,w,c
 14604  001CF2  B4D8               	btfsc	status,2,c
 14605  001CF4  D016               	goto	u12460
 14606  001CF6  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14607  001CFA  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14608  001CFE  CFDE F013          	movff	postinc2,strncmp@_l
 14609  001D02  CFDD F014          	movff	postdec2,strncmp@_l+1
 14610  001D06  0EE7               	movlw	low STR_145
 14611  001D08  6E15               	movwf	strncmp@_r,c
 14612  001D0A  0E7F               	movlw	high STR_145
 14613  001D0C  6E16               	movwf	strncmp@_r+1,c
 14614  001D0E  0E00               	movlw	0
 14615  001D10  6E18               	movwf	strncmp@n+1,c
 14616  001D12  0E02               	movlw	2
 14617  001D14  6E17               	movwf	strncmp@n,c
 14618  001D16  EC13  F024         	call	_strncmp	;wreg free
 14619  001D1A  5013               	movf	?_strncmp,w,c
 14620  001D1C  1014               	iorwf	?_strncmp+1,w,c
 14621  001D1E  A4D8               	btfss	status,2,c
 14622  001D20  D02E               	goto	l9941
 14623  001D22                     u12460:
 14624                           
 14625                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1338: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1340:             c = (*fmt)[1];
 14626  001D22  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14627  001D26  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14628  001D2A  CFDE F082          	movff	postinc2,??_vfpfcnvrt
 14629  001D2E  CFDD F083          	movff	postdec2,??_vfpfcnvrt+1
 14630  001D32  0E01               	movlw	1
 14631  001D34  0100               	movlb	0	; () banked
 14632  001D36  2782               	addwf	??_vfpfcnvrt& (0+255),f,b
 14633  001D38  0E00               	movlw	0
 14634  001D3A  2383               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
 14635  001D3C  C082  FFF6         	movff	??_vfpfcnvrt,tblptrl
 14636  001D40  C083  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
 14637  001D44                     	if	0	;tblptru may be non-zero
 14638  001D44                     	endif
 14639  001D44                     	if	0	;tblptru may be non-zero
 14640  001D44                     	endif
 14641  001D44  0008               	tblrd		*
 14642  001D46  CFF5 F098          	movff	tablat,vfpfcnvrt@c
 14643  001D4A  D770               	goto	l9905
 14644  001D4C                     l9935:
 14645                           
 14646                           ; BSR set to: 0
 14647                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1342:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 14648  001D4C  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 14649  001D50  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 14650  001D54  CFDF F082          	movff	indf2,??_vfpfcnvrt
 14651  001D58  0E02               	movlw	2
 14652  001D5A  26DE               	addwf	postinc2,f,c
 14653  001D5C  CFDF F083          	movff	indf2,??_vfpfcnvrt+1
 14654  001D60  0E00               	movlw	0
 14655  001D62  22DD               	addwfc	postdec2,f,c
 14656  001D64  C082  FFD9         	movff	??_vfpfcnvrt,fsr2l
 14657  001D68  C083  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 14658  001D6C  CFDE F084          	movff	postinc2,??_vfpfcnvrt+2
 14659  001D70  CFDD F085          	movff	postdec2,??_vfpfcnvrt+3
 14660  001D74  C084  F099         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 14661  001D78  C085  F09A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 14662  001D7C  D707               	goto	L18
 14663  001D7E                     l9941:
 14664                           
 14665                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 14666  001D7E  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14667  001D82  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14668  001D86  CFDE FFF6          	movff	postinc2,tblptrl
 14669  001D8A  CFDD FFF7          	movff	postdec2,tblptrh
 14670  001D8E                     	if	0	;tblptru may be non-zero
 14671  001D8E                     	endif
 14672  001D8E                     	if	0	;tblptru may be non-zero
 14673  001D8E                     	endif
 14674  001D8E  0008               	tblrd		*
 14675  001D90  50F5               	movf	tablat,w,c
 14676  001D92  0A25               	xorlw	37
 14677  001D94  A4D8               	btfss	status,2,c
 14678  001D96  D017               	goto	l9951
 14679                           
 14680                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 14681  001D98  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14682  001D9C  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14683  001DA0  2ADE               	incf	postinc2,f,c
 14684  001DA2  0E00               	movlw	0
 14685  001DA4  22DD               	addwfc	postdec2,f,c
 14686                           
 14687                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 14688  001DA6  0E00               	movlw	0
 14689  001DA8  6E16               	movwf	fputc@c+1,c
 14690  001DAA  0E25               	movlw	37
 14691  001DAC  6E15               	movwf	fputc@c,c
 14692  001DAE  C07C  F017         	movff	vfpfcnvrt@fp,fputc@fp
 14693  001DB2  C07D  F018         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 14694  001DB6  EC3F  F027         	call	_fputc	;wreg free
 14695  001DBA                     l9947:
 14696                           
 14697                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 14698  001DBA  0E00               	movlw	0
 14699  001DBC  0100               	movlb	0	; () banked
 14700  001DBE  6F7D               	movwf	(?_vfpfcnvrt+1)& (0+255),b
 14701  001DC0  0E01               	movlw	1
 14702  001DC2  6F7C               	movwf	?_vfpfcnvrt& (0+255),b
 14703  001DC4  0012               	return	
 14704  001DC6                     l9951:
 14705                           
 14706                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 14707  001DC6  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14708  001DCA  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14709  001DCE  2ADE               	incf	postinc2,f,c
 14710  001DD0  0E00               	movlw	0
 14711  001DD2  22DD               	addwfc	postdec2,f,c
 14712  001DD4  D475               	goto	u12260
 14713  001DD6                     l9957:
 14714                           
 14715                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 14716  001DD6  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14717  001DDA  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14718  001DDE  CFDE FFF6          	movff	postinc2,tblptrl
 14719  001DE2  CFDD FFF7          	movff	postdec2,tblptrh
 14720  001DE6                     	if	0	;tblptru may be non-zero
 14721  001DE6                     	endif
 14722  001DE6                     	if	0	;tblptru may be non-zero
 14723  001DE6                     	endif
 14724  001DE6  0008               	tblrd		*
 14725  001DE8  50F5               	movf	tablat,w,c
 14726  001DEA  6E15               	movwf	fputc@c,c
 14727  001DEC  6A16               	clrf	fputc@c+1,c
 14728  001DEE  C07C  F017         	movff	vfpfcnvrt@fp,fputc@fp
 14729  001DF2  C07D  F018         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 14730  001DF6  EC3F  F027         	call	_fputc	;wreg free
 14731                           
 14732                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 14733  001DFA  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14734  001DFE  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14735  001E02  2ADE               	incf	postinc2,f,c
 14736  001E04  0E00               	movlw	0
 14737  001E06  22DD               	addwfc	postdec2,f,c
 14738  001E08  D7D8               	goto	l9947
 14739  001E0A                     __end_of_vfpfcnvrt:
 14740                           	opt callstack 0
 14741                           
 14742 ;; *************** function _xtoa *****************
 14743 ;; Defined at:
 14744 ;;		line 623 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 14745 ;; Parameters:    Size  Location     Type
 14746 ;;  fp              2   47[COMRAM] PTR struct _IO_FILE
 14747 ;;		 -> sprintf@f(6), NULL(0), 
 14748 ;;  d               8   49[COMRAM] unsigned long long 
 14749 ;;  x               1   57[COMRAM] unsigned char 
 14750 ;; Auto vars:     Size  Location     Type
 14751 ;;  n               8   16[BANK0 ] unsigned long long 
 14752 ;;  c               2   26[BANK0 ] int 
 14753 ;;  i               2   24[BANK0 ] int 
 14754 ;;  w               2   14[BANK0 ] int 
 14755 ;;  p               2   12[BANK0 ] int 
 14756 ;; Return value:  Size  Location     Type
 14757 ;;                  2   47[COMRAM] int 
 14758 ;; Registers used:
 14759 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14760 ;; Tracked objects:
 14761 ;;		On entry : 0/0
 14762 ;;		On exit  : 0/0
 14763 ;;		Unchanged: 0/0
 14764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14765 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14766 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14767 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14768 ;;      Totals:        11      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14769 ;;Total ram usage:       39 bytes
 14770 ;; Hardware stack levels used:    1
 14771 ;; Hardware stack levels required when called:   13
 14772 ;; This function calls:
 14773 ;;		_isalpha
 14774 ;;		_isupper
 14775 ;;		_pad
 14776 ;;		_toupper
 14777 ;; This function is called by:
 14778 ;;		_vfpfcnvrt
 14779 ;; This function uses a non-reentrant model
 14780 ;;
 14781                           
 14782                           	psect	text57
 14783  0039EC                     __ptext57:
 14784                           	opt callstack 0
 14785  0039EC                     _xtoa:
 14786                           	opt callstack 13
 14787                           
 14788                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 14789                           
 14790                           ;incstack = 0
 14791  0039EC  AE3E               	btfss	_prec+1,7,c
 14792                           
 14793                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 14794  0039EE  923F               	bcf	_flags,1,c
 14795                           
 14796                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 14797  0039F0  BE3E               	btfsc	_prec+1,7,c
 14798  0039F2  D005               	goto	u11690
 14799  0039F4  503E               	movf	_prec+1,w,c
 14800  0039F6  E109               	bnz	l1129
 14801  0039F8  043D               	decf	_prec,w,c
 14802  0039FA  B0D8               	btfsc	status,0,c
 14803  0039FC  D006               	goto	l1129
 14804  0039FE                     u11690:
 14805  0039FE  0E00               	movlw	0
 14806  003A00  0100               	movlb	0	; () banked
 14807  003A02  6F6D               	movwf	(xtoa@p+1)& (0+255),b
 14808  003A04  0E01               	movlw	1
 14809  003A06  6F6C               	movwf	xtoa@p& (0+255),b
 14810  003A08  D004               	goto	l1131
 14811  003A0A                     l1129:
 14812  003A0A  C03D  F06C         	movff	_prec,xtoa@p
 14813  003A0E  C03E  F06D         	movff	_prec+1,xtoa@p+1
 14814  003A12                     l1131:
 14815                           
 14816                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 633:     w = width;
 14817  003A12  C03B  F06E         	movff	_width,xtoa@w
 14818  003A16  C03C  F06F         	movff	_width+1,xtoa@w+1
 14819                           
 14820                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 14821  003A1A  A83F               	btfss	_flags,4,c
 14822  003A1C  D005               	goto	l9521
 14823                           
 14824                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 14825  003A1E  0100               	movlb	0	; () banked
 14826  003A20  0EFE               	movlw	254
 14827  003A22  276E               	addwf	xtoa@w& (0+255),f,b
 14828  003A24  0EFF               	movlw	255
 14829  003A26  236F               	addwfc	(xtoa@w+1)& (0+255),f,b
 14830  003A28                     l9521:
 14831                           
 14832                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 639:     n = d;
 14833  003A28  C032  F070         	movff	xtoa@d,xtoa@n
 14834  003A2C  C033  F071         	movff	xtoa@d+1,xtoa@n+1
 14835  003A30  C034  F072         	movff	xtoa@d+2,xtoa@n+2
 14836  003A34  C035  F073         	movff	xtoa@d+3,xtoa@n+3
 14837  003A38  C036  F074         	movff	xtoa@d+4,xtoa@n+4
 14838  003A3C  C037  F075         	movff	xtoa@d+5,xtoa@n+5
 14839  003A40  C038  F076         	movff	xtoa@d+6,xtoa@n+6
 14840  003A44  C039  F077         	movff	xtoa@d+7,xtoa@n+7
 14841                           
 14842                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 14843  003A48  0E00               	movlw	0
 14844  003A4A  0100               	movlb	0	; () banked
 14845  003A4C  6F79               	movwf	(xtoa@i+1)& (0+255),b
 14846  003A4E  0E1F               	movlw	31
 14847  003A50  6F78               	movwf	xtoa@i& (0+255),b
 14848                           
 14849                           ; BSR set to: 0
 14850                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 14851  003A52  0E00               	movlw	0
 14852  003A54  0101               	movlb	1	; () banked
 14853  003A56  6F7F               	movwf	(_dbuf+31)& (0+255),b
 14854                           
 14855                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 14856  003A58  D094               	goto	l9557
 14857  003A5A                     l9527:
 14858                           
 14859                           ; BSR set to: 0
 14860                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 643:         --i;
 14861  003A5A  0778               	decf	xtoa@i& (0+255),f,b
 14862  003A5C  A0D8               	btfss	status,0,c
 14863  003A5E  0779               	decf	(xtoa@i+1)& (0+255),f,b
 14864                           
 14865                           ; BSR set to: 0
 14866                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 14867  003A60  0E0F               	movlw	15
 14868  003A62  1570               	andwf	xtoa@n& (0+255),w,b
 14869  003A64  6F7A               	movwf	xtoa@c& (0+255),b
 14870  003A66  6B7B               	clrf	(xtoa@c+1)& (0+255),b
 14871                           
 14872                           ; BSR set to: 0
 14873                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 14874  003A68  BF7B               	btfsc	(xtoa@c+1)& (0+255),7,b
 14875  003A6A  D008               	goto	l9535
 14876  003A6C  517B               	movf	(xtoa@c+1)& (0+255),w,b
 14877  003A6E  E104               	bnz	u11710
 14878  003A70  0E0A               	movlw	10
 14879  003A72  5D7A               	subwf	xtoa@c& (0+255),w,b
 14880  003A74  A0D8               	btfss	status,0,c
 14881  003A76  D002               	goto	l9535
 14882  003A78                     u11710:
 14883                           
 14884                           ; BSR set to: 0
 14885  003A78  0E57               	movlw	87
 14886  003A7A  D001               	goto	L24
 14887  003A7C                     l9535:
 14888                           
 14889                           ; BSR set to: 0
 14890  003A7C  0E30               	movlw	48
 14891  003A7E                     L24:
 14892  003A7E  257A               	addwf	xtoa@c& (0+255),w,b
 14893  003A80  6F7A               	movwf	xtoa@c& (0+255),b
 14894  003A82  0E00               	movlw	0
 14895  003A84  217B               	addwfc	(xtoa@c+1)& (0+255),w,b
 14896  003A86  6F7B               	movwf	(xtoa@c+1)& (0+255),b
 14897                           
 14898                           ; BSR set to: 0
 14899                           
 14900                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 646:         if ((0 ? isupper
      +                          ((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsigned)(c)|32)-'a') 
      +                          < 26)) {
 14901  003A88  0EBF               	movlw	191
 14902  003A8A  6F60               	movwf	??_xtoa& (0+255),b
 14903  003A8C  0EFF               	movlw	255
 14904  003A8E  6F61               	movwf	(??_xtoa+1)& (0+255),b
 14905  003A90  503A               	movf	xtoa@x,w,c
 14906  003A92  6F62               	movwf	(??_xtoa+2)& (0+255),b
 14907  003A94  6B63               	clrf	(??_xtoa+3)& (0+255),b
 14908  003A96  5160               	movf	??_xtoa& (0+255),w,b
 14909  003A98  2762               	addwf	(??_xtoa+2)& (0+255),f,b
 14910  003A9A  5161               	movf	(??_xtoa+1)& (0+255),w,b
 14911  003A9C  2363               	addwfc	(??_xtoa+3)& (0+255),f,b
 14912  003A9E  5163               	movf	(??_xtoa+3)& (0+255),w,b
 14913  003AA0  E106               	bnz	u11720
 14914  003AA2  0E1A               	movlw	26
 14915  003AA4  5D62               	subwf	(??_xtoa+2)& (0+255),w,b
 14916  003AA6  B0D8               	btfsc	status,0,c
 14917  003AA8  D002               	goto	u11720
 14918  003AAA  0E01               	movlw	1
 14919  003AAC  D001               	goto	u11730
 14920  003AAE                     u11720:
 14921  003AAE  0E00               	movlw	0
 14922  003AB0                     u11730:
 14923  003AB0  6F68               	movwf	_xtoa$2957& (0+255),b
 14924  003AB2  6B69               	clrf	(_xtoa$2957+1)& (0+255),b
 14925                           
 14926                           ; BSR set to: 0
 14927  003AB4  5168               	movf	_xtoa$2957& (0+255),w,b
 14928  003AB6  1169               	iorwf	(_xtoa$2957+1)& (0+255),w,b
 14929  003AB8  B4D8               	btfsc	status,2,c
 14930  003ABA  D027               	goto	l9549
 14931                           
 14932                           ; BSR set to: 0
 14933  003ABC  0E9F               	movlw	159
 14934  003ABE  6F60               	movwf	??_xtoa& (0+255),b
 14935  003AC0  0EFF               	movlw	255
 14936  003AC2  6F61               	movwf	(??_xtoa+1)& (0+255),b
 14937  003AC4  0E20               	movlw	32
 14938  003AC6  117A               	iorwf	xtoa@c& (0+255),w,b
 14939  003AC8  6F62               	movwf	(??_xtoa+2)& (0+255),b
 14940  003ACA  0E00               	movlw	0
 14941  003ACC  117B               	iorwf	(xtoa@c+1)& (0+255),w,b
 14942  003ACE  6F63               	movwf	(??_xtoa+3)& (0+255),b
 14943  003AD0  5160               	movf	??_xtoa& (0+255),w,b
 14944  003AD2  2762               	addwf	(??_xtoa+2)& (0+255),f,b
 14945  003AD4  5161               	movf	(??_xtoa+1)& (0+255),w,b
 14946  003AD6  2363               	addwfc	(??_xtoa+3)& (0+255),f,b
 14947  003AD8  5163               	movf	(??_xtoa+3)& (0+255),w,b
 14948  003ADA  E106               	bnz	u11750
 14949  003ADC  0E1A               	movlw	26
 14950  003ADE  5D62               	subwf	(??_xtoa+2)& (0+255),w,b
 14951  003AE0  B0D8               	btfsc	status,0,c
 14952  003AE2  D002               	goto	u11750
 14953  003AE4  0E01               	movlw	1
 14954  003AE6  D001               	goto	u11760
 14955  003AE8                     u11750:
 14956  003AE8  0E00               	movlw	0
 14957  003AEA                     u11760:
 14958  003AEA  6F6A               	movwf	_xtoa$2958& (0+255),b
 14959  003AEC  6B6B               	clrf	(_xtoa$2958+1)& (0+255),b
 14960                           
 14961                           ; BSR set to: 0
 14962  003AEE  516A               	movf	_xtoa$2958& (0+255),w,b
 14963  003AF0  116B               	iorwf	(_xtoa$2958+1)& (0+255),w,b
 14964  003AF2  B4D8               	btfsc	status,2,c
 14965  003AF4  D00A               	goto	l9549
 14966                           
 14967                           ; BSR set to: 0
 14968                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 14969  003AF6  C07A  F019         	movff	xtoa@c,toupper@c
 14970  003AFA  C07B  F01A         	movff	xtoa@c+1,toupper@c+1
 14971  003AFE  ECC4  F02A         	call	_toupper	;wreg free
 14972  003B02  C019  F07A         	movff	?_toupper,xtoa@c
 14973  003B06  C01A  F07B         	movff	?_toupper+1,xtoa@c+1
 14974  003B0A                     l9549:
 14975                           
 14976                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 14977  003B0A  0E60               	movlw	low _dbuf
 14978  003B0C  0100               	movlb	0	; () banked
 14979  003B0E  2578               	addwf	xtoa@i& (0+255),w,b
 14980  003B10  6ED9               	movwf	fsr2l,c
 14981  003B12  0E01               	movlw	high _dbuf
 14982  003B14  2179               	addwfc	(xtoa@i+1)& (0+255),w,b
 14983  003B16  6EDA               	movwf	fsr2h,c
 14984  003B18  C07A  FFDF         	movff	xtoa@c,indf2
 14985                           
 14986                           ; BSR set to: 0
 14987                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 650:         --p;
 14988  003B1C  076C               	decf	xtoa@p& (0+255),f,b
 14989  003B1E  A0D8               	btfss	status,0,c
 14990  003B20  076D               	decf	(xtoa@p+1)& (0+255),f,b
 14991                           
 14992                           ; BSR set to: 0
 14993                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 651:         --w;
 14994  003B22  076E               	decf	xtoa@w& (0+255),f,b
 14995  003B24  A0D8               	btfss	status,0,c
 14996  003B26  076F               	decf	(xtoa@w+1)& (0+255),f,b
 14997                           
 14998                           ; BSR set to: 0
 14999                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 15000  003B28  C070  F060         	movff	xtoa@n,??_xtoa
 15001  003B2C  C071  F061         	movff	xtoa@n+1,??_xtoa+1
 15002  003B30  C072  F062         	movff	xtoa@n+2,??_xtoa+2
 15003  003B34  C073  F063         	movff	xtoa@n+3,??_xtoa+3
 15004  003B38  C074  F064         	movff	xtoa@n+4,??_xtoa+4
 15005  003B3C  C075  F065         	movff	xtoa@n+5,??_xtoa+5
 15006  003B40  C076  F066         	movff	xtoa@n+6,??_xtoa+6
 15007  003B44  C077  F067         	movff	xtoa@n+7,??_xtoa+7
 15008  003B48  0E05               	movlw	5
 15009  003B4A  D009               	goto	u11780
 15010  003B4C                     u11785:
 15011  003B4C  90D8               	bcf	status,0,c
 15012  003B4E  3367               	rrcf	(??_xtoa+7)& (0+255),f,b
 15013  003B50  3366               	rrcf	(??_xtoa+6)& (0+255),f,b
 15014  003B52  3365               	rrcf	(??_xtoa+5)& (0+255),f,b
 15015  003B54  3364               	rrcf	(??_xtoa+4)& (0+255),f,b
 15016  003B56  3363               	rrcf	(??_xtoa+3)& (0+255),f,b
 15017  003B58  3362               	rrcf	(??_xtoa+2)& (0+255),f,b
 15018  003B5A  3361               	rrcf	(??_xtoa+1)& (0+255),f,b
 15019  003B5C  3360               	rrcf	??_xtoa& (0+255),f,b
 15020  003B5E                     u11780:
 15021  003B5E  2EE8               	decfsz	wreg,f,c
 15022  003B60  D7F5               	goto	u11785
 15023  003B62  C060  F070         	movff	??_xtoa,xtoa@n
 15024  003B66  C061  F071         	movff	??_xtoa+1,xtoa@n+1
 15025  003B6A  C062  F072         	movff	??_xtoa+2,xtoa@n+2
 15026  003B6E  C063  F073         	movff	??_xtoa+3,xtoa@n+3
 15027  003B72  C064  F074         	movff	??_xtoa+4,xtoa@n+4
 15028  003B76  C065  F075         	movff	??_xtoa+5,xtoa@n+5
 15029  003B7A  C066  F076         	movff	??_xtoa+6,xtoa@n+6
 15030  003B7E  C067  F077         	movff	??_xtoa+7,xtoa@n+7
 15031  003B82                     l9557:
 15032                           
 15033                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 15034  003B82  0100               	movlb	0	; () banked
 15035  003B84  BF79               	btfsc	(xtoa@i+1)& (0+255),7,b
 15036  003B86  D020               	goto	u11830
 15037  003B88  5179               	movf	(xtoa@i+1)& (0+255),w,b
 15038  003B8A  E104               	bnz	u11790
 15039  003B8C  0E02               	movlw	2
 15040  003B8E  5D78               	subwf	xtoa@i& (0+255),w,b
 15041  003B90  A0D8               	btfss	status,0,c
 15042  003B92  D01A               	goto	u11830
 15043  003B94                     u11790:
 15044                           
 15045                           ; BSR set to: 0
 15046  003B94  5170               	movf	xtoa@n& (0+255),w,b
 15047  003B96  1171               	iorwf	(xtoa@n+1)& (0+255),w,b
 15048  003B98  1172               	iorwf	(xtoa@n+2)& (0+255),w,b
 15049  003B9A  1173               	iorwf	(xtoa@n+3)& (0+255),w,b
 15050  003B9C  1174               	iorwf	(xtoa@n+4)& (0+255),w,b
 15051  003B9E  1175               	iorwf	(xtoa@n+5)& (0+255),w,b
 15052  003BA0  1176               	iorwf	(xtoa@n+6)& (0+255),w,b
 15053  003BA2  1177               	iorwf	(xtoa@n+7)& (0+255),w,b
 15054  003BA4  A4D8               	btfss	status,2,c
 15055  003BA6  D759               	goto	l9527
 15056                           
 15057                           ; BSR set to: 0
 15058  003BA8  BF6D               	btfsc	(xtoa@p+1)& (0+255),7,b
 15059  003BAA  D005               	goto	u11810
 15060  003BAC  516D               	movf	(xtoa@p+1)& (0+255),w,b
 15061  003BAE  E102               	bnz	u11811
 15062  003BB0  056C               	decf	xtoa@p& (0+255),w,b
 15063  003BB2  B0D8               	btfsc	status,0,c
 15064  003BB4                     u11811:
 15065  003BB4  D752               	goto	l9527
 15066  003BB6                     u11810:
 15067                           
 15068                           ; BSR set to: 0
 15069  003BB6  BF6F               	btfsc	(xtoa@w+1)& (0+255),7,b
 15070  003BB8  D007               	goto	u11830
 15071  003BBA  516F               	movf	(xtoa@w+1)& (0+255),w,b
 15072  003BBC  E103               	bnz	u11820
 15073  003BBE  056E               	decf	xtoa@w& (0+255),w,b
 15074  003BC0  A0D8               	btfss	status,0,c
 15075  003BC2  D002               	goto	u11830
 15076  003BC4                     u11820:
 15077                           
 15078                           ; BSR set to: 0
 15079  003BC4  B23F               	btfsc	_flags,1,c
 15080  003BC6  D749               	goto	l9527
 15081  003BC8                     u11830:
 15082                           
 15083                           ; BSR set to: 0
 15084                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 15085  003BC8  A83F               	btfss	_flags,4,c
 15086  003BCA  D016               	goto	l9573
 15087                           
 15088                           ; BSR set to: 0
 15089                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 657:         --i;
 15090  003BCC  0778               	decf	xtoa@i& (0+255),f,b
 15091  003BCE  A0D8               	btfss	status,0,c
 15092  003BD0  0779               	decf	(xtoa@i+1)& (0+255),f,b
 15093                           
 15094                           ; BSR set to: 0
 15095                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 15096  003BD2  0E60               	movlw	low _dbuf
 15097  003BD4  2578               	addwf	xtoa@i& (0+255),w,b
 15098  003BD6  6ED9               	movwf	fsr2l,c
 15099  003BD8  0E01               	movlw	high _dbuf
 15100  003BDA  2179               	addwfc	(xtoa@i+1)& (0+255),w,b
 15101  003BDC  6EDA               	movwf	fsr2h,c
 15102  003BDE  C03A  FFDF         	movff	xtoa@x,indf2
 15103                           
 15104                           ; BSR set to: 0
 15105                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 659:         --i;
 15106  003BE2  0778               	decf	xtoa@i& (0+255),f,b
 15107  003BE4  A0D8               	btfss	status,0,c
 15108  003BE6  0779               	decf	(xtoa@i+1)& (0+255),f,b
 15109                           
 15110                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 15111  003BE8  0E60               	movlw	low _dbuf
 15112  003BEA  2578               	addwf	xtoa@i& (0+255),w,b
 15113  003BEC  6ED9               	movwf	fsr2l,c
 15114  003BEE  0E01               	movlw	high _dbuf
 15115  003BF0  2179               	addwfc	(xtoa@i+1)& (0+255),w,b
 15116  003BF2  6EDA               	movwf	fsr2h,c
 15117  003BF4  0E30               	movlw	48
 15118  003BF6  6EDF               	movwf	indf2,c
 15119  003BF8                     l9573:
 15120                           
 15121                           ; BSR set to: 0
 15122                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 15123  003BF8  C030  F025         	movff	xtoa@fp,pad@fp
 15124  003BFC  C031  F026         	movff	xtoa@fp+1,pad@fp+1
 15125  003C00  0E60               	movlw	low _dbuf
 15126  003C02  2578               	addwf	xtoa@i& (0+255),w,b
 15127  003C04  6E27               	movwf	pad@buf,c
 15128  003C06  0E01               	movlw	high _dbuf
 15129  003C08  2179               	addwfc	(xtoa@i+1)& (0+255),w,b
 15130  003C0A  6E28               	movwf	pad@buf+1,c
 15131  003C0C  C06E  F029         	movff	xtoa@w,pad@p
 15132  003C10  C06F  F02A         	movff	xtoa@w+1,pad@p+1
 15133  003C14  EC8F  F027         	call	_pad	;wreg free
 15134  003C18  C025  F030         	movff	?_pad,?_xtoa
 15135  003C1C  C026  F031         	movff	?_pad+1,?_xtoa+1
 15136  003C20  0012               	return		;funcret
 15137  003C22                     __end_of_xtoa:
 15138                           	opt callstack 0
 15139                           
 15140 ;; *************** function _toupper *****************
 15141 ;; Defined at:
 15142 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/toupper.c"
 15143 ;; Parameters:    Size  Location     Type
 15144 ;;  c               2   24[COMRAM] int 
 15145 ;; Auto vars:     Size  Location     Type
 15146 ;;		None
 15147 ;; Return value:  Size  Location     Type
 15148 ;;                  2   24[COMRAM] int 
 15149 ;; Registers used:
 15150 ;;		wreg, status,2, status,0
 15151 ;; Tracked objects:
 15152 ;;		On entry : 0/0
 15153 ;;		On exit  : 0/0
 15154 ;;		Unchanged: 0/0
 15155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15156 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15157 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15158 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15159 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15160 ;;Total ram usage:        8 bytes
 15161 ;; Hardware stack levels used:    1
 15162 ;; Hardware stack levels required when called:    9
 15163 ;; This function calls:
 15164 ;;		_islower
 15165 ;; This function is called by:
 15166 ;;		_xtoa
 15167 ;;		_strtof
 15168 ;; This function uses a non-reentrant model
 15169 ;;
 15170                           
 15171                           	psect	text58
 15172  005588                     __ptext58:
 15173                           	opt callstack 0
 15174  005588                     _toupper:
 15175                           	opt callstack 16
 15176                           
 15177                           ;incstack = 0
 15178  005588  0E9F               	movlw	159
 15179  00558A  6E1B               	movwf	??_toupper& (0+255),c
 15180  00558C  0EFF               	movlw	255
 15181  00558E  6E1C               	movwf	(??_toupper+1)& (0+255),c
 15182  005590  C019  F01D         	movff	toupper@c,??_toupper+2
 15183  005594  C01A  F01E         	movff	toupper@c+1,??_toupper+3
 15184  005598  501B               	movf	??_toupper,w,c
 15185  00559A  261D               	addwf	??_toupper+2,f,c
 15186  00559C  501C               	movf	??_toupper+1,w,c
 15187  00559E  221E               	addwfc	??_toupper+3,f,c
 15188  0055A0  501E               	movf	??_toupper+3,w,c
 15189  0055A2  E106               	bnz	u10980
 15190  0055A4  0E1A               	movlw	26
 15191  0055A6  5C1D               	subwf	??_toupper+2,w,c
 15192  0055A8  B0D8               	btfsc	status,0,c
 15193  0055AA  D002               	goto	u10980
 15194  0055AC  0E01               	movlw	1
 15195  0055AE  D001               	goto	u10990
 15196  0055B0                     u10980:
 15197  0055B0  0E00               	movlw	0
 15198  0055B2                     u10990:
 15199  0055B2  6E1F               	movwf	_toupper$3759,c
 15200  0055B4  6A20               	clrf	_toupper$3759+1,c
 15201  0055B6  501F               	movf	_toupper$3759,w,c
 15202  0055B8  1020               	iorwf	_toupper$3759+1,w,c
 15203  0055BA  B4D8               	btfsc	status,2,c
 15204  0055BC  D005               	goto	l2272
 15205  0055BE  0E5F               	movlw	95
 15206  0055C0  1419               	andwf	toupper@c,w,c
 15207  0055C2  6E19               	movwf	?_toupper,c
 15208  0055C4  6A1A               	clrf	?_toupper+1,c
 15209  0055C6  0012               	return	
 15210  0055C8                     l2272:
 15211  0055C8  C019  F019         	movff	toupper@c,?_toupper
 15212  0055CC  C01A  F01A         	movff	toupper@c+1,?_toupper+1
 15213  0055D0  0012               	return		;funcret
 15214  0055D2                     __end_of_toupper:
 15215                           	opt callstack 0
 15216                           
 15217 ;; *************** function _islower *****************
 15218 ;; Defined at:
 15219 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/islower.c"
 15220 ;; Parameters:    Size  Location     Type
 15221 ;;  c               2   18[COMRAM] int 
 15222 ;; Auto vars:     Size  Location     Type
 15223 ;;		None
 15224 ;; Return value:  Size  Location     Type
 15225 ;;                  2   18[COMRAM] int 
 15226 ;; Registers used:
 15227 ;;		wreg, status,2, status,0
 15228 ;; Tracked objects:
 15229 ;;		On entry : 0/0
 15230 ;;		On exit  : 0/0
 15231 ;;		Unchanged: 0/0
 15232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15233 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15235 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15236 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15237 ;;Total ram usage:        6 bytes
 15238 ;; Hardware stack levels used:    1
 15239 ;; Hardware stack levels required when called:    8
 15240 ;; This function calls:
 15241 ;;		Nothing
 15242 ;; This function is called by:
 15243 ;;		_toupper
 15244 ;; This function uses a non-reentrant model
 15245 ;;
 15246                           
 15247                           	psect	text59
 15248  0059AE                     __ptext59:
 15249                           	opt callstack 0
 15250  0059AE                     _islower:
 15251                           	opt callstack 16
 15252                           
 15253                           ;incstack = 0
 15254  0059AE  0E9F               	movlw	159
 15255  0059B0  6E15               	movwf	??_islower& (0+255),c
 15256  0059B2  0EFF               	movlw	255
 15257  0059B4  6E16               	movwf	(??_islower+1)& (0+255),c
 15258  0059B6  C013  F017         	movff	islower@c,??_islower+2
 15259  0059BA  C014  F018         	movff	islower@c+1,??_islower+3
 15260  0059BE  5015               	movf	??_islower,w,c
 15261  0059C0  2617               	addwf	??_islower+2,f,c
 15262  0059C2  5016               	movf	??_islower+1,w,c
 15263  0059C4  2218               	addwfc	??_islower+3,f,c
 15264  0059C6  5018               	movf	??_islower+3,w,c
 15265  0059C8  E106               	bnz	u10870
 15266  0059CA  0E1A               	movlw	26
 15267  0059CC  5C17               	subwf	??_islower+2,w,c
 15268  0059CE  B0D8               	btfsc	status,0,c
 15269  0059D0  D002               	goto	u10870
 15270  0059D2  0E01               	movlw	1
 15271  0059D4  D001               	goto	u10880
 15272  0059D6                     u10870:
 15273  0059D6  0E00               	movlw	0
 15274  0059D8                     u10880:
 15275  0059D8  6E13               	movwf	?_islower,c
 15276  0059DA  6A14               	clrf	?_islower+1,c
 15277  0059DC  0012               	return		;funcret
 15278  0059DE                     __end_of_islower:
 15279                           	opt callstack 0
 15280                           
 15281 ;; *************** function _isupper *****************
 15282 ;; Defined at:
 15283 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isupper.c"
 15284 ;; Parameters:    Size  Location     Type
 15285 ;;  c               2   18[COMRAM] int 
 15286 ;; Auto vars:     Size  Location     Type
 15287 ;;		None
 15288 ;; Return value:  Size  Location     Type
 15289 ;;                  2   18[COMRAM] int 
 15290 ;; Registers used:
 15291 ;;		wreg, status,2, status,0
 15292 ;; Tracked objects:
 15293 ;;		On entry : 0/0
 15294 ;;		On exit  : 0/0
 15295 ;;		Unchanged: 0/0
 15296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15297 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15299 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15300 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15301 ;;Total ram usage:        6 bytes
 15302 ;; Hardware stack levels used:    1
 15303 ;; Hardware stack levels required when called:    8
 15304 ;; This function calls:
 15305 ;;		Nothing
 15306 ;; This function is called by:
 15307 ;;		_xtoa
 15308 ;; This function uses a non-reentrant model
 15309 ;;
 15310                           
 15311                           	psect	text60
 15312  0059DE                     __ptext60:
 15313                           	opt callstack 0
 15314  0059DE                     _isupper:
 15315                           	opt callstack 17
 15316                           
 15317                           ;incstack = 0
 15318  0059DE  0EBF               	movlw	191
 15319  0059E0  6E15               	movwf	??_isupper& (0+255),c
 15320  0059E2  0EFF               	movlw	255
 15321  0059E4  6E16               	movwf	(??_isupper+1)& (0+255),c
 15322  0059E6  C013  F017         	movff	isupper@c,??_isupper+2
 15323  0059EA  C014  F018         	movff	isupper@c+1,??_isupper+3
 15324  0059EE  5015               	movf	??_isupper,w,c
 15325  0059F0  2617               	addwf	??_isupper+2,f,c
 15326  0059F2  5016               	movf	??_isupper+1,w,c
 15327  0059F4  2218               	addwfc	??_isupper+3,f,c
 15328  0059F6  5018               	movf	??_isupper+3,w,c
 15329  0059F8  E106               	bnz	u10940
 15330  0059FA  0E1A               	movlw	26
 15331  0059FC  5C17               	subwf	??_isupper+2,w,c
 15332  0059FE  B0D8               	btfsc	status,0,c
 15333  005A00  D002               	goto	u10940
 15334  005A02  0E01               	movlw	1
 15335  005A04  D001               	goto	u10950
 15336  005A06                     u10940:
 15337  005A06  0E00               	movlw	0
 15338  005A08                     u10950:
 15339  005A08  6E13               	movwf	?_isupper,c
 15340  005A0A  6A14               	clrf	?_isupper+1,c
 15341  005A0C  0012               	return		;funcret
 15342  005A0E                     __end_of_isupper:
 15343                           	opt callstack 0
 15344                           
 15345 ;; *************** function _isalpha *****************
 15346 ;; Defined at:
 15347 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isalpha.c"
 15348 ;; Parameters:    Size  Location     Type
 15349 ;;  c               2   18[COMRAM] int 
 15350 ;; Auto vars:     Size  Location     Type
 15351 ;;		None
 15352 ;; Return value:  Size  Location     Type
 15353 ;;                  2   18[COMRAM] int 
 15354 ;; Registers used:
 15355 ;;		wreg, status,2, status,0
 15356 ;; Tracked objects:
 15357 ;;		On entry : 0/0
 15358 ;;		On exit  : 0/0
 15359 ;;		Unchanged: 0/0
 15360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15361 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15363 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15364 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15365 ;;Total ram usage:        6 bytes
 15366 ;; Hardware stack levels used:    1
 15367 ;; Hardware stack levels required when called:    8
 15368 ;; This function calls:
 15369 ;;		Nothing
 15370 ;; This function is called by:
 15371 ;;		_xtoa
 15372 ;; This function uses a non-reentrant model
 15373 ;;
 15374                           
 15375                           	psect	text61
 15376  005948                     __ptext61:
 15377                           	opt callstack 0
 15378  005948                     _isalpha:
 15379                           	opt callstack 17
 15380                           
 15381                           ;incstack = 0
 15382  005948  0E9F               	movlw	159
 15383  00594A  6E15               	movwf	??_isalpha& (0+255),c
 15384  00594C  0EFF               	movlw	255
 15385  00594E  6E16               	movwf	(??_isalpha+1)& (0+255),c
 15386  005950  0E20               	movlw	32
 15387  005952  1013               	iorwf	isalpha@c,w,c
 15388  005954  6E17               	movwf	(??_isalpha+2)& (0+255),c
 15389  005956  0E00               	movlw	0
 15390  005958  1014               	iorwf	isalpha@c+1,w,c
 15391  00595A  6E18               	movwf	(??_isalpha+3)& (0+255),c
 15392  00595C  5015               	movf	??_isalpha,w,c
 15393  00595E  2617               	addwf	??_isalpha+2,f,c
 15394  005960  5016               	movf	??_isalpha+1,w,c
 15395  005962  2218               	addwfc	??_isalpha+3,f,c
 15396  005964  5018               	movf	??_isalpha+3,w,c
 15397  005966  E106               	bnz	u10960
 15398  005968  0E1A               	movlw	26
 15399  00596A  5C17               	subwf	??_isalpha+2,w,c
 15400  00596C  B0D8               	btfsc	status,0,c
 15401  00596E  D002               	goto	u10960
 15402  005970  0E01               	movlw	1
 15403  005972  D001               	goto	u10970
 15404  005974                     u10960:
 15405  005974  0E00               	movlw	0
 15406  005976                     u10970:
 15407  005976  6E13               	movwf	?_isalpha,c
 15408  005978  6A14               	clrf	?_isalpha+1,c
 15409  00597A  0012               	return		;funcret
 15410  00597C                     __end_of_isalpha:
 15411                           	opt callstack 0
 15412                           
 15413 ;; *************** function _utoa *****************
 15414 ;; Defined at:
 15415 ;;		line 593 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 15416 ;; Parameters:    Size  Location     Type
 15417 ;;  fp              2   47[COMRAM] PTR struct _IO_FILE
 15418 ;;		 -> sprintf@f(6), NULL(0), 
 15419 ;;  d               8   49[COMRAM] unsigned long long 
 15420 ;; Auto vars:     Size  Location     Type
 15421 ;;  n               8   12[BANK0 ] unsigned long long 
 15422 ;;  i               2   20[BANK0 ] int 
 15423 ;;  w               2   10[BANK0 ] int 
 15424 ;;  p               2    8[BANK0 ] int 
 15425 ;; Return value:  Size  Location     Type
 15426 ;;                  2   47[COMRAM] int 
 15427 ;; Registers used:
 15428 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15429 ;; Tracked objects:
 15430 ;;		On entry : 0/0
 15431 ;;		On exit  : 0/0
 15432 ;;		Unchanged: 0/0
 15433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15434 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15435 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15436 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15437 ;;      Totals:        10      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15438 ;;Total ram usage:       32 bytes
 15439 ;; Hardware stack levels used:    1
 15440 ;; Hardware stack levels required when called:   13
 15441 ;; This function calls:
 15442 ;;		___lodiv
 15443 ;;		___lomod
 15444 ;;		_pad
 15445 ;; This function is called by:
 15446 ;;		_vfpfcnvrt
 15447 ;; This function uses a non-reentrant model
 15448 ;;
 15449                           
 15450                           	psect	text62
 15451  003C22                     __ptext62:
 15452                           	opt callstack 0
 15453  003C22                     _utoa:
 15454                           	opt callstack 13
 15455                           
 15456                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 15457                           
 15458                           ;incstack = 0
 15459  003C22  AE3E               	btfss	_prec+1,7,c
 15460                           
 15461                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 15462  003C24  923F               	bcf	_flags,1,c
 15463                           
 15464                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 15465  003C26  BE3E               	btfsc	_prec+1,7,c
 15466  003C28  D005               	goto	u11620
 15467  003C2A  503E               	movf	_prec+1,w,c
 15468  003C2C  E109               	bnz	l1114
 15469  003C2E  043D               	decf	_prec,w,c
 15470  003C30  B0D8               	btfsc	status,0,c
 15471  003C32  D006               	goto	l1114
 15472  003C34                     u11620:
 15473  003C34  0E00               	movlw	0
 15474  003C36  0100               	movlb	0	; () banked
 15475  003C38  6F69               	movwf	(utoa@p+1)& (0+255),b
 15476  003C3A  0E01               	movlw	1
 15477  003C3C  6F68               	movwf	utoa@p& (0+255),b
 15478  003C3E  D004               	goto	l1116
 15479  003C40                     l1114:
 15480  003C40  C03D  F068         	movff	_prec,utoa@p
 15481  003C44  C03E  F069         	movff	_prec+1,utoa@p+1
 15482  003C48                     l1116:
 15483                           
 15484                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 603:     w = width;
 15485  003C48  C03B  F06A         	movff	_width,utoa@w
 15486  003C4C  C03C  F06B         	movff	_width+1,utoa@w+1
 15487                           
 15488                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 606:     n = d;
 15489  003C50  C032  F06C         	movff	utoa@d,utoa@n
 15490  003C54  C033  F06D         	movff	utoa@d+1,utoa@n+1
 15491  003C58  C034  F06E         	movff	utoa@d+2,utoa@n+2
 15492  003C5C  C035  F06F         	movff	utoa@d+3,utoa@n+3
 15493  003C60  C036  F070         	movff	utoa@d+4,utoa@n+4
 15494  003C64  C037  F071         	movff	utoa@d+5,utoa@n+5
 15495  003C68  C038  F072         	movff	utoa@d+6,utoa@n+6
 15496  003C6C  C039  F073         	movff	utoa@d+7,utoa@n+7
 15497                           
 15498                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 15499  003C70  0E00               	movlw	0
 15500  003C72  0100               	movlb	0	; () banked
 15501  003C74  6F75               	movwf	(utoa@i+1)& (0+255),b
 15502  003C76  0E1F               	movlw	31
 15503  003C78  6F74               	movwf	utoa@i& (0+255),b
 15504                           
 15505                           ; BSR set to: 0
 15506                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 15507  003C7A  0E00               	movlw	0
 15508  003C7C  0101               	movlb	1	; () banked
 15509  003C7E  6F7F               	movwf	(_dbuf+31)& (0+255),b
 15510                           
 15511                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 15512  003C80  D077               	goto	l9497
 15513  003C82                     l9487:
 15514                           
 15515                           ; BSR set to: 0
 15516                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 610:         --i;
 15517  003C82  0774               	decf	utoa@i& (0+255),f,b
 15518  003C84  A0D8               	btfss	status,0,c
 15519  003C86  0775               	decf	(utoa@i+1)& (0+255),f,b
 15520                           
 15521                           ; BSR set to: 0
 15522                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 15523  003C88  0E60               	movlw	low _dbuf
 15524  003C8A  2574               	addwf	utoa@i& (0+255),w,b
 15525  003C8C  6ED9               	movwf	fsr2l,c
 15526  003C8E  0E01               	movlw	high _dbuf
 15527  003C90  2175               	addwfc	(utoa@i+1)& (0+255),w,b
 15528  003C92  6EDA               	movwf	fsr2h,c
 15529  003C94  C06C  F013         	movff	utoa@n,___lomod@dividend
 15530  003C98  C06D  F014         	movff	utoa@n+1,___lomod@dividend+1
 15531  003C9C  C06E  F015         	movff	utoa@n+2,___lomod@dividend+2
 15532  003CA0  C06F  F016         	movff	utoa@n+3,___lomod@dividend+3
 15533  003CA4  C070  F017         	movff	utoa@n+4,___lomod@dividend+4
 15534  003CA8  C071  F018         	movff	utoa@n+5,___lomod@dividend+5
 15535  003CAC  C072  F019         	movff	utoa@n+6,___lomod@dividend+6
 15536  003CB0  C073  F01A         	movff	utoa@n+7,___lomod@dividend+7
 15537  003CB4  0E0A               	movlw	10
 15538  003CB6  6E1B               	movwf	___lomod@divisor,c
 15539  003CB8  0E00               	movlw	0
 15540  003CBA  6E1C               	movwf	___lomod@divisor+1,c
 15541  003CBC  0E00               	movlw	0
 15542  003CBE  6E1D               	movwf	___lomod@divisor+2,c
 15543  003CC0  0E00               	movlw	0
 15544  003CC2  6E1E               	movwf	___lomod@divisor+3,c
 15545  003CC4  0E00               	movlw	0
 15546  003CC6  6E1F               	movwf	___lomod@divisor+4,c
 15547  003CC8  0E00               	movlw	0
 15548  003CCA  6E20               	movwf	___lomod@divisor+5,c
 15549  003CCC  0E00               	movlw	0
 15550  003CCE  6E21               	movwf	___lomod@divisor+6,c
 15551  003CD0  0E00               	movlw	0
 15552  003CD2  6E22               	movwf	___lomod@divisor+7,c
 15553  003CD4  ECE8  F026         	call	___lomod	;wreg free
 15554  003CD8  C013  F060         	movff	?___lomod,??_utoa
 15555  003CDC  C014  F061         	movff	?___lomod+1,??_utoa+1
 15556  003CE0  C015  F062         	movff	?___lomod+2,??_utoa+2
 15557  003CE4  C016  F063         	movff	?___lomod+3,??_utoa+3
 15558  003CE8  C017  F064         	movff	?___lomod+4,??_utoa+4
 15559  003CEC  C018  F065         	movff	?___lomod+5,??_utoa+5
 15560  003CF0  C019  F066         	movff	?___lomod+6,??_utoa+6
 15561  003CF4  C01A  F067         	movff	?___lomod+7,??_utoa+7
 15562  003CF8  0100               	movlb	0	; () banked
 15563  003CFA  5160               	movf	??_utoa& (0+255),w,b
 15564  003CFC  0F30               	addlw	48
 15565  003CFE  6EDF               	movwf	indf2,c
 15566                           
 15567                           ; BSR set to: 0
 15568                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 612:         --p;
 15569  003D00  0768               	decf	utoa@p& (0+255),f,b
 15570  003D02  A0D8               	btfss	status,0,c
 15571  003D04  0769               	decf	(utoa@p+1)& (0+255),f,b
 15572                           
 15573                           ; BSR set to: 0
 15574                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 613:         --w;
 15575  003D06  076A               	decf	utoa@w& (0+255),f,b
 15576  003D08  A0D8               	btfss	status,0,c
 15577  003D0A  076B               	decf	(utoa@w+1)& (0+255),f,b
 15578                           
 15579                           ; BSR set to: 0
 15580                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 15581  003D0C  C06C  F013         	movff	utoa@n,___lodiv@dividend
 15582  003D10  C06D  F014         	movff	utoa@n+1,___lodiv@dividend+1
 15583  003D14  C06E  F015         	movff	utoa@n+2,___lodiv@dividend+2
 15584  003D18  C06F  F016         	movff	utoa@n+3,___lodiv@dividend+3
 15585  003D1C  C070  F017         	movff	utoa@n+4,___lodiv@dividend+4
 15586  003D20  C071  F018         	movff	utoa@n+5,___lodiv@dividend+5
 15587  003D24  C072  F019         	movff	utoa@n+6,___lodiv@dividend+6
 15588  003D28  C073  F01A         	movff	utoa@n+7,___lodiv@dividend+7
 15589  003D2C  0E0A               	movlw	10
 15590  003D2E  6E1B               	movwf	___lodiv@divisor,c
 15591  003D30  0E00               	movlw	0
 15592  003D32  6E1C               	movwf	___lodiv@divisor+1,c
 15593  003D34  0E00               	movlw	0
 15594  003D36  6E1D               	movwf	___lodiv@divisor+2,c
 15595  003D38  0E00               	movlw	0
 15596  003D3A  6E1E               	movwf	___lodiv@divisor+3,c
 15597  003D3C  0E00               	movlw	0
 15598  003D3E  6E1F               	movwf	___lodiv@divisor+4,c
 15599  003D40  0E00               	movlw	0
 15600  003D42  6E20               	movwf	___lodiv@divisor+5,c
 15601  003D44  0E00               	movlw	0
 15602  003D46  6E21               	movwf	___lodiv@divisor+6,c
 15603  003D48  0E00               	movlw	0
 15604  003D4A  6E22               	movwf	___lodiv@divisor+7,c
 15605  003D4C  ECC9  F025         	call	___lodiv	;wreg free
 15606  003D50  C013  F06C         	movff	?___lodiv,utoa@n
 15607  003D54  C014  F06D         	movff	?___lodiv+1,utoa@n+1
 15608  003D58  C015  F06E         	movff	?___lodiv+2,utoa@n+2
 15609  003D5C  C016  F06F         	movff	?___lodiv+3,utoa@n+3
 15610  003D60  C017  F070         	movff	?___lodiv+4,utoa@n+4
 15611  003D64  C018  F071         	movff	?___lodiv+5,utoa@n+5
 15612  003D68  C019  F072         	movff	?___lodiv+6,utoa@n+6
 15613  003D6C  C01A  F073         	movff	?___lodiv+7,utoa@n+7
 15614  003D70                     l9497:
 15615                           
 15616                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 15617  003D70  0100               	movlb	0	; () banked
 15618  003D72  5174               	movf	utoa@i& (0+255),w,b
 15619  003D74  1175               	iorwf	(utoa@i+1)& (0+255),w,b
 15620  003D76  B4D8               	btfsc	status,2,c
 15621  003D78  D01A               	goto	u11670
 15622                           
 15623                           ; BSR set to: 0
 15624  003D7A  516C               	movf	utoa@n& (0+255),w,b
 15625  003D7C  116D               	iorwf	(utoa@n+1)& (0+255),w,b
 15626  003D7E  116E               	iorwf	(utoa@n+2)& (0+255),w,b
 15627  003D80  116F               	iorwf	(utoa@n+3)& (0+255),w,b
 15628  003D82  1170               	iorwf	(utoa@n+4)& (0+255),w,b
 15629  003D84  1171               	iorwf	(utoa@n+5)& (0+255),w,b
 15630  003D86  1172               	iorwf	(utoa@n+6)& (0+255),w,b
 15631  003D88  1173               	iorwf	(utoa@n+7)& (0+255),w,b
 15632  003D8A  A4D8               	btfss	status,2,c
 15633  003D8C  D77A               	goto	l9487
 15634                           
 15635                           ; BSR set to: 0
 15636  003D8E  BF69               	btfsc	(utoa@p+1)& (0+255),7,b
 15637  003D90  D005               	goto	u11650
 15638  003D92  5169               	movf	(utoa@p+1)& (0+255),w,b
 15639  003D94  E102               	bnz	u11651
 15640  003D96  0568               	decf	utoa@p& (0+255),w,b
 15641  003D98  B0D8               	btfsc	status,0,c
 15642  003D9A                     u11651:
 15643  003D9A  D773               	goto	l9487
 15644  003D9C                     u11650:
 15645                           
 15646                           ; BSR set to: 0
 15647  003D9C  BF6B               	btfsc	(utoa@w+1)& (0+255),7,b
 15648  003D9E  D007               	goto	u11670
 15649  003DA0  516B               	movf	(utoa@w+1)& (0+255),w,b
 15650  003DA2  E103               	bnz	u11660
 15651  003DA4  056A               	decf	utoa@w& (0+255),w,b
 15652  003DA6  A0D8               	btfss	status,0,c
 15653  003DA8  D002               	goto	u11670
 15654  003DAA                     u11660:
 15655                           
 15656                           ; BSR set to: 0
 15657  003DAA  B23F               	btfsc	_flags,1,c
 15658  003DAC  D76A               	goto	l9487
 15659  003DAE                     u11670:
 15660                           
 15661                           ; BSR set to: 0
 15662                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 15663  003DAE  C030  F025         	movff	utoa@fp,pad@fp
 15664  003DB2  C031  F026         	movff	utoa@fp+1,pad@fp+1
 15665  003DB6  0E60               	movlw	low _dbuf
 15666  003DB8  2574               	addwf	utoa@i& (0+255),w,b
 15667  003DBA  6E27               	movwf	pad@buf,c
 15668  003DBC  0E01               	movlw	high _dbuf
 15669  003DBE  2175               	addwfc	(utoa@i+1)& (0+255),w,b
 15670  003DC0  6E28               	movwf	pad@buf+1,c
 15671  003DC2  C06A  F029         	movff	utoa@w,pad@p
 15672  003DC6  C06B  F02A         	movff	utoa@w+1,pad@p+1
 15673  003DCA  EC8F  F027         	call	_pad	;wreg free
 15674  003DCE  C025  F030         	movff	?_pad,?_utoa
 15675  003DD2  C026  F031         	movff	?_pad+1,?_utoa+1
 15676  003DD6  0012               	return		;funcret
 15677  003DD8                     __end_of_utoa:
 15678                           	opt callstack 0
 15679                           
 15680 ;; *************** function ___lomod *****************
 15681 ;; Defined at:
 15682 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lomod.c"
 15683 ;; Parameters:    Size  Location     Type
 15684 ;;  dividend        8   18[COMRAM] unsigned long long 
 15685 ;;  divisor         8   26[COMRAM] unsigned long long 
 15686 ;; Auto vars:     Size  Location     Type
 15687 ;;  counter         1   34[COMRAM] unsigned char 
 15688 ;; Return value:  Size  Location     Type
 15689 ;;                  8   18[COMRAM] unsigned long long 
 15690 ;; Registers used:
 15691 ;;		wreg, status,2, status,0
 15692 ;; Tracked objects:
 15693 ;;		On entry : 0/0
 15694 ;;		On exit  : 0/0
 15695 ;;		Unchanged: 0/0
 15696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15697 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15698 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15700 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15701 ;;Total ram usage:       17 bytes
 15702 ;; Hardware stack levels used:    1
 15703 ;; Hardware stack levels required when called:    8
 15704 ;; This function calls:
 15705 ;;		Nothing
 15706 ;; This function is called by:
 15707 ;;		_utoa
 15708 ;; This function uses a non-reentrant model
 15709 ;;
 15710                           
 15711                           	psect	text63
 15712  004DD0                     __ptext63:
 15713                           	opt callstack 0
 15714  004DD0                     ___lomod:
 15715                           	opt callstack 17
 15716                           
 15717                           ;incstack = 0
 15718  004DD0  501B               	movf	___lomod@divisor,w,c
 15719  004DD2  101C               	iorwf	___lomod@divisor+1,w,c
 15720  004DD4  101D               	iorwf	___lomod@divisor+2,w,c
 15721  004DD6  101E               	iorwf	___lomod@divisor+3,w,c
 15722  004DD8  101F               	iorwf	___lomod@divisor+4,w,c
 15723  004DDA  1020               	iorwf	___lomod@divisor+5,w,c
 15724  004DDC  1021               	iorwf	___lomod@divisor+6,w,c
 15725  004DDE  1022               	iorwf	___lomod@divisor+7,w,c
 15726  004DE0  B4D8               	btfsc	status,2,c
 15727  004DE2  D03C               	goto	l1687
 15728  004DE4  0E01               	movlw	1
 15729  004DE6  6E23               	movwf	___lomod@counter,c
 15730  004DE8  D00A               	goto	l9287
 15731  004DEA                     l9285:
 15732  004DEA  90D8               	bcf	status,0,c
 15733  004DEC  361B               	rlcf	___lomod@divisor,f,c
 15734  004DEE  361C               	rlcf	___lomod@divisor+1,f,c
 15735  004DF0  361D               	rlcf	___lomod@divisor+2,f,c
 15736  004DF2  361E               	rlcf	___lomod@divisor+3,f,c
 15737  004DF4  361F               	rlcf	___lomod@divisor+4,f,c
 15738  004DF6  3620               	rlcf	___lomod@divisor+5,f,c
 15739  004DF8  3621               	rlcf	___lomod@divisor+6,f,c
 15740  004DFA  3622               	rlcf	___lomod@divisor+7,f,c
 15741  004DFC  2A23               	incf	___lomod@counter,f,c
 15742  004DFE                     l9287:
 15743  004DFE  AE22               	btfss	___lomod@divisor+7,7,c
 15744  004E00  D7F4               	goto	l9285
 15745  004E02                     u11210:
 15746  004E02  501B               	movf	___lomod@divisor,w,c
 15747  004E04  5C13               	subwf	___lomod@dividend,w,c
 15748  004E06  501C               	movf	___lomod@divisor+1,w,c
 15749  004E08  5814               	subwfb	___lomod@dividend+1,w,c
 15750  004E0A  501D               	movf	___lomod@divisor+2,w,c
 15751  004E0C  5815               	subwfb	___lomod@dividend+2,w,c
 15752  004E0E  501E               	movf	___lomod@divisor+3,w,c
 15753  004E10  5816               	subwfb	___lomod@dividend+3,w,c
 15754  004E12  501F               	movf	___lomod@divisor+4,w,c
 15755  004E14  5817               	subwfb	___lomod@dividend+4,w,c
 15756  004E16  5020               	movf	___lomod@divisor+5,w,c
 15757  004E18  5818               	subwfb	___lomod@dividend+5,w,c
 15758  004E1A  5021               	movf	___lomod@divisor+6,w,c
 15759  004E1C  5819               	subwfb	___lomod@dividend+6,w,c
 15760  004E1E  5022               	movf	___lomod@divisor+7,w,c
 15761  004E20  581A               	subwfb	___lomod@dividend+7,w,c
 15762  004E22  A0D8               	btfss	status,0,c
 15763  004E24  D010               	goto	l9293
 15764  004E26  501B               	movf	___lomod@divisor,w,c
 15765  004E28  5E13               	subwf	___lomod@dividend,f,c
 15766  004E2A  501C               	movf	___lomod@divisor+1,w,c
 15767  004E2C  5A14               	subwfb	___lomod@dividend+1,f,c
 15768  004E2E  501D               	movf	___lomod@divisor+2,w,c
 15769  004E30  5A15               	subwfb	___lomod@dividend+2,f,c
 15770  004E32  501E               	movf	___lomod@divisor+3,w,c
 15771  004E34  5A16               	subwfb	___lomod@dividend+3,f,c
 15772  004E36  501F               	movf	___lomod@divisor+4,w,c
 15773  004E38  5A17               	subwfb	___lomod@dividend+4,f,c
 15774  004E3A  5020               	movf	___lomod@divisor+5,w,c
 15775  004E3C  5A18               	subwfb	___lomod@dividend+5,f,c
 15776  004E3E  5021               	movf	___lomod@divisor+6,w,c
 15777  004E40  5A19               	subwfb	___lomod@dividend+6,f,c
 15778  004E42  5022               	movf	___lomod@divisor+7,w,c
 15779  004E44  5A1A               	subwfb	___lomod@dividend+7,f,c
 15780  004E46                     l9293:
 15781  004E46  90D8               	bcf	status,0,c
 15782  004E48  3222               	rrcf	___lomod@divisor+7,f,c
 15783  004E4A  3221               	rrcf	___lomod@divisor+6,f,c
 15784  004E4C  3220               	rrcf	___lomod@divisor+5,f,c
 15785  004E4E  321F               	rrcf	___lomod@divisor+4,f,c
 15786  004E50  321E               	rrcf	___lomod@divisor+3,f,c
 15787  004E52  321D               	rrcf	___lomod@divisor+2,f,c
 15788  004E54  321C               	rrcf	___lomod@divisor+1,f,c
 15789  004E56  321B               	rrcf	___lomod@divisor,f,c
 15790  004E58  2E23               	decfsz	___lomod@counter,f,c
 15791  004E5A  D7D3               	goto	u11210
 15792  004E5C                     l1687:
 15793  004E5C  C013  F013         	movff	___lomod@dividend,?___lomod
 15794  004E60  C014  F014         	movff	___lomod@dividend+1,?___lomod+1
 15795  004E64  C015  F015         	movff	___lomod@dividend+2,?___lomod+2
 15796  004E68  C016  F016         	movff	___lomod@dividend+3,?___lomod+3
 15797  004E6C  C017  F017         	movff	___lomod@dividend+4,?___lomod+4
 15798  004E70  C018  F018         	movff	___lomod@dividend+5,?___lomod+5
 15799  004E74  C019  F019         	movff	___lomod@dividend+6,?___lomod+6
 15800  004E78  C01A  F01A         	movff	___lomod@dividend+7,?___lomod+7
 15801  004E7C  0012               	return		;funcret
 15802  004E7E                     __end_of___lomod:
 15803                           	opt callstack 0
 15804                           
 15805 ;; *************** function ___lodiv *****************
 15806 ;; Defined at:
 15807 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lodiv.c"
 15808 ;; Parameters:    Size  Location     Type
 15809 ;;  dividend        8   18[COMRAM] unsigned long long 
 15810 ;;  divisor         8   26[COMRAM] unsigned long long 
 15811 ;; Auto vars:     Size  Location     Type
 15812 ;;  quotient        8   34[COMRAM] unsigned long long 
 15813 ;;  counter         1   42[COMRAM] unsigned char 
 15814 ;; Return value:  Size  Location     Type
 15815 ;;                  8   18[COMRAM] unsigned long long 
 15816 ;; Registers used:
 15817 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15818 ;; Tracked objects:
 15819 ;;		On entry : 0/0
 15820 ;;		On exit  : 0/0
 15821 ;;		Unchanged: 0/0
 15822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15823 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15824 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15826 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15827 ;;Total ram usage:       25 bytes
 15828 ;; Hardware stack levels used:    1
 15829 ;; Hardware stack levels required when called:    8
 15830 ;; This function calls:
 15831 ;;		Nothing
 15832 ;; This function is called by:
 15833 ;;		_utoa
 15834 ;; This function uses a non-reentrant model
 15835 ;;
 15836                           
 15837                           	psect	text64
 15838  004B92                     __ptext64:
 15839                           	opt callstack 0
 15840  004B92                     ___lodiv:
 15841                           	opt callstack 17
 15842                           
 15843                           ;incstack = 0
 15844  004B92  EE20  F023         	lfsr	2,___lodiv@quotient
 15845  004B96  0E07               	movlw	7
 15846  004B98                     u11161:
 15847  004B98  6ADE               	clrf	postinc2,c
 15848  004B9A  06E8               	decf	wreg,f,c
 15849  004B9C  E2FD               	bc	u11161
 15850  004B9E  501B               	movf	___lodiv@divisor,w,c
 15851  004BA0  101C               	iorwf	___lodiv@divisor+1,w,c
 15852  004BA2  101D               	iorwf	___lodiv@divisor+2,w,c
 15853  004BA4  101E               	iorwf	___lodiv@divisor+3,w,c
 15854  004BA6  101F               	iorwf	___lodiv@divisor+4,w,c
 15855  004BA8  1020               	iorwf	___lodiv@divisor+5,w,c
 15856  004BAA  1021               	iorwf	___lodiv@divisor+6,w,c
 15857  004BAC  1022               	iorwf	___lodiv@divisor+7,w,c
 15858  004BAE  B4D8               	btfsc	status,2,c
 15859  004BB0  D046               	goto	l1677
 15860  004BB2  0E01               	movlw	1
 15861  004BB4  6E2B               	movwf	___lodiv@counter,c
 15862  004BB6  D00A               	goto	l9267
 15863  004BB8                     l9265:
 15864  004BB8  90D8               	bcf	status,0,c
 15865  004BBA  361B               	rlcf	___lodiv@divisor,f,c
 15866  004BBC  361C               	rlcf	___lodiv@divisor+1,f,c
 15867  004BBE  361D               	rlcf	___lodiv@divisor+2,f,c
 15868  004BC0  361E               	rlcf	___lodiv@divisor+3,f,c
 15869  004BC2  361F               	rlcf	___lodiv@divisor+4,f,c
 15870  004BC4  3620               	rlcf	___lodiv@divisor+5,f,c
 15871  004BC6  3621               	rlcf	___lodiv@divisor+6,f,c
 15872  004BC8  3622               	rlcf	___lodiv@divisor+7,f,c
 15873  004BCA  2A2B               	incf	___lodiv@counter,f,c
 15874  004BCC                     l9267:
 15875  004BCC  AE22               	btfss	___lodiv@divisor+7,7,c
 15876  004BCE  D7F4               	goto	l9265
 15877  004BD0                     u11180:
 15878  004BD0  90D8               	bcf	status,0,c
 15879  004BD2  3623               	rlcf	___lodiv@quotient,f,c
 15880  004BD4  3624               	rlcf	___lodiv@quotient+1,f,c
 15881  004BD6  3625               	rlcf	___lodiv@quotient+2,f,c
 15882  004BD8  3626               	rlcf	___lodiv@quotient+3,f,c
 15883  004BDA  3627               	rlcf	___lodiv@quotient+4,f,c
 15884  004BDC  3628               	rlcf	___lodiv@quotient+5,f,c
 15885  004BDE  3629               	rlcf	___lodiv@quotient+6,f,c
 15886  004BE0  362A               	rlcf	___lodiv@quotient+7,f,c
 15887  004BE2  501B               	movf	___lodiv@divisor,w,c
 15888  004BE4  5C13               	subwf	___lodiv@dividend,w,c
 15889  004BE6  501C               	movf	___lodiv@divisor+1,w,c
 15890  004BE8  5814               	subwfb	___lodiv@dividend+1,w,c
 15891  004BEA  501D               	movf	___lodiv@divisor+2,w,c
 15892  004BEC  5815               	subwfb	___lodiv@dividend+2,w,c
 15893  004BEE  501E               	movf	___lodiv@divisor+3,w,c
 15894  004BF0  5816               	subwfb	___lodiv@dividend+3,w,c
 15895  004BF2  501F               	movf	___lodiv@divisor+4,w,c
 15896  004BF4  5817               	subwfb	___lodiv@dividend+4,w,c
 15897  004BF6  5020               	movf	___lodiv@divisor+5,w,c
 15898  004BF8  5818               	subwfb	___lodiv@dividend+5,w,c
 15899  004BFA  5021               	movf	___lodiv@divisor+6,w,c
 15900  004BFC  5819               	subwfb	___lodiv@dividend+6,w,c
 15901  004BFE  5022               	movf	___lodiv@divisor+7,w,c
 15902  004C00  581A               	subwfb	___lodiv@dividend+7,w,c
 15903  004C02  A0D8               	btfss	status,0,c
 15904  004C04  D011               	goto	l9277
 15905  004C06  501B               	movf	___lodiv@divisor,w,c
 15906  004C08  5E13               	subwf	___lodiv@dividend,f,c
 15907  004C0A  501C               	movf	___lodiv@divisor+1,w,c
 15908  004C0C  5A14               	subwfb	___lodiv@dividend+1,f,c
 15909  004C0E  501D               	movf	___lodiv@divisor+2,w,c
 15910  004C10  5A15               	subwfb	___lodiv@dividend+2,f,c
 15911  004C12  501E               	movf	___lodiv@divisor+3,w,c
 15912  004C14  5A16               	subwfb	___lodiv@dividend+3,f,c
 15913  004C16  501F               	movf	___lodiv@divisor+4,w,c
 15914  004C18  5A17               	subwfb	___lodiv@dividend+4,f,c
 15915  004C1A  5020               	movf	___lodiv@divisor+5,w,c
 15916  004C1C  5A18               	subwfb	___lodiv@dividend+5,f,c
 15917  004C1E  5021               	movf	___lodiv@divisor+6,w,c
 15918  004C20  5A19               	subwfb	___lodiv@dividend+6,f,c
 15919  004C22  5022               	movf	___lodiv@divisor+7,w,c
 15920  004C24  5A1A               	subwfb	___lodiv@dividend+7,f,c
 15921  004C26  8023               	bsf	___lodiv@quotient,0,c
 15922  004C28                     l9277:
 15923  004C28  90D8               	bcf	status,0,c
 15924  004C2A  3222               	rrcf	___lodiv@divisor+7,f,c
 15925  004C2C  3221               	rrcf	___lodiv@divisor+6,f,c
 15926  004C2E  3220               	rrcf	___lodiv@divisor+5,f,c
 15927  004C30  321F               	rrcf	___lodiv@divisor+4,f,c
 15928  004C32  321E               	rrcf	___lodiv@divisor+3,f,c
 15929  004C34  321D               	rrcf	___lodiv@divisor+2,f,c
 15930  004C36  321C               	rrcf	___lodiv@divisor+1,f,c
 15931  004C38  321B               	rrcf	___lodiv@divisor,f,c
 15932  004C3A  2E2B               	decfsz	___lodiv@counter,f,c
 15933  004C3C  D7C9               	goto	u11180
 15934  004C3E                     l1677:
 15935  004C3E  C023  F013         	movff	___lodiv@quotient,?___lodiv
 15936  004C42  C024  F014         	movff	___lodiv@quotient+1,?___lodiv+1
 15937  004C46  C025  F015         	movff	___lodiv@quotient+2,?___lodiv+2
 15938  004C4A  C026  F016         	movff	___lodiv@quotient+3,?___lodiv+3
 15939  004C4E  C027  F017         	movff	___lodiv@quotient+4,?___lodiv+4
 15940  004C52  C028  F018         	movff	___lodiv@quotient+5,?___lodiv+5
 15941  004C56  C029  F019         	movff	___lodiv@quotient+6,?___lodiv+6
 15942  004C5A  C02A  F01A         	movff	___lodiv@quotient+7,?___lodiv+7
 15943  004C5E  0012               	return		;funcret
 15944  004C60                     __end_of___lodiv:
 15945                           	opt callstack 0
 15946                           
 15947 ;; *************** function _strncmp *****************
 15948 ;; Defined at:
 15949 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
 15950 ;; Parameters:    Size  Location     Type
 15951 ;;  _l              2   18[COMRAM] PTR const unsigned char 
 15952 ;;		 -> STR_50(2), STR_49(3), STR_48(15), STR_47(24), 
 15953 ;;		 -> STR_45(9), STR_44(11), STR_43(7), STR_42(7), 
 15954 ;;		 -> STR_41(7), STR_40(7), STR_10(21), get_pfb@s(2), 
 15955 ;;		 -> STR_8(3), STR_7(3), STR_6(3), STR_5(3), 
 15956 ;;		 -> STR_4(3), appData.receive_packet(64), NULL(0), appData(76), 
 15957 ;;  _r              2   20[COMRAM] PTR const unsigned char 
 15958 ;;		 -> STR_147(3), STR_143(3), STR_138(3), STR_134(3), 
 15959 ;;		 -> STR_129(4), STR_125(4), STR_120(3), STR_115(3), 
 15960 ;;		 -> STR_110(4), STR_105(3), STR_100(3), STR_95(4), 
 15961 ;;		 -> STR_90(3), STR_85(3), STR_80(4), STR_75(3), 
 15962 ;;		 -> STR_71(3), STR_66(3), STR_62(3), STR_57(4), 
 15963 ;;		 -> STR_53(4), STR_25(2), STR_18(3), STR_16(9), 
 15964 ;;		 -> STR_14(11), 
 15965 ;;  n               2   22[COMRAM] unsigned int 
 15966 ;; Auto vars:     Size  Location     Type
 15967 ;;  r               2   27[COMRAM] PTR const unsigned char 
 15968 ;;		 -> STR_147(3), STR_143(3), STR_138(3), STR_134(3), 
 15969 ;;		 -> STR_129(4), STR_125(4), STR_120(3), STR_115(3), 
 15970 ;;		 -> STR_110(4), STR_105(3), STR_100(3), STR_95(4), 
 15971 ;;		 -> STR_90(3), STR_85(3), STR_80(4), STR_75(3), 
 15972 ;;		 -> STR_71(3), STR_66(3), STR_62(3), STR_57(4), 
 15973 ;;		 -> STR_53(4), STR_25(2), STR_18(3), STR_16(9), 
 15974 ;;		 -> STR_14(11), 
 15975 ;;  l               2   25[COMRAM] PTR const unsigned char 
 15976 ;;		 -> STR_50(2), STR_49(3), STR_48(15), STR_47(24), 
 15977 ;;		 -> STR_45(9), STR_44(11), STR_43(7), STR_42(7), 
 15978 ;;		 -> STR_41(7), STR_40(7), STR_10(21), get_pfb@s(2), 
 15979 ;;		 -> STR_8(3), STR_7(3), STR_6(3), STR_5(3), 
 15980 ;;		 -> STR_4(3), appData.receive_packet(64), NULL(0), appData(76), 
 15981 ;; Return value:  Size  Location     Type
 15982 ;;                  2   18[COMRAM] int 
 15983 ;; Registers used:
 15984 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 15985 ;; Tracked objects:
 15986 ;;		On entry : 0/0
 15987 ;;		On exit  : 0/0
 15988 ;;		Unchanged: 0/0
 15989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15990 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15991 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15992 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15993 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15994 ;;Total ram usage:       11 bytes
 15995 ;; Hardware stack levels used:    1
 15996 ;; Hardware stack levels required when called:    8
 15997 ;; This function calls:
 15998 ;;		Nothing
 15999 ;; This function is called by:
 16000 ;;		_vfpfcnvrt
 16001 ;;		_strstr
 16002 ;; This function uses a non-reentrant model
 16003 ;;
 16004                           
 16005                           	psect	text65
 16006  004826                     __ptext65:
 16007                           	opt callstack 0
 16008  004826                     _strncmp:
 16009                           	opt callstack 20
 16010                           
 16011                           ;incstack = 0
 16012  004826  C013  F01A         	movff	strncmp@_l,strncmp@l
 16013  00482A  C014  F01B         	movff	strncmp@_l+1,strncmp@l+1
 16014  00482E  C015  F01C         	movff	strncmp@_r,strncmp@r
 16015  004832  C016  F01D         	movff	strncmp@_r+1,strncmp@r+1
 16016  004836  0617               	decf	strncmp@n,f,c
 16017  004838  A0D8               	btfss	status,0,c
 16018  00483A  0618               	decf	strncmp@n+1,f,c
 16019  00483C  2817               	incf	strncmp@n,w,c
 16020  00483E  E10F               	bnz	l9627
 16021  004840  2818               	incf	strncmp@n+1,w,c
 16022  004842  A4D8               	btfss	status,2,c
 16023  004844  D00C               	goto	l9627
 16024  004846  0E00               	movlw	0
 16025  004848  6E14               	movwf	?_strncmp+1,c
 16026  00484A  0E00               	movlw	0
 16027  00484C  6E13               	movwf	?_strncmp,c
 16028  00484E  0012               	return	
 16029  004850                     l9625:
 16030  004850  4A1A               	infsnz	strncmp@l,f,c
 16031  004852  2A1B               	incf	strncmp@l+1,f,c
 16032  004854  4A1C               	infsnz	strncmp@r,f,c
 16033  004856  2A1D               	incf	strncmp@r+1,f,c
 16034  004858  0617               	decf	strncmp@n,f,c
 16035  00485A  A0D8               	btfss	status,0,c
 16036  00485C  0618               	decf	strncmp@n+1,f,c
 16037  00485E                     l9627:
 16038  00485E  C01A  FFF6         	movff	strncmp@l,tblptrl
 16039  004862  C01B  FFF7         	movff	strncmp@l+1,tblptrh
 16040  004866  6AF8               	clrf	tblptru,c
 16041  004868  0E0E               	movlw	(high __ramtop+-1)
 16042  00486A  64F7               	cpfsgt	tblptrh,c
 16043  00486C  D003               	bra	u11937
 16044  00486E  0008               	tblrd		*
 16045  004870  50F5               	movf	tablat,w,c
 16046  004872  D005               	bra	u11930
 16047  004874                     u11937:
 16048  004874  CFF6 FFE9          	movff	tblptrl,fsr0l
 16049  004878  CFF7 FFEA          	movff	tblptrh,fsr0h
 16050  00487C  50EF               	movf	indf0,w,c
 16051  00487E                     u11930:
 16052  00487E  0900               	iorlw	0
 16053  004880  B4D8               	btfsc	status,2,c
 16054  004882  D027               	goto	u11970
 16055  004884  C01C  FFF6         	movff	strncmp@r,tblptrl
 16056  004888  C01D  FFF7         	movff	strncmp@r+1,tblptrh
 16057  00488C                     	if	0	;tblptru may be non-zero
 16058  00488C                     	endif
 16059  00488C                     	if	0	;tblptru may be non-zero
 16060  00488C                     	endif
 16061  00488C  0008               	tblrd		*
 16062  00488E  50F5               	movf	tablat,w,c
 16063  004890  0900               	iorlw	0
 16064  004892  B4D8               	btfsc	status,2,c
 16065  004894  D01E               	goto	u11970
 16066  004896  5017               	movf	strncmp@n,w,c
 16067  004898  1018               	iorwf	strncmp@n+1,w,c
 16068  00489A  B4D8               	btfsc	status,2,c
 16069  00489C  D01A               	goto	u11970
 16070  00489E  C01C  FFF6         	movff	strncmp@r,tblptrl
 16071  0048A2  C01D  FFF7         	movff	strncmp@r+1,tblptrh
 16072  0048A6                     	if	0	;tblptru may be non-zero
 16073  0048A6                     	endif
 16074  0048A6                     	if	0	;tblptru may be non-zero
 16075  0048A6                     	endif
 16076  0048A6  0008               	tblrd		*
 16077  0048A8  CFF5 F019          	movff	tablat,??_strncmp
 16078  0048AC  C01A  FFF6         	movff	strncmp@l,tblptrl
 16079  0048B0  C01B  FFF7         	movff	strncmp@l+1,tblptrh
 16080  0048B4  6AF8               	clrf	tblptru,c
 16081  0048B6  0E0E               	movlw	(high __ramtop+-1)
 16082  0048B8  64F7               	cpfsgt	tblptrh,c
 16083  0048BA  D003               	bra	u11977
 16084  0048BC  0008               	tblrd		*
 16085  0048BE  50F5               	movf	tablat,w,c
 16086  0048C0  D005               	bra	u11975
 16087  0048C2                     u11977:
 16088  0048C2  CFF6 FFE9          	movff	tblptrl,fsr0l
 16089  0048C6  CFF7 FFEA          	movff	tblptrh,fsr0h
 16090  0048CA  50EF               	movf	indf0,w,c
 16091  0048CC                     u11975:
 16092  0048CC  1819               	xorwf	??_strncmp,w,c
 16093  0048CE  B4D8               	btfsc	status,2,c
 16094  0048D0  D7BF               	goto	l9625
 16095  0048D2                     u11970:
 16096  0048D2  C01A  FFF6         	movff	strncmp@l,tblptrl
 16097  0048D6  C01B  FFF7         	movff	strncmp@l+1,tblptrh
 16098  0048DA  6AF8               	clrf	tblptru,c
 16099  0048DC  0E0E               	movlw	(high __ramtop+-1)
 16100  0048DE  64F7               	cpfsgt	tblptrh,c
 16101  0048E0  D003               	bra	u11987
 16102  0048E2  0008               	tblrd		*
 16103  0048E4  50F5               	movf	tablat,w,c
 16104  0048E6  D005               	bra	u11980
 16105  0048E8                     u11987:
 16106  0048E8  CFF6 FFE9          	movff	tblptrl,fsr0l
 16107  0048EC  CFF7 FFEA          	movff	tblptrh,fsr0h
 16108  0048F0  50EF               	movf	indf0,w,c
 16109  0048F2                     u11980:
 16110  0048F2  6E19               	movwf	??_strncmp& (0+255),c
 16111  0048F4  C01C  FFF6         	movff	strncmp@r,tblptrl
 16112  0048F8  C01D  FFF7         	movff	strncmp@r+1,tblptrh
 16113  0048FC                     	if	0	;tblptru may be non-zero
 16114  0048FC                     	endif
 16115  0048FC                     	if	0	;tblptru may be non-zero
 16116  0048FC                     	endif
 16117  0048FC  0008               	tblrd		*
 16118  0048FE  50F5               	movf	tablat,w,c
 16119  004900  5C19               	subwf	??_strncmp,w,c
 16120  004902  6E13               	movwf	?_strncmp,c
 16121  004904  6A14               	clrf	?_strncmp+1,c
 16122  004906  A0D8               	btfss	status,0,c
 16123  004908  0614               	decf	?_strncmp+1,f,c
 16124  00490A  0012               	return		;funcret
 16125  00490C                     __end_of_strncmp:
 16126                           	opt callstack 0
 16127                           
 16128 ;; *************** function _stoa *****************
 16129 ;; Defined at:
 16130 ;;		line 546 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 16131 ;; Parameters:    Size  Location     Type
 16132 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 16133 ;;		 -> sprintf@f(6), NULL(0), 
 16134 ;;  s               2   31[COMRAM] PTR unsigned char 
 16135 ;;		 -> ?_printf(2), ?_sprintf(2), STR_46(2), STR_39(21), 
 16136 ;;		 -> STR_38(18), STR_26(13), STR_24(21), STR_23(21), 
 16137 ;;		 -> STR_22(21), STR_21(21), STR_20(21), STR_19(21), 
 16138 ;;		 -> STR_13(11), STR_12(21), STR_11(21), STR_9(15), 
 16139 ;;		 -> d_cur_off(4), d_ff(2), d_version(3), d_reset(3), 
 16140 ;;		 -> STR_3(9), STR_2(12), STR_1(4), APP_Tasks@mc_response(66), 
 16141 ;;		 -> appData(76), 
 16142 ;; Auto vars:     Size  Location     Type
 16143 ;;  nuls            7   34[COMRAM] unsigned char [7]
 16144 ;;  l               2   49[COMRAM] int 
 16145 ;;  p               2   47[COMRAM] int 
 16146 ;;  cp              2   45[COMRAM] PTR unsigned char 
 16147 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), STR_46(2), 
 16148 ;;		 -> STR_39(21), STR_38(18), STR_26(13), STR_24(21), 
 16149 ;;		 -> STR_23(21), STR_22(21), STR_21(21), STR_20(21), 
 16150 ;;		 -> STR_19(21), STR_13(11), STR_12(21), STR_11(21), 
 16151 ;;		 -> STR_9(15), d_cur_off(4), d_ff(2), d_version(3), 
 16152 ;;		 -> d_reset(3), STR_3(9), STR_2(12), STR_1(4), 
 16153 ;;		 -> APP_Tasks@mc_response(66), appData(76), 
 16154 ;;  w               2   43[COMRAM] int 
 16155 ;;  i               2   41[COMRAM] int 
 16156 ;; Return value:  Size  Location     Type
 16157 ;;                  2   29[COMRAM] int 
 16158 ;; Registers used:
 16159 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16160 ;; Tracked objects:
 16161 ;;		On entry : 0/0
 16162 ;;		On exit  : 0/0
 16163 ;;		Unchanged: 0/0
 16164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16165 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16166 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16167 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16168 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16169 ;;Total ram usage:       22 bytes
 16170 ;; Hardware stack levels used:    1
 16171 ;; Hardware stack levels required when called:   11
 16172 ;; This function calls:
 16173 ;;		_fputc
 16174 ;;		_strlen
 16175 ;; This function is called by:
 16176 ;;		_vfpfcnvrt
 16177 ;; This function uses a non-reentrant model
 16178 ;;
 16179                           
 16180                           	psect	text66
 16181  0044AA                     __ptext66:
 16182                           	opt callstack 0
 16183  0044AA                     _stoa:
 16184                           	opt callstack 15
 16185                           
 16186                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 16187                           
 16188                           ;incstack = 0
 16189  0044AA  EE21  F080         	lfsr	2,stoa@F1152
 16190  0044AE  EE10  F023         	lfsr	1,stoa@nuls
 16191  0044B2  0E06               	movlw	6
 16192  0044B4                     u11511:
 16193  0044B4  CFDB FFE3          	movff	plusw2,plusw1
 16194  0044B8  06E8               	decf	wreg,f,c
 16195  0044BA  E2FC               	bc	u11511
 16196                           
 16197                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 16198  0044BC  C020  F02E         	movff	stoa@s,stoa@cp
 16199  0044C0  C021  F02F         	movff	stoa@s+1,stoa@cp+1
 16200                           
 16201                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 16202  0044C4  502E               	movf	stoa@cp,w,c
 16203  0044C6  102F               	iorwf	stoa@cp+1,w,c
 16204  0044C8  A4D8               	btfss	status,2,c
 16205  0044CA  D004               	goto	l9441
 16206                           
 16207                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 16208  0044CC  0E23               	movlw	low stoa@nuls
 16209  0044CE  6E2E               	movwf	stoa@cp,c
 16210  0044D0  0E00               	movlw	high stoa@nuls
 16211  0044D2  6E2F               	movwf	stoa@cp+1,c
 16212  0044D4                     l9441:
 16213                           
 16214                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 16215  0044D4  C02E  F013         	movff	stoa@cp,strlen@s
 16216  0044D8  C02F  F014         	movff	stoa@cp+1,strlen@s+1
 16217  0044DC  EC0C  F02B         	call	_strlen	;wreg free
 16218  0044E0  C013  F032         	movff	?_strlen,stoa@l
 16219  0044E4  C014  F033         	movff	?_strlen+1,stoa@l+1
 16220                           
 16221                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 16222  0044E8  C03D  F030         	movff	_prec,stoa@p
 16223  0044EC  C03E  F031         	movff	_prec+1,stoa@p+1
 16224                           
 16225                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 16226  0044F0  BE31               	btfsc	stoa@p+1,7,c
 16227  0044F2  D00E               	goto	l1095
 16228  0044F4  5032               	movf	stoa@l,w,c
 16229  0044F6  5C30               	subwf	stoa@p,w,c
 16230  0044F8  5031               	movf	stoa@p+1,w,c
 16231  0044FA  0A80               	xorlw	128
 16232  0044FC  6E22               	movwf	??_stoa& (0+255),c
 16233  0044FE  5033               	movf	stoa@l+1,w,c
 16234  004500  0A80               	xorlw	128
 16235  004502  5822               	subwfb	??_stoa& (0+255),w,c
 16236  004504  B0D8               	btfsc	status,0,c
 16237  004506  D004               	goto	l1095
 16238  004508  C030  F032         	movff	stoa@p,stoa@l
 16239  00450C  C031  F033         	movff	stoa@p+1,stoa@l+1
 16240  004510                     l1095:
 16241                           
 16242                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 561:     p = l;
 16243  004510  C032  F030         	movff	stoa@l,stoa@p
 16244  004514  C033  F031         	movff	stoa@l+1,stoa@p+1
 16245                           
 16246                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 562:     w = width;
 16247  004518  C03B  F02C         	movff	_width,stoa@w
 16248  00451C  C03C  F02D         	movff	_width+1,stoa@w+1
 16249                           
 16250                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 16251  004520  A03F               	btfss	_flags,0,c
 16252  004522  D00D               	goto	l9455
 16253  004524  D016               	goto	u11560
 16254  004526                     l9451:
 16255                           
 16256                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 16257  004526  0E00               	movlw	0
 16258  004528  6E16               	movwf	fputc@c+1,c
 16259  00452A  0E20               	movlw	32
 16260  00452C  6E15               	movwf	fputc@c,c
 16261  00452E  C01E  F017         	movff	stoa@fp,fputc@fp
 16262  004532  C01F  F018         	movff	stoa@fp+1,fputc@fp+1
 16263  004536  EC3F  F027         	call	_fputc	;wreg free
 16264                           
 16265                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 568:             ++l;
 16266  00453A  4A32               	infsnz	stoa@l,f,c
 16267  00453C  2A33               	incf	stoa@l+1,f,c
 16268  00453E                     l9455:
 16269                           
 16270                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 16271  00453E  502C               	movf	stoa@w,w,c
 16272  004540  5C32               	subwf	stoa@l,w,c
 16273  004542  5033               	movf	stoa@l+1,w,c
 16274  004544  0A80               	xorlw	128
 16275  004546  6E22               	movwf	??_stoa& (0+255),c
 16276  004548  502D               	movf	stoa@w+1,w,c
 16277  00454A  0A80               	xorlw	128
 16278  00454C  5822               	subwfb	??_stoa& (0+255),w,c
 16279  00454E  A0D8               	btfss	status,0,c
 16280  004550  D7EA               	goto	l9451
 16281  004552                     u11560:
 16282                           
 16283                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 16284  004552  0E00               	movlw	0
 16285  004554  6E2B               	movwf	stoa@i+1,c
 16286  004556  0E00               	movlw	0
 16287  004558  6E2A               	movwf	stoa@i,c
 16288                           
 16289                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 16290  00455A  D01E               	goto	l9465
 16291  00455C                     l9459:
 16292                           
 16293                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 16294  00455C  C02E  FFF6         	movff	stoa@cp,tblptrl
 16295  004560  C02F  FFF7         	movff	stoa@cp+1,tblptrh
 16296  004564  6AF8               	clrf	tblptru,c
 16297  004566  0E0E               	movlw	(high __ramtop+-1)
 16298  004568  64F7               	cpfsgt	tblptrh,c
 16299  00456A  D003               	bra	u11577
 16300  00456C  0008               	tblrd		*
 16301  00456E  50F5               	movf	tablat,w,c
 16302  004570  D005               	bra	u11570
 16303  004572                     u11577:
 16304  004572  CFF6 FFE9          	movff	tblptrl,fsr0l
 16305  004576  CFF7 FFEA          	movff	tblptrh,fsr0h
 16306  00457A  50EF               	movf	indf0,w,c
 16307  00457C                     u11570:
 16308  00457C  6E22               	movwf	??_stoa& (0+255),c
 16309  00457E  5022               	movf	??_stoa,w,c
 16310  004580  6E15               	movwf	fputc@c,c
 16311  004582  6A16               	clrf	fputc@c+1,c
 16312  004584  C01E  F017         	movff	stoa@fp,fputc@fp
 16313  004588  C01F  F018         	movff	stoa@fp+1,fputc@fp+1
 16314  00458C  EC3F  F027         	call	_fputc	;wreg free
 16315                           
 16316                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 16317  004590  4A2E               	infsnz	stoa@cp,f,c
 16318  004592  2A2F               	incf	stoa@cp+1,f,c
 16319                           
 16320                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 577:         ++i;
 16321  004594  4A2A               	infsnz	stoa@i,f,c
 16322  004596  2A2B               	incf	stoa@i+1,f,c
 16323  004598                     l9465:
 16324                           
 16325                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 16326  004598  5030               	movf	stoa@p,w,c
 16327  00459A  5C2A               	subwf	stoa@i,w,c
 16328  00459C  502B               	movf	stoa@i+1,w,c
 16329  00459E  0A80               	xorlw	128
 16330  0045A0  6E22               	movwf	??_stoa& (0+255),c
 16331  0045A2  5031               	movf	stoa@p+1,w,c
 16332  0045A4  0A80               	xorlw	128
 16333  0045A6  5822               	subwfb	??_stoa& (0+255),w,c
 16334  0045A8  A0D8               	btfss	status,0,c
 16335  0045AA  D7D8               	goto	l9459
 16336                           
 16337                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 16338  0045AC  B03F               	btfsc	_flags,0,c
 16339  0045AE  D00D               	goto	l9473
 16340  0045B0  D016               	goto	u11600
 16341  0045B2                     l9469:
 16342                           
 16343                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 16344  0045B2  0E00               	movlw	0
 16345  0045B4  6E16               	movwf	fputc@c+1,c
 16346  0045B6  0E20               	movlw	32
 16347  0045B8  6E15               	movwf	fputc@c,c
 16348  0045BA  C01E  F017         	movff	stoa@fp,fputc@fp
 16349  0045BE  C01F  F018         	movff	stoa@fp+1,fputc@fp+1
 16350  0045C2  EC3F  F027         	call	_fputc	;wreg free
 16351                           
 16352                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 584:             ++l;
 16353  0045C6  4A32               	infsnz	stoa@l,f,c
 16354  0045C8  2A33               	incf	stoa@l+1,f,c
 16355  0045CA                     l9473:
 16356                           
 16357                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 16358  0045CA  502C               	movf	stoa@w,w,c
 16359  0045CC  5C32               	subwf	stoa@l,w,c
 16360  0045CE  5033               	movf	stoa@l+1,w,c
 16361  0045D0  0A80               	xorlw	128
 16362  0045D2  6E22               	movwf	??_stoa& (0+255),c
 16363  0045D4  502D               	movf	stoa@w+1,w,c
 16364  0045D6  0A80               	xorlw	128
 16365  0045D8  5822               	subwfb	??_stoa& (0+255),w,c
 16366  0045DA  A0D8               	btfss	status,0,c
 16367  0045DC  D7EA               	goto	l9469
 16368  0045DE                     u11600:
 16369                           
 16370                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 588:     return l;
 16371                           
 16372                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 586:     }
 16373  0045DE  C032  F01E         	movff	stoa@l,?_stoa
 16374  0045E2  C033  F01F         	movff	stoa@l+1,?_stoa+1
 16375  0045E6  0012               	return		;funcret
 16376  0045E8                     __end_of_stoa:
 16377                           	opt callstack 0
 16378                           
 16379 ;; *************** function _otoa *****************
 16380 ;; Defined at:
 16381 ;;		line 507 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 16382 ;; Parameters:    Size  Location     Type
 16383 ;;  fp              2   47[COMRAM] PTR struct _IO_FILE
 16384 ;;		 -> sprintf@f(6), NULL(0), 
 16385 ;;  d               8   49[COMRAM] unsigned long long 
 16386 ;; Auto vars:     Size  Location     Type
 16387 ;;  n               8   14[BANK0 ] unsigned long long 
 16388 ;;  i               2   22[BANK0 ] int 
 16389 ;;  w               2   12[BANK0 ] int 
 16390 ;;  t               2   10[BANK0 ] int 
 16391 ;;  p               2    8[BANK0 ] int 
 16392 ;; Return value:  Size  Location     Type
 16393 ;;                  2   47[COMRAM] int 
 16394 ;; Registers used:
 16395 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16396 ;; Tracked objects:
 16397 ;;		On entry : 0/0
 16398 ;;		On exit  : 0/0
 16399 ;;		Unchanged: 0/0
 16400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16401 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16402 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16403 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16404 ;;      Totals:        10      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16405 ;;Total ram usage:       34 bytes
 16406 ;; Hardware stack levels used:    1
 16407 ;; Hardware stack levels required when called:   13
 16408 ;; This function calls:
 16409 ;;		_pad
 16410 ;; This function is called by:
 16411 ;;		_vfpfcnvrt
 16412 ;; This function uses a non-reentrant model
 16413 ;;
 16414                           
 16415                           	psect	text67
 16416  003F5E                     __ptext67:
 16417                           	opt callstack 0
 16418  003F5E                     _otoa:
 16419                           	opt callstack 13
 16420                           
 16421                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 507: static int otoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 508: {
      +                          ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 509:     int i, p, t, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 510:     unsigned long long n;;/op
      +                          t/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 513:     if (!(prec < 0)) {
 16422                           
 16423                           ;incstack = 0
 16424  003F5E  AE3E               	btfss	_prec+1,7,c
 16425                           
 16426                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 514:         flags &= ~(1 << 
      +                          1);
 16427  003F60  923F               	bcf	_flags,1,c
 16428                           
 16429                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 516:     p = (0 < prec) ? pre
      +                          c : 1;
 16430  003F62  BE3E               	btfsc	_prec+1,7,c
 16431  003F64  D005               	goto	u11420
 16432  003F66  503E               	movf	_prec+1,w,c
 16433  003F68  E109               	bnz	l1075
 16434  003F6A  043D               	decf	_prec,w,c
 16435  003F6C  B0D8               	btfsc	status,0,c
 16436  003F6E  D006               	goto	l1075
 16437  003F70                     u11420:
 16438  003F70  0E00               	movlw	0
 16439  003F72  0100               	movlb	0	; () banked
 16440  003F74  6F69               	movwf	(otoa@p+1)& (0+255),b
 16441  003F76  0E01               	movlw	1
 16442  003F78  6F68               	movwf	otoa@p& (0+255),b
 16443  003F7A  D004               	goto	l1077
 16444  003F7C                     l1075:
 16445  003F7C  C03D  F068         	movff	_prec,otoa@p
 16446  003F80  C03E  F069         	movff	_prec+1,otoa@p+1
 16447  003F84                     l1077:
 16448                           
 16449                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 517:     w = width;
 16450  003F84  C03B  F06C         	movff	_width,otoa@w
 16451  003F88  C03C  F06D         	movff	_width+1,otoa@w+1
 16452                           
 16453                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 520:     n = d;
 16454  003F8C  C032  F06E         	movff	otoa@d,otoa@n
 16455  003F90  C033  F06F         	movff	otoa@d+1,otoa@n+1
 16456  003F94  C034  F070         	movff	otoa@d+2,otoa@n+2
 16457  003F98  C035  F071         	movff	otoa@d+3,otoa@n+3
 16458  003F9C  C036  F072         	movff	otoa@d+4,otoa@n+4
 16459  003FA0  C037  F073         	movff	otoa@d+5,otoa@n+5
 16460  003FA4  C038  F074         	movff	otoa@d+6,otoa@n+6
 16461  003FA8  C039  F075         	movff	otoa@d+7,otoa@n+7
 16462                           
 16463                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 521:     i = sizeof(dbuf) - 1
      +                          ;
 16464  003FAC  0E00               	movlw	0
 16465  003FAE  0100               	movlb	0	; () banked
 16466  003FB0  6F77               	movwf	(otoa@i+1)& (0+255),b
 16467  003FB2  0E1F               	movlw	31
 16468  003FB4  6F76               	movwf	otoa@i& (0+255),b
 16469                           
 16470                           ; BSR set to: 0
 16471                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 522:     dbuf[i] = '\0';
 16472  003FB6  0E00               	movlw	0
 16473  003FB8  0101               	movlb	1	; () banked
 16474  003FBA  6F7F               	movwf	(_dbuf+31)& (0+255),b
 16475                           
 16476                           ; BSR set to: 1
 16477                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 523:     t = 0;
 16478  003FBC  0E00               	movlw	0
 16479  003FBE  0100               	movlb	0	; () banked
 16480  003FC0  6F6B               	movwf	(otoa@t+1)& (0+255),b
 16481  003FC2  0E00               	movlw	0
 16482  003FC4  6F6A               	movwf	otoa@t& (0+255),b
 16483                           
 16484                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 524:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16485  003FC6  D043               	goto	l9411
 16486  003FC8                     l9399:
 16487                           
 16488                           ; BSR set to: 0
 16489                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 525:         --i;
 16490  003FC8  0776               	decf	otoa@i& (0+255),f,b
 16491  003FCA  A0D8               	btfss	status,0,c
 16492  003FCC  0777               	decf	(otoa@i+1)& (0+255),f,b
 16493                           
 16494                           ; BSR set to: 0
 16495                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 526:         t = n & 07;
 16496  003FCE  0E07               	movlw	7
 16497  003FD0  156E               	andwf	otoa@n& (0+255),w,b
 16498  003FD2  6F6A               	movwf	otoa@t& (0+255),b
 16499  003FD4  6B6B               	clrf	(otoa@t+1)& (0+255),b
 16500                           
 16501                           ; BSR set to: 0
 16502                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 527:         dbuf[i] = '0' + 
      +                          t;
 16503  003FD6  0E60               	movlw	low _dbuf
 16504  003FD8  2576               	addwf	otoa@i& (0+255),w,b
 16505  003FDA  6ED9               	movwf	fsr2l,c
 16506  003FDC  0E01               	movlw	high _dbuf
 16507  003FDE  2177               	addwfc	(otoa@i+1)& (0+255),w,b
 16508  003FE0  6EDA               	movwf	fsr2h,c
 16509  003FE2  516A               	movf	otoa@t& (0+255),w,b
 16510  003FE4  0F30               	addlw	48
 16511  003FE6  6EDF               	movwf	indf2,c
 16512                           
 16513                           ; BSR set to: 0
 16514                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 528:         --p;
 16515  003FE8  0768               	decf	otoa@p& (0+255),f,b
 16516  003FEA  A0D8               	btfss	status,0,c
 16517  003FEC  0769               	decf	(otoa@p+1)& (0+255),f,b
 16518                           
 16519                           ; BSR set to: 0
 16520                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 529:         --w;
 16521  003FEE  076C               	decf	otoa@w& (0+255),f,b
 16522  003FF0  A0D8               	btfss	status,0,c
 16523  003FF2  076D               	decf	(otoa@w+1)& (0+255),f,b
 16524                           
 16525                           ; BSR set to: 0
 16526                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 530:         n = n >> 3;
 16527  003FF4  C06E  F060         	movff	otoa@n,??_otoa
 16528  003FF8  C06F  F061         	movff	otoa@n+1,??_otoa+1
 16529  003FFC  C070  F062         	movff	otoa@n+2,??_otoa+2
 16530  004000  C071  F063         	movff	otoa@n+3,??_otoa+3
 16531  004004  C072  F064         	movff	otoa@n+4,??_otoa+4
 16532  004008  C073  F065         	movff	otoa@n+5,??_otoa+5
 16533  00400C  C074  F066         	movff	otoa@n+6,??_otoa+6
 16534  004010  C075  F067         	movff	otoa@n+7,??_otoa+7
 16535  004014  0E04               	movlw	4
 16536  004016  D009               	goto	u11430
 16537  004018                     u11435:
 16538  004018  90D8               	bcf	status,0,c
 16539  00401A  3367               	rrcf	(??_otoa+7)& (0+255),f,b
 16540  00401C  3366               	rrcf	(??_otoa+6)& (0+255),f,b
 16541  00401E  3365               	rrcf	(??_otoa+5)& (0+255),f,b
 16542  004020  3364               	rrcf	(??_otoa+4)& (0+255),f,b
 16543  004022  3363               	rrcf	(??_otoa+3)& (0+255),f,b
 16544  004024  3362               	rrcf	(??_otoa+2)& (0+255),f,b
 16545  004026  3361               	rrcf	(??_otoa+1)& (0+255),f,b
 16546  004028  3360               	rrcf	??_otoa& (0+255),f,b
 16547  00402A                     u11430:
 16548  00402A  2EE8               	decfsz	wreg,f,c
 16549  00402C  D7F5               	goto	u11435
 16550  00402E  C060  F06E         	movff	??_otoa,otoa@n
 16551  004032  C061  F06F         	movff	??_otoa+1,otoa@n+1
 16552  004036  C062  F070         	movff	??_otoa+2,otoa@n+2
 16553  00403A  C063  F071         	movff	??_otoa+3,otoa@n+3
 16554  00403E  C064  F072         	movff	??_otoa+4,otoa@n+4
 16555  004042  C065  F073         	movff	??_otoa+5,otoa@n+5
 16556  004046  C066  F074         	movff	??_otoa+6,otoa@n+6
 16557  00404A  C067  F075         	movff	??_otoa+7,otoa@n+7
 16558  00404E                     l9411:
 16559                           
 16560                           ; BSR set to: 0
 16561                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 524:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16562  00404E  BF77               	btfsc	(otoa@i+1)& (0+255),7,b
 16563  004050  D01F               	goto	u11480
 16564  004052  5177               	movf	(otoa@i+1)& (0+255),w,b
 16565  004054  E103               	bnz	u11440
 16566  004056  0576               	decf	otoa@i& (0+255),w,b
 16567  004058  A0D8               	btfss	status,0,c
 16568  00405A  D01A               	goto	u11480
 16569  00405C                     u11440:
 16570                           
 16571                           ; BSR set to: 0
 16572  00405C  516E               	movf	otoa@n& (0+255),w,b
 16573  00405E  116F               	iorwf	(otoa@n+1)& (0+255),w,b
 16574  004060  1170               	iorwf	(otoa@n+2)& (0+255),w,b
 16575  004062  1171               	iorwf	(otoa@n+3)& (0+255),w,b
 16576  004064  1172               	iorwf	(otoa@n+4)& (0+255),w,b
 16577  004066  1173               	iorwf	(otoa@n+5)& (0+255),w,b
 16578  004068  1174               	iorwf	(otoa@n+6)& (0+255),w,b
 16579  00406A  1175               	iorwf	(otoa@n+7)& (0+255),w,b
 16580  00406C  A4D8               	btfss	status,2,c
 16581  00406E  D7AC               	goto	l9399
 16582                           
 16583                           ; BSR set to: 0
 16584  004070  BF69               	btfsc	(otoa@p+1)& (0+255),7,b
 16585  004072  D005               	goto	u11460
 16586  004074  5169               	movf	(otoa@p+1)& (0+255),w,b
 16587  004076  E1A8               	bnz	l9399
 16588  004078  0568               	decf	otoa@p& (0+255),w,b
 16589  00407A  B0D8               	btfsc	status,0,c
 16590  00407C  D7A5               	goto	l9399
 16591  00407E                     u11460:
 16592                           
 16593                           ; BSR set to: 0
 16594  00407E  BF6D               	btfsc	(otoa@w+1)& (0+255),7,b
 16595  004080  D007               	goto	u11480
 16596  004082  516D               	movf	(otoa@w+1)& (0+255),w,b
 16597  004084  E103               	bnz	u11470
 16598  004086  056C               	decf	otoa@w& (0+255),w,b
 16599  004088  A0D8               	btfss	status,0,c
 16600  00408A  D002               	goto	u11480
 16601  00408C                     u11470:
 16602                           
 16603                           ; BSR set to: 0
 16604  00408C  B23F               	btfsc	_flags,1,c
 16605  00408E  D79C               	goto	l9399
 16606  004090                     u11480:
 16607                           
 16608                           ; BSR set to: 0
 16609                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 534:     if ((flags & (1 << 4
      +                          )) && t) {
 16610  004090  A83F               	btfss	_flags,4,c
 16611  004092  D012               	goto	l9429
 16612                           
 16613                           ; BSR set to: 0
 16614  004094  516A               	movf	otoa@t& (0+255),w,b
 16615  004096  116B               	iorwf	(otoa@t+1)& (0+255),w,b
 16616  004098  B4D8               	btfsc	status,2,c
 16617  00409A  D00E               	goto	l9429
 16618                           
 16619                           ; BSR set to: 0
 16620                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 535:         --i;
 16621  00409C  0776               	decf	otoa@i& (0+255),f,b
 16622  00409E  A0D8               	btfss	status,0,c
 16623  0040A0  0777               	decf	(otoa@i+1)& (0+255),f,b
 16624                           
 16625                           ; BSR set to: 0
 16626                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 536:         dbuf[i] = '0';
 16627  0040A2  0E60               	movlw	low _dbuf
 16628  0040A4  2576               	addwf	otoa@i& (0+255),w,b
 16629  0040A6  6ED9               	movwf	fsr2l,c
 16630  0040A8  0E01               	movlw	high _dbuf
 16631  0040AA  2177               	addwfc	(otoa@i+1)& (0+255),w,b
 16632  0040AC  6EDA               	movwf	fsr2h,c
 16633  0040AE  0E30               	movlw	48
 16634  0040B0  6EDF               	movwf	indf2,c
 16635                           
 16636                           ; BSR set to: 0
 16637                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 537:         --w;
 16638  0040B2  076C               	decf	otoa@w& (0+255),f,b
 16639  0040B4  A0D8               	btfss	status,0,c
 16640  0040B6  076D               	decf	(otoa@w+1)& (0+255),f,b
 16641  0040B8                     l9429:
 16642                           
 16643                           ; BSR set to: 0
 16644                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 541:     return pad(fp, &dbuf
      +                          [i], w);
 16645  0040B8  C030  F025         	movff	otoa@fp,pad@fp
 16646  0040BC  C031  F026         	movff	otoa@fp+1,pad@fp+1
 16647  0040C0  0E60               	movlw	low _dbuf
 16648  0040C2  2576               	addwf	otoa@i& (0+255),w,b
 16649  0040C4  6E27               	movwf	pad@buf,c
 16650  0040C6  0E01               	movlw	high _dbuf
 16651  0040C8  2177               	addwfc	(otoa@i+1)& (0+255),w,b
 16652  0040CA  6E28               	movwf	pad@buf+1,c
 16653  0040CC  C06C  F029         	movff	otoa@w,pad@p
 16654  0040D0  C06D  F02A         	movff	otoa@w+1,pad@p+1
 16655  0040D4  EC8F  F027         	call	_pad	;wreg free
 16656  0040D8  C025  F030         	movff	?_pad,?_otoa
 16657  0040DC  C026  F031         	movff	?_pad+1,?_otoa+1
 16658  0040E0  0012               	return		;funcret
 16659  0040E2                     __end_of_otoa:
 16660                           	opt callstack 0
 16661                           
 16662 ;; *************** function _dtoa *****************
 16663 ;; Defined at:
 16664 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 16665 ;; Parameters:    Size  Location     Type
 16666 ;;  fp              2   47[COMRAM] PTR struct _IO_FILE
 16667 ;;		 -> sprintf@f(6), NULL(0), 
 16668 ;;  d               8   49[COMRAM] long long 
 16669 ;; Auto vars:     Size  Location     Type
 16670 ;;  n               8   16[BANK0 ] long long 
 16671 ;;  i               2   24[BANK0 ] int 
 16672 ;;  s               2   14[BANK0 ] int 
 16673 ;;  w               2   12[BANK0 ] int 
 16674 ;;  p               2   10[BANK0 ] int 
 16675 ;; Return value:  Size  Location     Type
 16676 ;;                  2   47[COMRAM] int 
 16677 ;; Registers used:
 16678 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16679 ;; Tracked objects:
 16680 ;;		On entry : 0/0
 16681 ;;		On exit  : 0/0
 16682 ;;		Unchanged: 0/0
 16683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16684 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16685 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16686 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16687 ;;      Totals:        10      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16688 ;;Total ram usage:       36 bytes
 16689 ;; Hardware stack levels used:    1
 16690 ;; Hardware stack levels required when called:   13
 16691 ;; This function calls:
 16692 ;;		___aodiv
 16693 ;;		___aomod
 16694 ;;		_abs
 16695 ;;		_pad
 16696 ;; This function is called by:
 16697 ;;		_vfpfcnvrt
 16698 ;; This function uses a non-reentrant model
 16699 ;;
 16700                           
 16701                           	psect	text68
 16702  0037A4                     __ptext68:
 16703                           	opt callstack 0
 16704  0037A4                     _dtoa:
 16705                           	opt callstack 13
 16706                           
 16707                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
 16708                           
 16709                           ;incstack = 0
 16710  0037A4  C032  F070         	movff	dtoa@d,dtoa@n
 16711  0037A8  C033  F071         	movff	dtoa@d+1,dtoa@n+1
 16712  0037AC  C034  F072         	movff	dtoa@d+2,dtoa@n+2
 16713  0037B0  C035  F073         	movff	dtoa@d+3,dtoa@n+3
 16714  0037B4  C036  F074         	movff	dtoa@d+4,dtoa@n+4
 16715  0037B8  C037  F075         	movff	dtoa@d+5,dtoa@n+5
 16716  0037BC  C038  F076         	movff	dtoa@d+6,dtoa@n+6
 16717  0037C0  C039  F077         	movff	dtoa@d+7,dtoa@n+7
 16718                           
 16719                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 16720  0037C4  0100               	movlb	0	; () banked
 16721  0037C6  AF77               	btfss	(dtoa@n+7)& (0+255),7,b
 16722  0037C8  D002               	goto	u11260
 16723  0037CA  0E01               	movlw	1
 16724  0037CC  D001               	goto	u11270
 16725  0037CE                     u11260:
 16726  0037CE  0E00               	movlw	0
 16727  0037D0                     u11270:
 16728  0037D0  6F6E               	movwf	dtoa@s& (0+255),b
 16729  0037D2  6B6F               	clrf	(dtoa@s+1)& (0+255),b
 16730                           
 16731                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 16732  0037D4  516E               	movf	dtoa@s& (0+255),w,b
 16733  0037D6  116F               	iorwf	(dtoa@s+1)& (0+255),w,b
 16734  0037D8  B4D8               	btfsc	status,2,c
 16735  0037DA  D010               	goto	l9329
 16736                           
 16737                           ; BSR set to: 0
 16738                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 16739  0037DC  1F77               	comf	(dtoa@n+7)& (0+255),f,b
 16740  0037DE  1F76               	comf	(dtoa@n+6)& (0+255),f,b
 16741  0037E0  1F75               	comf	(dtoa@n+5)& (0+255),f,b
 16742  0037E2  1F74               	comf	(dtoa@n+4)& (0+255),f,b
 16743  0037E4  1F73               	comf	(dtoa@n+3)& (0+255),f,b
 16744  0037E6  1F72               	comf	(dtoa@n+2)& (0+255),f,b
 16745  0037E8  1F71               	comf	(dtoa@n+1)& (0+255),f,b
 16746  0037EA  6D70               	negf	dtoa@n& (0+255),b
 16747  0037EC  0E00               	movlw	0
 16748  0037EE  2371               	addwfc	(dtoa@n+1)& (0+255),f,b
 16749  0037F0  2372               	addwfc	(dtoa@n+2)& (0+255),f,b
 16750  0037F2  2373               	addwfc	(dtoa@n+3)& (0+255),f,b
 16751  0037F4  2374               	addwfc	(dtoa@n+4)& (0+255),f,b
 16752  0037F6  2375               	addwfc	(dtoa@n+5)& (0+255),f,b
 16753  0037F8  2376               	addwfc	(dtoa@n+6)& (0+255),f,b
 16754  0037FA  2377               	addwfc	(dtoa@n+7)& (0+255),f,b
 16755  0037FC                     l9329:
 16756                           
 16757                           ; BSR set to: 0
 16758                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 16759  0037FC  AE3E               	btfss	_prec+1,7,c
 16760                           
 16761                           ; BSR set to: 0
 16762                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 16763  0037FE  923F               	bcf	_flags,1,c
 16764                           
 16765                           ; BSR set to: 0
 16766                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 16767  003800  BE3E               	btfsc	_prec+1,7,c
 16768  003802  D005               	goto	u11300
 16769  003804  503E               	movf	_prec+1,w,c
 16770  003806  E108               	bnz	l1050
 16771  003808  043D               	decf	_prec,w,c
 16772  00380A  B0D8               	btfsc	status,0,c
 16773  00380C  D005               	goto	l1050
 16774  00380E                     u11300:
 16775                           
 16776                           ; BSR set to: 0
 16777  00380E  0E00               	movlw	0
 16778  003810  6F6B               	movwf	(dtoa@p+1)& (0+255),b
 16779  003812  0E01               	movlw	1
 16780  003814  6F6A               	movwf	dtoa@p& (0+255),b
 16781  003816  D004               	goto	l1052
 16782  003818                     l1050:
 16783                           
 16784                           ; BSR set to: 0
 16785  003818  C03D  F06A         	movff	_prec,dtoa@p
 16786  00381C  C03E  F06B         	movff	_prec+1,dtoa@p+1
 16787  003820                     l1052:
 16788                           
 16789                           ; BSR set to: 0
 16790                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
 16791  003820  C03B  F06C         	movff	_width,dtoa@w
 16792  003824  C03C  F06D         	movff	_width+1,dtoa@w+1
 16793                           
 16794                           ; BSR set to: 0
 16795                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 16796  003828  516E               	movf	dtoa@s& (0+255),w,b
 16797  00382A  116F               	iorwf	(dtoa@s+1)& (0+255),w,b
 16798  00382C  A4D8               	btfss	status,2,c
 16799  00382E  D002               	goto	u11320
 16800                           
 16801                           ; BSR set to: 0
 16802  003830  A43F               	btfss	_flags,2,c
 16803  003832  D003               	goto	l9343
 16804  003834                     u11320:
 16805                           
 16806                           ; BSR set to: 0
 16807                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
 16808  003834  076C               	decf	dtoa@w& (0+255),f,b
 16809  003836  A0D8               	btfss	status,0,c
 16810  003838  076D               	decf	(dtoa@w+1)& (0+255),f,b
 16811  00383A                     l9343:
 16812                           
 16813                           ; BSR set to: 0
 16814                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 16815  00383A  0E00               	movlw	0
 16816  00383C  6F79               	movwf	(dtoa@i+1)& (0+255),b
 16817  00383E  0E1F               	movlw	31
 16818  003840  6F78               	movwf	dtoa@i& (0+255),b
 16819                           
 16820                           ; BSR set to: 0
 16821                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 16822  003842  0E00               	movlw	0
 16823  003844  0101               	movlb	1	; () banked
 16824  003846  6F7F               	movwf	(_dbuf+31)& (0+255),b
 16825                           
 16826                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16827  003848  D07D               	goto	l9357
 16828  00384A                     l9347:
 16829                           
 16830                           ; BSR set to: 0
 16831                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
 16832  00384A  0778               	decf	dtoa@i& (0+255),f,b
 16833  00384C  A0D8               	btfss	status,0,c
 16834  00384E  0779               	decf	(dtoa@i+1)& (0+255),f,b
 16835                           
 16836                           ; BSR set to: 0
 16837                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 16838  003850  0E60               	movlw	low _dbuf
 16839  003852  2578               	addwf	dtoa@i& (0+255),w,b
 16840  003854  6ED9               	movwf	fsr2l,c
 16841  003856  0E01               	movlw	high _dbuf
 16842  003858  2179               	addwfc	(dtoa@i+1)& (0+255),w,b
 16843  00385A  6EDA               	movwf	fsr2h,c
 16844  00385C  C070  F013         	movff	dtoa@n,___aomod@dividend
 16845  003860  C071  F014         	movff	dtoa@n+1,___aomod@dividend+1
 16846  003864  C072  F015         	movff	dtoa@n+2,___aomod@dividend+2
 16847  003868  C073  F016         	movff	dtoa@n+3,___aomod@dividend+3
 16848  00386C  C074  F017         	movff	dtoa@n+4,___aomod@dividend+4
 16849  003870  C075  F018         	movff	dtoa@n+5,___aomod@dividend+5
 16850  003874  C076  F019         	movff	dtoa@n+6,___aomod@dividend+6
 16851  003878  C077  F01A         	movff	dtoa@n+7,___aomod@dividend+7
 16852  00387C  0E0A               	movlw	10
 16853  00387E  6E1B               	movwf	___aomod@divisor,c
 16854  003880  0E00               	movlw	0
 16855  003882  6E1C               	movwf	___aomod@divisor+1,c
 16856  003884  0E00               	movlw	0
 16857  003886  6E1D               	movwf	___aomod@divisor+2,c
 16858  003888  0E00               	movlw	0
 16859  00388A  6E1E               	movwf	___aomod@divisor+3,c
 16860  00388C  0E00               	movlw	0
 16861  00388E  6E1F               	movwf	___aomod@divisor+4,c
 16862  003890  0E00               	movlw	0
 16863  003892  6E20               	movwf	___aomod@divisor+5,c
 16864  003894  0E00               	movlw	0
 16865  003896  6E21               	movwf	___aomod@divisor+6,c
 16866  003898  0E00               	movlw	0
 16867  00389A  6E22               	movwf	___aomod@divisor+7,c
 16868  00389C  ECF4  F022         	call	___aomod	;wreg free
 16869  0038A0  C013  F060         	movff	?___aomod,??_dtoa
 16870  0038A4  C014  F061         	movff	?___aomod+1,??_dtoa+1
 16871  0038A8  C015  F062         	movff	?___aomod+2,??_dtoa+2
 16872  0038AC  C016  F063         	movff	?___aomod+3,??_dtoa+3
 16873  0038B0  C017  F064         	movff	?___aomod+4,??_dtoa+4
 16874  0038B4  C018  F065         	movff	?___aomod+5,??_dtoa+5
 16875  0038B8  C019  F066         	movff	?___aomod+6,??_dtoa+6
 16876  0038BC  C01A  F067         	movff	?___aomod+7,??_dtoa+7
 16877  0038C0  C060  F025         	movff	??_dtoa,abs@a
 16878  0038C4  C062  F026         	movff	??_dtoa+2,abs@a+1
 16879  0038C8  ECBE  F02C         	call	_abs	;wreg free
 16880  0038CC  5025               	movf	?_abs,w,c
 16881  0038CE  0F30               	addlw	48
 16882  0038D0  6EDF               	movwf	indf2,c
 16883                           
 16884                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
 16885  0038D2  0100               	movlb	0	; () banked
 16886  0038D4  076A               	decf	dtoa@p& (0+255),f,b
 16887  0038D6  A0D8               	btfss	status,0,c
 16888  0038D8  076B               	decf	(dtoa@p+1)& (0+255),f,b
 16889                           
 16890                           ; BSR set to: 0
 16891                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
 16892  0038DA  076C               	decf	dtoa@w& (0+255),f,b
 16893  0038DC  A0D8               	btfss	status,0,c
 16894  0038DE  076D               	decf	(dtoa@w+1)& (0+255),f,b
 16895                           
 16896                           ; BSR set to: 0
 16897                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 16898  0038E0  C070  F013         	movff	dtoa@n,___aodiv@dividend
 16899  0038E4  C071  F014         	movff	dtoa@n+1,___aodiv@dividend+1
 16900  0038E8  C072  F015         	movff	dtoa@n+2,___aodiv@dividend+2
 16901  0038EC  C073  F016         	movff	dtoa@n+3,___aodiv@dividend+3
 16902  0038F0  C074  F017         	movff	dtoa@n+4,___aodiv@dividend+4
 16903  0038F4  C075  F018         	movff	dtoa@n+5,___aodiv@dividend+5
 16904  0038F8  C076  F019         	movff	dtoa@n+6,___aodiv@dividend+6
 16905  0038FC  C077  F01A         	movff	dtoa@n+7,___aodiv@dividend+7
 16906  003900  0E0A               	movlw	10
 16907  003902  6E1B               	movwf	___aodiv@divisor,c
 16908  003904  0E00               	movlw	0
 16909  003906  6E1C               	movwf	___aodiv@divisor+1,c
 16910  003908  0E00               	movlw	0
 16911  00390A  6E1D               	movwf	___aodiv@divisor+2,c
 16912  00390C  0E00               	movlw	0
 16913  00390E  6E1E               	movwf	___aodiv@divisor+3,c
 16914  003910  0E00               	movlw	0
 16915  003912  6E1F               	movwf	___aodiv@divisor+4,c
 16916  003914  0E00               	movlw	0
 16917  003916  6E20               	movwf	___aodiv@divisor+5,c
 16918  003918  0E00               	movlw	0
 16919  00391A  6E21               	movwf	___aodiv@divisor+6,c
 16920  00391C  0E00               	movlw	0
 16921  00391E  6E22               	movwf	___aodiv@divisor+7,c
 16922  003920  EC71  F020         	call	___aodiv	;wreg free
 16923  003924  C013  F070         	movff	?___aodiv,dtoa@n
 16924  003928  C014  F071         	movff	?___aodiv+1,dtoa@n+1
 16925  00392C  C015  F072         	movff	?___aodiv+2,dtoa@n+2
 16926  003930  C016  F073         	movff	?___aodiv+3,dtoa@n+3
 16927  003934  C017  F074         	movff	?___aodiv+4,dtoa@n+4
 16928  003938  C018  F075         	movff	?___aodiv+5,dtoa@n+5
 16929  00393C  C019  F076         	movff	?___aodiv+6,dtoa@n+6
 16930  003940  C01A  F077         	movff	?___aodiv+7,dtoa@n+7
 16931  003944                     l9357:
 16932                           
 16933                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16934  003944  0100               	movlb	0	; () banked
 16935  003946  BF79               	btfsc	(dtoa@i+1)& (0+255),7,b
 16936  003948  D01F               	goto	u11370
 16937  00394A  5179               	movf	(dtoa@i+1)& (0+255),w,b
 16938  00394C  E103               	bnz	u11330
 16939  00394E  0578               	decf	dtoa@i& (0+255),w,b
 16940  003950  A0D8               	btfss	status,0,c
 16941  003952  D01A               	goto	u11370
 16942  003954                     u11330:
 16943                           
 16944                           ; BSR set to: 0
 16945  003954  5170               	movf	dtoa@n& (0+255),w,b
 16946  003956  1171               	iorwf	(dtoa@n+1)& (0+255),w,b
 16947  003958  1172               	iorwf	(dtoa@n+2)& (0+255),w,b
 16948  00395A  1173               	iorwf	(dtoa@n+3)& (0+255),w,b
 16949  00395C  1174               	iorwf	(dtoa@n+4)& (0+255),w,b
 16950  00395E  1175               	iorwf	(dtoa@n+5)& (0+255),w,b
 16951  003960  1176               	iorwf	(dtoa@n+6)& (0+255),w,b
 16952  003962  1177               	iorwf	(dtoa@n+7)& (0+255),w,b
 16953  003964  A4D8               	btfss	status,2,c
 16954  003966  D771               	goto	l9347
 16955                           
 16956                           ; BSR set to: 0
 16957  003968  BF6B               	btfsc	(dtoa@p+1)& (0+255),7,b
 16958  00396A  D005               	goto	u11350
 16959  00396C  516B               	movf	(dtoa@p+1)& (0+255),w,b
 16960  00396E  E102               	bnz	u11351
 16961  003970  056A               	decf	dtoa@p& (0+255),w,b
 16962  003972  B0D8               	btfsc	status,0,c
 16963  003974                     u11351:
 16964  003974  D76A               	goto	l9347
 16965  003976                     u11350:
 16966                           
 16967                           ; BSR set to: 0
 16968  003976  BF6D               	btfsc	(dtoa@w+1)& (0+255),7,b
 16969  003978  D007               	goto	u11370
 16970  00397A  516D               	movf	(dtoa@w+1)& (0+255),w,b
 16971  00397C  E103               	bnz	u11360
 16972  00397E  056C               	decf	dtoa@w& (0+255),w,b
 16973  003980  A0D8               	btfss	status,0,c
 16974  003982  D002               	goto	u11370
 16975  003984                     u11360:
 16976                           
 16977                           ; BSR set to: 0
 16978  003984  B23F               	btfsc	_flags,1,c
 16979  003986  D761               	goto	l9347
 16980  003988                     u11370:
 16981                           
 16982                           ; BSR set to: 0
 16983                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 16984  003988  516E               	movf	dtoa@s& (0+255),w,b
 16985  00398A  116F               	iorwf	(dtoa@s+1)& (0+255),w,b
 16986  00398C  A4D8               	btfss	status,2,c
 16987  00398E  D002               	goto	u11390
 16988                           
 16989                           ; BSR set to: 0
 16990  003990  A43F               	btfss	_flags,2,c
 16991  003992  D017               	goto	l9381
 16992  003994                     u11390:
 16993                           
 16994                           ; BSR set to: 0
 16995                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
 16996  003994  0778               	decf	dtoa@i& (0+255),f,b
 16997  003996  A0D8               	btfss	status,0,c
 16998  003998  0779               	decf	(dtoa@i+1)& (0+255),f,b
 16999                           
 17000                           ; BSR set to: 0
 17001                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 17002  00399A  516E               	movf	dtoa@s& (0+255),w,b
 17003  00399C  116F               	iorwf	(dtoa@s+1)& (0+255),w,b
 17004  00399E  A4D8               	btfss	status,2,c
 17005  0039A0  D004               	goto	l9377
 17006                           
 17007                           ; BSR set to: 0
 17008  0039A2  0E00               	movlw	0
 17009  0039A4  6F69               	movwf	(_dtoa$2922+1)& (0+255),b
 17010  0039A6  0E2B               	movlw	43
 17011  0039A8  D003               	goto	L25
 17012  0039AA                     l9377:
 17013                           
 17014                           ; BSR set to: 0
 17015  0039AA  0E00               	movlw	0
 17016  0039AC  6F69               	movwf	(_dtoa$2922+1)& (0+255),b
 17017  0039AE  0E2D               	movlw	45
 17018  0039B0                     L25:
 17019  0039B0  6F68               	movwf	_dtoa$2922& (0+255),b
 17020                           
 17021                           ; BSR set to: 0
 17022  0039B2  0E60               	movlw	low _dbuf
 17023  0039B4  2578               	addwf	dtoa@i& (0+255),w,b
 17024  0039B6  6ED9               	movwf	fsr2l,c
 17025  0039B8  0E01               	movlw	high _dbuf
 17026  0039BA  2179               	addwfc	(dtoa@i+1)& (0+255),w,b
 17027  0039BC  6EDA               	movwf	fsr2h,c
 17028  0039BE  C068  FFDF         	movff	_dtoa$2922,indf2
 17029  0039C2                     l9381:
 17030                           
 17031                           ; BSR set to: 0
 17032                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 17033  0039C2  C030  F025         	movff	dtoa@fp,pad@fp
 17034  0039C6  C031  F026         	movff	dtoa@fp+1,pad@fp+1
 17035  0039CA  0E60               	movlw	low _dbuf
 17036  0039CC  2578               	addwf	dtoa@i& (0+255),w,b
 17037  0039CE  6E27               	movwf	pad@buf,c
 17038  0039D0  0E01               	movlw	high _dbuf
 17039  0039D2  2179               	addwfc	(dtoa@i+1)& (0+255),w,b
 17040  0039D4  6E28               	movwf	pad@buf+1,c
 17041  0039D6  C06C  F029         	movff	dtoa@w,pad@p
 17042  0039DA  C06D  F02A         	movff	dtoa@w+1,pad@p+1
 17043  0039DE  EC8F  F027         	call	_pad	;wreg free
 17044  0039E2  C025  F030         	movff	?_pad,?_dtoa
 17045  0039E6  C026  F031         	movff	?_pad+1,?_dtoa+1
 17046  0039EA  0012               	return		;funcret
 17047  0039EC                     __end_of_dtoa:
 17048                           	opt callstack 0
 17049                           
 17050 ;; *************** function _abs *****************
 17051 ;; Defined at:
 17052 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
 17053 ;; Parameters:    Size  Location     Type
 17054 ;;  a               2   36[COMRAM] int 
 17055 ;; Auto vars:     Size  Location     Type
 17056 ;;		None
 17057 ;; Return value:  Size  Location     Type
 17058 ;;                  2   36[COMRAM] int 
 17059 ;; Registers used:
 17060 ;;		wreg, status,2, status,0
 17061 ;; Tracked objects:
 17062 ;;		On entry : 0/0
 17063 ;;		On exit  : 0/0
 17064 ;;		Unchanged: 0/0
 17065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17066 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17068 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17069 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17070 ;;Total ram usage:        4 bytes
 17071 ;; Hardware stack levels used:    1
 17072 ;; Hardware stack levels required when called:    8
 17073 ;; This function calls:
 17074 ;;		Nothing
 17075 ;; This function is called by:
 17076 ;;		_dtoa
 17077 ;; This function uses a non-reentrant model
 17078 ;;
 17079                           
 17080                           	psect	text69
 17081  00597C                     __ptext69:
 17082                           	opt callstack 0
 17083  00597C                     _abs:
 17084                           	opt callstack 17
 17085                           
 17086                           ;incstack = 0
 17087  00597C  BE26               	btfsc	abs@a+1,7,c
 17088  00597E  D005               	goto	u10930
 17089  005980  5026               	movf	abs@a+1,w,c
 17090  005982  E110               	bnz	l1914
 17091  005984  0425               	decf	abs@a,w,c
 17092  005986  B0D8               	btfsc	status,0,c
 17093  005988  D00D               	goto	l1914
 17094  00598A                     u10930:
 17095  00598A  C025  F027         	movff	abs@a,??_abs
 17096  00598E  C026  F028         	movff	abs@a+1,??_abs+1
 17097  005992  1E27               	comf	??_abs,f,c
 17098  005994  1E28               	comf	??_abs+1,f,c
 17099  005996  4A27               	infsnz	??_abs,f,c
 17100  005998  2A28               	incf	??_abs+1,f,c
 17101  00599A  C027  F025         	movff	??_abs,?_abs
 17102  00599E  C028  F026         	movff	??_abs+1,?_abs+1
 17103  0059A2  0012               	return	
 17104  0059A4                     l1914:
 17105  0059A4  C025  F025         	movff	abs@a,?_abs
 17106  0059A8  C026  F026         	movff	abs@a+1,?_abs+1
 17107  0059AC  0012               	return		;funcret
 17108  0059AE                     __end_of_abs:
 17109                           	opt callstack 0
 17110                           
 17111 ;; *************** function ___aomod *****************
 17112 ;; Defined at:
 17113 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
 17114 ;; Parameters:    Size  Location     Type
 17115 ;;  dividend        8   18[COMRAM] long long 
 17116 ;;  divisor         8   26[COMRAM] long long 
 17117 ;; Auto vars:     Size  Location     Type
 17118 ;;  sign            1   35[COMRAM] unsigned char 
 17119 ;;  counter         1   34[COMRAM] unsigned char 
 17120 ;; Return value:  Size  Location     Type
 17121 ;;                  8   18[COMRAM] long long 
 17122 ;; Registers used:
 17123 ;;		wreg, status,2, status,0
 17124 ;; Tracked objects:
 17125 ;;		On entry : 0/0
 17126 ;;		On exit  : 0/0
 17127 ;;		Unchanged: 0/0
 17128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17129 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17130 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17132 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17133 ;;Total ram usage:       18 bytes
 17134 ;; Hardware stack levels used:    1
 17135 ;; Hardware stack levels required when called:    8
 17136 ;; This function calls:
 17137 ;;		Nothing
 17138 ;; This function is called by:
 17139 ;;		_dtoa
 17140 ;; This function uses a non-reentrant model
 17141 ;;
 17142                           
 17143                           	psect	text70
 17144  0045E8                     __ptext70:
 17145                           	opt callstack 0
 17146  0045E8                     ___aomod:
 17147                           	opt callstack 17
 17148                           
 17149                           ;incstack = 0
 17150  0045E8  0E00               	movlw	0
 17151  0045EA  6E24               	movwf	___aomod@sign,c
 17152  0045EC  AE1A               	btfss	___aomod@dividend+7,7,c
 17153  0045EE  D012               	goto	l9231
 17154  0045F0  1E1A               	comf	___aomod@dividend+7,f,c
 17155  0045F2  1E19               	comf	___aomod@dividend+6,f,c
 17156  0045F4  1E18               	comf	___aomod@dividend+5,f,c
 17157  0045F6  1E17               	comf	___aomod@dividend+4,f,c
 17158  0045F8  1E16               	comf	___aomod@dividend+3,f,c
 17159  0045FA  1E15               	comf	___aomod@dividend+2,f,c
 17160  0045FC  1E14               	comf	___aomod@dividend+1,f,c
 17161  0045FE  6C13               	negf	___aomod@dividend,c
 17162  004600  0E00               	movlw	0
 17163  004602  2214               	addwfc	___aomod@dividend+1,f,c
 17164  004604  2215               	addwfc	___aomod@dividend+2,f,c
 17165  004606  2216               	addwfc	___aomod@dividend+3,f,c
 17166  004608  2217               	addwfc	___aomod@dividend+4,f,c
 17167  00460A  2218               	addwfc	___aomod@dividend+5,f,c
 17168  00460C  2219               	addwfc	___aomod@dividend+6,f,c
 17169  00460E  221A               	addwfc	___aomod@dividend+7,f,c
 17170  004610  0E01               	movlw	1
 17171  004612  6E24               	movwf	___aomod@sign,c
 17172  004614                     l9231:
 17173  004614  AE22               	btfss	___aomod@divisor+7,7,c
 17174  004616  D010               	goto	l9235
 17175  004618  1E22               	comf	___aomod@divisor+7,f,c
 17176  00461A  1E21               	comf	___aomod@divisor+6,f,c
 17177  00461C  1E20               	comf	___aomod@divisor+5,f,c
 17178  00461E  1E1F               	comf	___aomod@divisor+4,f,c
 17179  004620  1E1E               	comf	___aomod@divisor+3,f,c
 17180  004622  1E1D               	comf	___aomod@divisor+2,f,c
 17181  004624  1E1C               	comf	___aomod@divisor+1,f,c
 17182  004626  6C1B               	negf	___aomod@divisor,c
 17183  004628  0E00               	movlw	0
 17184  00462A  221C               	addwfc	___aomod@divisor+1,f,c
 17185  00462C  221D               	addwfc	___aomod@divisor+2,f,c
 17186  00462E  221E               	addwfc	___aomod@divisor+3,f,c
 17187  004630  221F               	addwfc	___aomod@divisor+4,f,c
 17188  004632  2220               	addwfc	___aomod@divisor+5,f,c
 17189  004634  2221               	addwfc	___aomod@divisor+6,f,c
 17190  004636  2222               	addwfc	___aomod@divisor+7,f,c
 17191  004638                     l9235:
 17192  004638  501B               	movf	___aomod@divisor,w,c
 17193  00463A  101C               	iorwf	___aomod@divisor+1,w,c
 17194  00463C  101D               	iorwf	___aomod@divisor+2,w,c
 17195  00463E  101E               	iorwf	___aomod@divisor+3,w,c
 17196  004640  101F               	iorwf	___aomod@divisor+4,w,c
 17197  004642  1020               	iorwf	___aomod@divisor+5,w,c
 17198  004644  1021               	iorwf	___aomod@divisor+6,w,c
 17199  004646  1022               	iorwf	___aomod@divisor+7,w,c
 17200  004648  B4D8               	btfsc	status,2,c
 17201  00464A  D03C               	goto	l9251
 17202  00464C  0E01               	movlw	1
 17203  00464E  6E23               	movwf	___aomod@counter,c
 17204  004650  D00A               	goto	l9241
 17205  004652                     l9239:
 17206  004652  90D8               	bcf	status,0,c
 17207  004654  361B               	rlcf	___aomod@divisor,f,c
 17208  004656  361C               	rlcf	___aomod@divisor+1,f,c
 17209  004658  361D               	rlcf	___aomod@divisor+2,f,c
 17210  00465A  361E               	rlcf	___aomod@divisor+3,f,c
 17211  00465C  361F               	rlcf	___aomod@divisor+4,f,c
 17212  00465E  3620               	rlcf	___aomod@divisor+5,f,c
 17213  004660  3621               	rlcf	___aomod@divisor+6,f,c
 17214  004662  3622               	rlcf	___aomod@divisor+7,f,c
 17215  004664  2A23               	incf	___aomod@counter,f,c
 17216  004666                     l9241:
 17217  004666  AE22               	btfss	___aomod@divisor+7,7,c
 17218  004668  D7F4               	goto	l9239
 17219  00466A                     u11130:
 17220  00466A  501B               	movf	___aomod@divisor,w,c
 17221  00466C  5C13               	subwf	___aomod@dividend,w,c
 17222  00466E  501C               	movf	___aomod@divisor+1,w,c
 17223  004670  5814               	subwfb	___aomod@dividend+1,w,c
 17224  004672  501D               	movf	___aomod@divisor+2,w,c
 17225  004674  5815               	subwfb	___aomod@dividend+2,w,c
 17226  004676  501E               	movf	___aomod@divisor+3,w,c
 17227  004678  5816               	subwfb	___aomod@dividend+3,w,c
 17228  00467A  501F               	movf	___aomod@divisor+4,w,c
 17229  00467C  5817               	subwfb	___aomod@dividend+4,w,c
 17230  00467E  5020               	movf	___aomod@divisor+5,w,c
 17231  004680  5818               	subwfb	___aomod@dividend+5,w,c
 17232  004682  5021               	movf	___aomod@divisor+6,w,c
 17233  004684  5819               	subwfb	___aomod@dividend+6,w,c
 17234  004686  5022               	movf	___aomod@divisor+7,w,c
 17235  004688  581A               	subwfb	___aomod@dividend+7,w,c
 17236  00468A  A0D8               	btfss	status,0,c
 17237  00468C  D010               	goto	l9247
 17238  00468E  501B               	movf	___aomod@divisor,w,c
 17239  004690  5E13               	subwf	___aomod@dividend,f,c
 17240  004692  501C               	movf	___aomod@divisor+1,w,c
 17241  004694  5A14               	subwfb	___aomod@dividend+1,f,c
 17242  004696  501D               	movf	___aomod@divisor+2,w,c
 17243  004698  5A15               	subwfb	___aomod@dividend+2,f,c
 17244  00469A  501E               	movf	___aomod@divisor+3,w,c
 17245  00469C  5A16               	subwfb	___aomod@dividend+3,f,c
 17246  00469E  501F               	movf	___aomod@divisor+4,w,c
 17247  0046A0  5A17               	subwfb	___aomod@dividend+4,f,c
 17248  0046A2  5020               	movf	___aomod@divisor+5,w,c
 17249  0046A4  5A18               	subwfb	___aomod@dividend+5,f,c
 17250  0046A6  5021               	movf	___aomod@divisor+6,w,c
 17251  0046A8  5A19               	subwfb	___aomod@dividend+6,f,c
 17252  0046AA  5022               	movf	___aomod@divisor+7,w,c
 17253  0046AC  5A1A               	subwfb	___aomod@dividend+7,f,c
 17254  0046AE                     l9247:
 17255  0046AE  90D8               	bcf	status,0,c
 17256  0046B0  3222               	rrcf	___aomod@divisor+7,f,c
 17257  0046B2  3221               	rrcf	___aomod@divisor+6,f,c
 17258  0046B4  3220               	rrcf	___aomod@divisor+5,f,c
 17259  0046B6  321F               	rrcf	___aomod@divisor+4,f,c
 17260  0046B8  321E               	rrcf	___aomod@divisor+3,f,c
 17261  0046BA  321D               	rrcf	___aomod@divisor+2,f,c
 17262  0046BC  321C               	rrcf	___aomod@divisor+1,f,c
 17263  0046BE  321B               	rrcf	___aomod@divisor,f,c
 17264  0046C0  2E23               	decfsz	___aomod@counter,f,c
 17265  0046C2  D7D3               	goto	u11130
 17266  0046C4                     l9251:
 17267  0046C4  5024               	movf	___aomod@sign,w,c
 17268  0046C6  B4D8               	btfsc	status,2,c
 17269  0046C8  D010               	goto	l9255
 17270  0046CA  1E1A               	comf	___aomod@dividend+7,f,c
 17271  0046CC  1E19               	comf	___aomod@dividend+6,f,c
 17272  0046CE  1E18               	comf	___aomod@dividend+5,f,c
 17273  0046D0  1E17               	comf	___aomod@dividend+4,f,c
 17274  0046D2  1E16               	comf	___aomod@dividend+3,f,c
 17275  0046D4  1E15               	comf	___aomod@dividend+2,f,c
 17276  0046D6  1E14               	comf	___aomod@dividend+1,f,c
 17277  0046D8  6C13               	negf	___aomod@dividend,c
 17278  0046DA  0E00               	movlw	0
 17279  0046DC  2214               	addwfc	___aomod@dividend+1,f,c
 17280  0046DE  2215               	addwfc	___aomod@dividend+2,f,c
 17281  0046E0  2216               	addwfc	___aomod@dividend+3,f,c
 17282  0046E2  2217               	addwfc	___aomod@dividend+4,f,c
 17283  0046E4  2218               	addwfc	___aomod@dividend+5,f,c
 17284  0046E6  2219               	addwfc	___aomod@dividend+6,f,c
 17285  0046E8  221A               	addwfc	___aomod@dividend+7,f,c
 17286  0046EA                     l9255:
 17287  0046EA  C013  F013         	movff	___aomod@dividend,?___aomod
 17288  0046EE  C014  F014         	movff	___aomod@dividend+1,?___aomod+1
 17289  0046F2  C015  F015         	movff	___aomod@dividend+2,?___aomod+2
 17290  0046F6  C016  F016         	movff	___aomod@dividend+3,?___aomod+3
 17291  0046FA  C017  F017         	movff	___aomod@dividend+4,?___aomod+4
 17292  0046FE  C018  F018         	movff	___aomod@dividend+5,?___aomod+5
 17293  004702  C019  F019         	movff	___aomod@dividend+6,?___aomod+6
 17294  004706  C01A  F01A         	movff	___aomod@dividend+7,?___aomod+7
 17295  00470A  0012               	return		;funcret
 17296  00470C                     __end_of___aomod:
 17297                           	opt callstack 0
 17298                           
 17299 ;; *************** function ___aodiv *****************
 17300 ;; Defined at:
 17301 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
 17302 ;; Parameters:    Size  Location     Type
 17303 ;;  dividend        8   18[COMRAM] long long 
 17304 ;;  divisor         8   26[COMRAM] long long 
 17305 ;; Auto vars:     Size  Location     Type
 17306 ;;  quotient        8   36[COMRAM] long long 
 17307 ;;  sign            1   35[COMRAM] unsigned char 
 17308 ;;  counter         1   34[COMRAM] unsigned char 
 17309 ;; Return value:  Size  Location     Type
 17310 ;;                  8   18[COMRAM] long long 
 17311 ;; Registers used:
 17312 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17313 ;; Tracked objects:
 17314 ;;		On entry : 0/0
 17315 ;;		On exit  : 0/0
 17316 ;;		Unchanged: 0/0
 17317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17318 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17319 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17321 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17322 ;;Total ram usage:       26 bytes
 17323 ;; Hardware stack levels used:    1
 17324 ;; Hardware stack levels required when called:    8
 17325 ;; This function calls:
 17326 ;;		Nothing
 17327 ;; This function is called by:
 17328 ;;		_dtoa
 17329 ;; This function uses a non-reentrant model
 17330 ;;
 17331                           
 17332                           	psect	text71
 17333  0040E2                     __ptext71:
 17334                           	opt callstack 0
 17335  0040E2                     ___aodiv:
 17336                           	opt callstack 17
 17337                           
 17338                           ;incstack = 0
 17339  0040E2  0E00               	movlw	0
 17340  0040E4  6E24               	movwf	___aodiv@sign,c
 17341  0040E6  AE22               	btfss	___aodiv@divisor+7,7,c
 17342  0040E8  D012               	goto	l9187
 17343  0040EA  1E22               	comf	___aodiv@divisor+7,f,c
 17344  0040EC  1E21               	comf	___aodiv@divisor+6,f,c
 17345  0040EE  1E20               	comf	___aodiv@divisor+5,f,c
 17346  0040F0  1E1F               	comf	___aodiv@divisor+4,f,c
 17347  0040F2  1E1E               	comf	___aodiv@divisor+3,f,c
 17348  0040F4  1E1D               	comf	___aodiv@divisor+2,f,c
 17349  0040F6  1E1C               	comf	___aodiv@divisor+1,f,c
 17350  0040F8  6C1B               	negf	___aodiv@divisor,c
 17351  0040FA  0E00               	movlw	0
 17352  0040FC  221C               	addwfc	___aodiv@divisor+1,f,c
 17353  0040FE  221D               	addwfc	___aodiv@divisor+2,f,c
 17354  004100  221E               	addwfc	___aodiv@divisor+3,f,c
 17355  004102  221F               	addwfc	___aodiv@divisor+4,f,c
 17356  004104  2220               	addwfc	___aodiv@divisor+5,f,c
 17357  004106  2221               	addwfc	___aodiv@divisor+6,f,c
 17358  004108  2222               	addwfc	___aodiv@divisor+7,f,c
 17359  00410A  0E01               	movlw	1
 17360  00410C  6E24               	movwf	___aodiv@sign,c
 17361  00410E                     l9187:
 17362  00410E  AE1A               	btfss	___aodiv@dividend+7,7,c
 17363  004110  D012               	goto	l9193
 17364  004112  1E1A               	comf	___aodiv@dividend+7,f,c
 17365  004114  1E19               	comf	___aodiv@dividend+6,f,c
 17366  004116  1E18               	comf	___aodiv@dividend+5,f,c
 17367  004118  1E17               	comf	___aodiv@dividend+4,f,c
 17368  00411A  1E16               	comf	___aodiv@dividend+3,f,c
 17369  00411C  1E15               	comf	___aodiv@dividend+2,f,c
 17370  00411E  1E14               	comf	___aodiv@dividend+1,f,c
 17371  004120  6C13               	negf	___aodiv@dividend,c
 17372  004122  0E00               	movlw	0
 17373  004124  2214               	addwfc	___aodiv@dividend+1,f,c
 17374  004126  2215               	addwfc	___aodiv@dividend+2,f,c
 17375  004128  2216               	addwfc	___aodiv@dividend+3,f,c
 17376  00412A  2217               	addwfc	___aodiv@dividend+4,f,c
 17377  00412C  2218               	addwfc	___aodiv@dividend+5,f,c
 17378  00412E  2219               	addwfc	___aodiv@dividend+6,f,c
 17379  004130  221A               	addwfc	___aodiv@dividend+7,f,c
 17380  004132  0E01               	movlw	1
 17381  004134  1A24               	xorwf	___aodiv@sign,f,c
 17382  004136                     l9193:
 17383  004136  EE20  F025         	lfsr	2,___aodiv@quotient
 17384  00413A  0E07               	movlw	7
 17385  00413C                     u11051:
 17386  00413C  6ADE               	clrf	postinc2,c
 17387  00413E  06E8               	decf	wreg,f,c
 17388  004140  E2FD               	bc	u11051
 17389  004142  501B               	movf	___aodiv@divisor,w,c
 17390  004144  101C               	iorwf	___aodiv@divisor+1,w,c
 17391  004146  101D               	iorwf	___aodiv@divisor+2,w,c
 17392  004148  101E               	iorwf	___aodiv@divisor+3,w,c
 17393  00414A  101F               	iorwf	___aodiv@divisor+4,w,c
 17394  00414C  1020               	iorwf	___aodiv@divisor+5,w,c
 17395  00414E  1021               	iorwf	___aodiv@divisor+6,w,c
 17396  004150  1022               	iorwf	___aodiv@divisor+7,w,c
 17397  004152  B4D8               	btfsc	status,2,c
 17398  004154  D046               	goto	l9215
 17399  004156  0E01               	movlw	1
 17400  004158  6E23               	movwf	___aodiv@counter,c
 17401  00415A  D00A               	goto	l9201
 17402  00415C                     l9199:
 17403  00415C  90D8               	bcf	status,0,c
 17404  00415E  361B               	rlcf	___aodiv@divisor,f,c
 17405  004160  361C               	rlcf	___aodiv@divisor+1,f,c
 17406  004162  361D               	rlcf	___aodiv@divisor+2,f,c
 17407  004164  361E               	rlcf	___aodiv@divisor+3,f,c
 17408  004166  361F               	rlcf	___aodiv@divisor+4,f,c
 17409  004168  3620               	rlcf	___aodiv@divisor+5,f,c
 17410  00416A  3621               	rlcf	___aodiv@divisor+6,f,c
 17411  00416C  3622               	rlcf	___aodiv@divisor+7,f,c
 17412  00416E  2A23               	incf	___aodiv@counter,f,c
 17413  004170                     l9201:
 17414  004170  AE22               	btfss	___aodiv@divisor+7,7,c
 17415  004172  D7F4               	goto	l9199
 17416  004174                     u11070:
 17417  004174  90D8               	bcf	status,0,c
 17418  004176  3625               	rlcf	___aodiv@quotient,f,c
 17419  004178  3626               	rlcf	___aodiv@quotient+1,f,c
 17420  00417A  3627               	rlcf	___aodiv@quotient+2,f,c
 17421  00417C  3628               	rlcf	___aodiv@quotient+3,f,c
 17422  00417E  3629               	rlcf	___aodiv@quotient+4,f,c
 17423  004180  362A               	rlcf	___aodiv@quotient+5,f,c
 17424  004182  362B               	rlcf	___aodiv@quotient+6,f,c
 17425  004184  362C               	rlcf	___aodiv@quotient+7,f,c
 17426  004186  501B               	movf	___aodiv@divisor,w,c
 17427  004188  5C13               	subwf	___aodiv@dividend,w,c
 17428  00418A  501C               	movf	___aodiv@divisor+1,w,c
 17429  00418C  5814               	subwfb	___aodiv@dividend+1,w,c
 17430  00418E  501D               	movf	___aodiv@divisor+2,w,c
 17431  004190  5815               	subwfb	___aodiv@dividend+2,w,c
 17432  004192  501E               	movf	___aodiv@divisor+3,w,c
 17433  004194  5816               	subwfb	___aodiv@dividend+3,w,c
 17434  004196  501F               	movf	___aodiv@divisor+4,w,c
 17435  004198  5817               	subwfb	___aodiv@dividend+4,w,c
 17436  00419A  5020               	movf	___aodiv@divisor+5,w,c
 17437  00419C  5818               	subwfb	___aodiv@dividend+5,w,c
 17438  00419E  5021               	movf	___aodiv@divisor+6,w,c
 17439  0041A0  5819               	subwfb	___aodiv@dividend+6,w,c
 17440  0041A2  5022               	movf	___aodiv@divisor+7,w,c
 17441  0041A4  581A               	subwfb	___aodiv@dividend+7,w,c
 17442  0041A6  A0D8               	btfss	status,0,c
 17443  0041A8  D011               	goto	l9211
 17444  0041AA  501B               	movf	___aodiv@divisor,w,c
 17445  0041AC  5E13               	subwf	___aodiv@dividend,f,c
 17446  0041AE  501C               	movf	___aodiv@divisor+1,w,c
 17447  0041B0  5A14               	subwfb	___aodiv@dividend+1,f,c
 17448  0041B2  501D               	movf	___aodiv@divisor+2,w,c
 17449  0041B4  5A15               	subwfb	___aodiv@dividend+2,f,c
 17450  0041B6  501E               	movf	___aodiv@divisor+3,w,c
 17451  0041B8  5A16               	subwfb	___aodiv@dividend+3,f,c
 17452  0041BA  501F               	movf	___aodiv@divisor+4,w,c
 17453  0041BC  5A17               	subwfb	___aodiv@dividend+4,f,c
 17454  0041BE  5020               	movf	___aodiv@divisor+5,w,c
 17455  0041C0  5A18               	subwfb	___aodiv@dividend+5,f,c
 17456  0041C2  5021               	movf	___aodiv@divisor+6,w,c
 17457  0041C4  5A19               	subwfb	___aodiv@dividend+6,f,c
 17458  0041C6  5022               	movf	___aodiv@divisor+7,w,c
 17459  0041C8  5A1A               	subwfb	___aodiv@dividend+7,f,c
 17460  0041CA  8025               	bsf	___aodiv@quotient,0,c
 17461  0041CC                     l9211:
 17462  0041CC  90D8               	bcf	status,0,c
 17463  0041CE  3222               	rrcf	___aodiv@divisor+7,f,c
 17464  0041D0  3221               	rrcf	___aodiv@divisor+6,f,c
 17465  0041D2  3220               	rrcf	___aodiv@divisor+5,f,c
 17466  0041D4  321F               	rrcf	___aodiv@divisor+4,f,c
 17467  0041D6  321E               	rrcf	___aodiv@divisor+3,f,c
 17468  0041D8  321D               	rrcf	___aodiv@divisor+2,f,c
 17469  0041DA  321C               	rrcf	___aodiv@divisor+1,f,c
 17470  0041DC  321B               	rrcf	___aodiv@divisor,f,c
 17471  0041DE  2E23               	decfsz	___aodiv@counter,f,c
 17472  0041E0  D7C9               	goto	u11070
 17473  0041E2                     l9215:
 17474  0041E2  5024               	movf	___aodiv@sign,w,c
 17475  0041E4  B4D8               	btfsc	status,2,c
 17476  0041E6  D010               	goto	l9219
 17477  0041E8  1E2C               	comf	___aodiv@quotient+7,f,c
 17478  0041EA  1E2B               	comf	___aodiv@quotient+6,f,c
 17479  0041EC  1E2A               	comf	___aodiv@quotient+5,f,c
 17480  0041EE  1E29               	comf	___aodiv@quotient+4,f,c
 17481  0041F0  1E28               	comf	___aodiv@quotient+3,f,c
 17482  0041F2  1E27               	comf	___aodiv@quotient+2,f,c
 17483  0041F4  1E26               	comf	___aodiv@quotient+1,f,c
 17484  0041F6  6C25               	negf	___aodiv@quotient,c
 17485  0041F8  0E00               	movlw	0
 17486  0041FA  2226               	addwfc	___aodiv@quotient+1,f,c
 17487  0041FC  2227               	addwfc	___aodiv@quotient+2,f,c
 17488  0041FE  2228               	addwfc	___aodiv@quotient+3,f,c
 17489  004200  2229               	addwfc	___aodiv@quotient+4,f,c
 17490  004202  222A               	addwfc	___aodiv@quotient+5,f,c
 17491  004204  222B               	addwfc	___aodiv@quotient+6,f,c
 17492  004206  222C               	addwfc	___aodiv@quotient+7,f,c
 17493  004208                     l9219:
 17494  004208  C025  F013         	movff	___aodiv@quotient,?___aodiv
 17495  00420C  C026  F014         	movff	___aodiv@quotient+1,?___aodiv+1
 17496  004210  C027  F015         	movff	___aodiv@quotient+2,?___aodiv+2
 17497  004214  C028  F016         	movff	___aodiv@quotient+3,?___aodiv+3
 17498  004218  C029  F017         	movff	___aodiv@quotient+4,?___aodiv+4
 17499  00421C  C02A  F018         	movff	___aodiv@quotient+5,?___aodiv+5
 17500  004220  C02B  F019         	movff	___aodiv@quotient+6,?___aodiv+6
 17501  004224  C02C  F01A         	movff	___aodiv@quotient+7,?___aodiv+7
 17502  004228  0012               	return		;funcret
 17503  00422A                     __end_of___aodiv:
 17504                           	opt callstack 0
 17505                           
 17506 ;; *************** function _ctoa *****************
 17507 ;; Defined at:
 17508 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 17509 ;; Parameters:    Size  Location     Type
 17510 ;;  fp              2   47[COMRAM] PTR struct _IO_FILE
 17511 ;;		 -> sprintf@f(6), NULL(0), 
 17512 ;;  c               1   49[COMRAM] unsigned char 
 17513 ;; Auto vars:     Size  Location     Type
 17514 ;;  w               2   50[COMRAM] int 
 17515 ;;  l               2    0        int 
 17516 ;; Return value:  Size  Location     Type
 17517 ;;                  2   47[COMRAM] int 
 17518 ;; Registers used:
 17519 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17520 ;; Tracked objects:
 17521 ;;		On entry : 0/0
 17522 ;;		On exit  : 0/0
 17523 ;;		Unchanged: 0/0
 17524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17525 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17526 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17528 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17529 ;;Total ram usage:        5 bytes
 17530 ;; Hardware stack levels used:    1
 17531 ;; Hardware stack levels required when called:   13
 17532 ;; This function calls:
 17533 ;;		_pad
 17534 ;; This function is called by:
 17535 ;;		_vfpfcnvrt
 17536 ;; This function uses a non-reentrant model
 17537 ;;
 17538                           
 17539                           	psect	text72
 17540  0054F0                     __ptext72:
 17541                           	opt callstack 0
 17542  0054F0                     _ctoa:
 17543                           	opt callstack 13
 17544                           
 17545                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 17546                           
 17547                           ;incstack = 0
 17548  0054F0  503B               	movf	_width,w,c
 17549  0054F2  103C               	iorwf	_width+1,w,c
 17550  0054F4  A4D8               	btfss	status,2,c
 17551  0054F6  D005               	goto	l9313
 17552  0054F8  C03B  F033         	movff	_width,ctoa@w
 17553  0054FC  C03C  F034         	movff	_width+1,ctoa@w+1
 17554  005500  D006               	goto	l9315
 17555  005502                     l9313:
 17556  005502  0EFF               	movlw	255
 17557  005504  243B               	addwf	_width,w,c
 17558  005506  6E33               	movwf	ctoa@w,c
 17559  005508  0EFF               	movlw	255
 17560  00550A  203C               	addwfc	_width+1,w,c
 17561  00550C  6E34               	movwf	ctoa@w+1,c
 17562  00550E                     l9315:
 17563                           
 17564                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 17565  00550E  C032  F160         	movff	ctoa@c,_dbuf
 17566                           
 17567                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 17568  005512  0E00               	movlw	0
 17569  005514  0101               	movlb	1	; () banked
 17570  005516  6F61               	movwf	(_dbuf+1)& (0+255),b
 17571                           
 17572                           ; BSR set to: 1
 17573                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 17574  005518  C030  F025         	movff	ctoa@fp,pad@fp
 17575  00551C  C031  F026         	movff	ctoa@fp+1,pad@fp+1
 17576  005520  0E60               	movlw	low _dbuf
 17577  005522  6E27               	movwf	pad@buf,c
 17578  005524  0E01               	movlw	high _dbuf
 17579  005526  6E28               	movwf	pad@buf+1,c
 17580  005528  C033  F029         	movff	ctoa@w,pad@p
 17581  00552C  C034  F02A         	movff	ctoa@w+1,pad@p+1
 17582  005530  EC8F  F027         	call	_pad	;wreg free
 17583  005534  C025  F030         	movff	?_pad,?_ctoa
 17584  005538  C026  F031         	movff	?_pad+1,?_ctoa+1
 17585  00553C  0012               	return		;funcret
 17586  00553E                     __end_of_ctoa:
 17587                           	opt callstack 0
 17588                           
 17589 ;; *************** function _pad *****************
 17590 ;; Defined at:
 17591 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 17592 ;; Parameters:    Size  Location     Type
 17593 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
 17594 ;;		 -> sprintf@f(6), NULL(0), 
 17595 ;;  buf             2   38[COMRAM] PTR unsigned char 
 17596 ;;		 -> dbuf(32), 
 17597 ;;  p               2   40[COMRAM] int 
 17598 ;; Auto vars:     Size  Location     Type
 17599 ;;  w               2   45[COMRAM] int 
 17600 ;;  i               2   43[COMRAM] int 
 17601 ;; Return value:  Size  Location     Type
 17602 ;;                  2   36[COMRAM] int 
 17603 ;; Registers used:
 17604 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17605 ;; Tracked objects:
 17606 ;;		On entry : 0/0
 17607 ;;		On exit  : 0/0
 17608 ;;		Unchanged: 0/0
 17609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17610 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17611 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17612 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17613 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17614 ;;Total ram usage:       11 bytes
 17615 ;; Hardware stack levels used:    1
 17616 ;; Hardware stack levels required when called:   12
 17617 ;; This function calls:
 17618 ;;		_fputc
 17619 ;;		_fputs
 17620 ;;		_strlen
 17621 ;; This function is called by:
 17622 ;;		_ctoa
 17623 ;;		_dtoa
 17624 ;;		_otoa
 17625 ;;		_utoa
 17626 ;;		_xtoa
 17627 ;; This function uses a non-reentrant model
 17628 ;;
 17629                           
 17630                           	psect	text73
 17631  004F1E                     __ptext73:
 17632                           	opt callstack 0
 17633  004F1E                     _pad:
 17634                           	opt callstack 13
 17635                           
 17636                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 17637                           
 17638                           ;incstack = 0
 17639  004F1E  A03F               	btfss	_flags,0,c
 17640  004F20  D00A               	goto	l9129
 17641                           
 17642                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 17643  004F22  C027  F01E         	movff	pad@buf,fputs@s
 17644  004F26  C028  F01F         	movff	pad@buf+1,fputs@s+1
 17645  004F2A  C025  F020         	movff	pad@fp,fputs@fp
 17646  004F2E  C026  F021         	movff	pad@fp+1,fputs@fp+1
 17647  004F32  EC1B  F02C         	call	_fputs	;wreg free
 17648  004F36                     l9129:
 17649                           
 17650                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 17651  004F36  BE2A               	btfsc	pad@p+1,7,c
 17652  004F38  D005               	goto	l9133
 17653  004F3A  C029  F02E         	movff	pad@p,pad@w
 17654  004F3E  C02A  F02F         	movff	pad@p+1,pad@w+1
 17655  004F42  D004               	goto	l1032
 17656  004F44                     l9133:
 17657  004F44  0E00               	movlw	0
 17658  004F46  6E2F               	movwf	pad@w+1,c
 17659  004F48  0E00               	movlw	0
 17660  004F4A  6E2E               	movwf	pad@w,c
 17661  004F4C                     l1032:
 17662                           
 17663                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 17664  004F4C  0E00               	movlw	0
 17665  004F4E  6E2D               	movwf	pad@i+1,c
 17666  004F50  0E00               	movlw	0
 17667  004F52  6E2C               	movwf	pad@i,c
 17668                           
 17669                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 17670  004F54  D00C               	goto	l9139
 17671  004F56                     l9135:
 17672                           
 17673                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 17674  004F56  0E00               	movlw	0
 17675  004F58  6E16               	movwf	fputc@c+1,c
 17676  004F5A  0E20               	movlw	32
 17677  004F5C  6E15               	movwf	fputc@c,c
 17678  004F5E  C025  F017         	movff	pad@fp,fputc@fp
 17679  004F62  C026  F018         	movff	pad@fp+1,fputc@fp+1
 17680  004F66  EC3F  F027         	call	_fputc	;wreg free
 17681                           
 17682                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
 17683  004F6A  4A2C               	infsnz	pad@i,f,c
 17684  004F6C  2A2D               	incf	pad@i+1,f,c
 17685  004F6E                     l9139:
 17686                           
 17687                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 17688  004F6E  502E               	movf	pad@w,w,c
 17689  004F70  5C2C               	subwf	pad@i,w,c
 17690  004F72  502D               	movf	pad@i+1,w,c
 17691  004F74  0A80               	xorlw	128
 17692  004F76  6E2B               	movwf	??_pad& (0+255),c
 17693  004F78  502F               	movf	pad@w+1,w,c
 17694  004F7A  0A80               	xorlw	128
 17695  004F7C  582B               	subwfb	??_pad& (0+255),w,c
 17696  004F7E  A0D8               	btfss	status,0,c
 17697  004F80  D7EA               	goto	l9135
 17698                           
 17699                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 17700  004F82  B03F               	btfsc	_flags,0,c
 17701  004F84  D00A               	goto	l9143
 17702                           
 17703                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 17704  004F86  C027  F01E         	movff	pad@buf,fputs@s
 17705  004F8A  C028  F01F         	movff	pad@buf+1,fputs@s+1
 17706  004F8E  C025  F020         	movff	pad@fp,fputs@fp
 17707  004F92  C026  F021         	movff	pad@fp+1,fputs@fp+1
 17708  004F96  EC1B  F02C         	call	_fputs	;wreg free
 17709  004F9A                     l9143:
 17710                           
 17711                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 17712  004F9A  C027  F013         	movff	pad@buf,strlen@s
 17713  004F9E  C028  F014         	movff	pad@buf+1,strlen@s+1
 17714  004FA2  EC0C  F02B         	call	_strlen	;wreg free
 17715  004FA6  502E               	movf	pad@w,w,c
 17716  004FA8  2413               	addwf	?_strlen,w,c
 17717  004FAA  6E25               	movwf	?_pad,c
 17718  004FAC  502F               	movf	pad@w+1,w,c
 17719  004FAE  2014               	addwfc	?_strlen+1,w,c
 17720  004FB0  6E26               	movwf	?_pad+1,c
 17721  004FB2  0012               	return		;funcret
 17722  004FB4                     __end_of_pad:
 17723                           	opt callstack 0
 17724                           
 17725 ;; *************** function _strlen *****************
 17726 ;; Defined at:
 17727 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
 17728 ;; Parameters:    Size  Location     Type
 17729 ;;  s               2   18[COMRAM] PTR const unsigned char 
 17730 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
 17731 ;;		 -> STR_46(2), STR_39(21), STR_38(18), STR_26(13), 
 17732 ;;		 -> STR_25(2), STR_24(21), STR_23(21), STR_22(21), 
 17733 ;;		 -> STR_21(21), STR_20(21), STR_19(21), STR_18(3), 
 17734 ;;		 -> STR_16(9), STR_14(11), STR_13(11), STR_12(21), 
 17735 ;;		 -> STR_11(21), STR_9(15), d_cur_off(4), d_ff(2), 
 17736 ;;		 -> d_version(3), d_reset(3), STR_3(9), STR_2(12), 
 17737 ;;		 -> STR_1(4), APP_Tasks@mc_response(66), appData(76), 
 17738 ;; Auto vars:     Size  Location     Type
 17739 ;;  a               2   20[COMRAM] PTR const unsigned char 
 17740 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
 17741 ;;		 -> STR_46(2), STR_39(21), STR_38(18), STR_26(13), 
 17742 ;;		 -> STR_25(2), STR_24(21), STR_23(21), STR_22(21), 
 17743 ;;		 -> STR_21(21), STR_20(21), STR_19(21), STR_18(3), 
 17744 ;;		 -> STR_16(9), STR_14(11), STR_13(11), STR_12(21), 
 17745 ;;		 -> STR_11(21), STR_9(15), d_cur_off(4), d_ff(2), 
 17746 ;;		 -> d_version(3), d_reset(3), STR_3(9), STR_2(12), 
 17747 ;;		 -> STR_1(4), APP_Tasks@mc_response(66), appData(76), 
 17748 ;; Return value:  Size  Location     Type
 17749 ;;                  2   18[COMRAM] unsigned int 
 17750 ;; Registers used:
 17751 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 17752 ;; Tracked objects:
 17753 ;;		On entry : 0/0
 17754 ;;		On exit  : 0/0
 17755 ;;		Unchanged: 0/0
 17756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17757 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17758 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17760 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17761 ;;Total ram usage:        4 bytes
 17762 ;; Hardware stack levels used:    1
 17763 ;; Hardware stack levels required when called:    8
 17764 ;; This function calls:
 17765 ;;		Nothing
 17766 ;; This function is called by:
 17767 ;;		_pad
 17768 ;;		_stoa
 17769 ;;		_strstr
 17770 ;; This function uses a non-reentrant model
 17771 ;;
 17772                           
 17773                           	psect	text74
 17774  005618                     __ptext74:
 17775                           	opt callstack 0
 17776  005618                     _strlen:
 17777                           	opt callstack 20
 17778                           
 17779                           ;incstack = 0
 17780  005618  C013  F015         	movff	strlen@s,strlen@a
 17781  00561C  C014  F016         	movff	strlen@s+1,strlen@a+1
 17782  005620  D002               	goto	l9115
 17783  005622                     l9113:
 17784  005622  4A13               	infsnz	strlen@s,f,c
 17785  005624  2A14               	incf	strlen@s+1,f,c
 17786  005626                     l9115:
 17787  005626  C013  FFF6         	movff	strlen@s,tblptrl
 17788  00562A  C014  FFF7         	movff	strlen@s+1,tblptrh
 17789  00562E  6AF8               	clrf	tblptru,c
 17790  005630  0E0E               	movlw	(high __ramtop+-1)
 17791  005632  64F7               	cpfsgt	tblptrh,c
 17792  005634  D003               	bra	u10857
 17793  005636  0008               	tblrd		*
 17794  005638  50F5               	movf	tablat,w,c
 17795  00563A  D005               	bra	u10850
 17796  00563C                     u10857:
 17797  00563C  CFF6 FFE9          	movff	tblptrl,fsr0l
 17798  005640  CFF7 FFEA          	movff	tblptrh,fsr0h
 17799  005644  50EF               	movf	indf0,w,c
 17800  005646                     u10850:
 17801  005646  0900               	iorlw	0
 17802  005648  A4D8               	btfss	status,2,c
 17803  00564A  D7EB               	goto	l9113
 17804  00564C  5015               	movf	strlen@a,w,c
 17805  00564E  5C13               	subwf	strlen@s,w,c
 17806  005650  6E13               	movwf	?_strlen,c
 17807  005652  5016               	movf	strlen@a+1,w,c
 17808  005654  5814               	subwfb	strlen@s+1,w,c
 17809  005656  6E14               	movwf	?_strlen+1,c
 17810  005658  0012               	return		;funcret
 17811  00565A                     __end_of_strlen:
 17812                           	opt callstack 0
 17813                           
 17814 ;; *************** function _fputs *****************
 17815 ;; Defined at:
 17816 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
 17817 ;; Parameters:    Size  Location     Type
 17818 ;;  s               2   29[COMRAM] PTR const unsigned char 
 17819 ;;		 -> dbuf(32), 
 17820 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
 17821 ;;		 -> sprintf@f(6), NULL(0), 
 17822 ;; Auto vars:     Size  Location     Type
 17823 ;;  i               2   34[COMRAM] int 
 17824 ;;  c               1   33[COMRAM] unsigned char 
 17825 ;; Return value:  Size  Location     Type
 17826 ;;                  2   29[COMRAM] int 
 17827 ;; Registers used:
 17828 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17829 ;; Tracked objects:
 17830 ;;		On entry : 0/0
 17831 ;;		On exit  : 0/0
 17832 ;;		Unchanged: 0/0
 17833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17834 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17835 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17837 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17838 ;;Total ram usage:        7 bytes
 17839 ;; Hardware stack levels used:    1
 17840 ;; Hardware stack levels required when called:   11
 17841 ;; This function calls:
 17842 ;;		_fputc
 17843 ;; This function is called by:
 17844 ;;		_pad
 17845 ;; This function uses a non-reentrant model
 17846 ;;
 17847                           
 17848                           	psect	text75
 17849  005836                     __ptext75:
 17850                           	opt callstack 0
 17851  005836                     _fputs:
 17852                           	opt callstack 13
 17853                           
 17854                           ;incstack = 0
 17855  005836  0E00               	movlw	0
 17856  005838  6E24               	movwf	fputs@i+1,c
 17857  00583A  0E00               	movlw	0
 17858  00583C  6E23               	movwf	fputs@i,c
 17859  00583E  D00B               	goto	l9109
 17860  005840                     l9105:
 17861  005840  C022  F015         	movff	fputs@c,fputc@c
 17862  005844  6A16               	clrf	fputc@c+1,c
 17863  005846  C020  F017         	movff	fputs@fp,fputc@fp
 17864  00584A  C021  F018         	movff	fputs@fp+1,fputc@fp+1
 17865  00584E  EC3F  F027         	call	_fputc	;wreg free
 17866  005852  4A23               	infsnz	fputs@i,f,c
 17867  005854  2A24               	incf	fputs@i+1,f,c
 17868  005856                     l9109:
 17869  005856  5023               	movf	fputs@i,w,c
 17870  005858  241E               	addwf	fputs@s,w,c
 17871  00585A  6ED9               	movwf	fsr2l,c
 17872  00585C  5024               	movf	fputs@i+1,w,c
 17873  00585E  201F               	addwfc	fputs@s+1,w,c
 17874  005860  6EDA               	movwf	fsr2h,c
 17875  005862  50DF               	movf	indf2,w,c
 17876  005864  6E22               	movwf	fputs@c,c
 17877  005866  5022               	movf	fputs@c,w,c
 17878  005868  B4D8               	btfsc	status,2,c
 17879  00586A  0012               	return	
 17880  00586C  D7E9               	goto	l9105
 17881  00586E                     __end_of_fputs:
 17882                           	opt callstack 0
 17883                           
 17884 ;; *************** function _fputc *****************
 17885 ;; Defined at:
 17886 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
 17887 ;; Parameters:    Size  Location     Type
 17888 ;;  c               2   20[COMRAM] int 
 17889 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
 17890 ;;		 -> sprintf@f(6), NULL(0), 
 17891 ;; Auto vars:     Size  Location     Type
 17892 ;;		None
 17893 ;; Return value:  Size  Location     Type
 17894 ;;                  2   20[COMRAM] int 
 17895 ;; Registers used:
 17896 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17897 ;; Tracked objects:
 17898 ;;		On entry : 0/0
 17899 ;;		On exit  : 0/0
 17900 ;;		Unchanged: 0/0
 17901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17902 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17904 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17905 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17906 ;;Total ram usage:        9 bytes
 17907 ;; Hardware stack levels used:    1
 17908 ;; Hardware stack levels required when called:   10
 17909 ;; This function calls:
 17910 ;;		_putch
 17911 ;; This function is called by:
 17912 ;;		_pad
 17913 ;;		_stoa
 17914 ;;		_vfpfcnvrt
 17915 ;;		_fputs
 17916 ;; This function uses a non-reentrant model
 17917 ;;
 17918                           
 17919                           	psect	text76
 17920  004E7E                     __ptext76:
 17921                           	opt callstack 0
 17922  004E7E                     _fputc:
 17923                           	opt callstack 13
 17924                           
 17925                           ;incstack = 0
 17926  004E7E  5017               	movf	fputc@fp,w,c
 17927  004E80  1018               	iorwf	fputc@fp+1,w,c
 17928  004E82  B4D8               	btfsc	status,2,c
 17929  004E84  D004               	goto	u10810
 17930  004E86  5017               	movf	fputc@fp,w,c
 17931  004E88  1018               	iorwf	fputc@fp+1,w,c
 17932  004E8A  A4D8               	btfss	status,2,c
 17933  004E8C  D004               	goto	l9095
 17934  004E8E                     u10810:
 17935  004E8E  5015               	movf	fputc@c,w,c
 17936  004E90  EC96  F02F         	call	_putch
 17937  004E94  0012               	return	
 17938  004E96                     l9095:
 17939  004E96  EE20 F004          	lfsr	2,4
 17940  004E9A  5017               	movf	fputc@fp,w,c
 17941  004E9C  26D9               	addwf	fsr2l,f,c
 17942  004E9E  5018               	movf	fputc@fp+1,w,c
 17943  004EA0  22DA               	addwfc	fsr2h,f,c
 17944  004EA2  50DE               	movf	postinc2,w,c
 17945  004EA4  10DE               	iorwf	postinc2,w,c
 17946  004EA6  B4D8               	btfsc	status,2,c
 17947  004EA8  D016               	goto	u10830
 17948  004EAA  EE20 F004          	lfsr	2,4
 17949  004EAE  5017               	movf	fputc@fp,w,c
 17950  004EB0  26D9               	addwf	fsr2l,f,c
 17951  004EB2  5018               	movf	fputc@fp+1,w,c
 17952  004EB4  22DA               	addwfc	fsr2h,f,c
 17953  004EB6  EE10 F002          	lfsr	1,2
 17954  004EBA  5017               	movf	fputc@fp,w,c
 17955  004EBC  26E1               	addwf	fsr1l,f,c
 17956  004EBE  5018               	movf	fputc@fp+1,w,c
 17957  004EC0  22E2               	addwfc	fsr1h,f,c
 17958  004EC2  50DE               	movf	postinc2,w,c
 17959  004EC4  5CE6               	subwf	postinc1,w,c
 17960  004EC6  50E6               	movf	postinc1,w,c
 17961  004EC8  0A80               	xorlw	128
 17962  004ECA  6E1D               	movwf	(??_fputc+4)& (0+255),c
 17963  004ECC  50DE               	movf	postinc2,w,c
 17964  004ECE  0A80               	xorlw	128
 17965  004ED0  581D               	subwfb	(??_fputc+4)& (0+255),w,c
 17966  004ED2  B0D8               	btfsc	status,0,c
 17967  004ED4  0012               	return	
 17968  004ED6                     u10830:
 17969  004ED6  EE20 F002          	lfsr	2,2
 17970  004EDA  5017               	movf	fputc@fp,w,c
 17971  004EDC  26D9               	addwf	fsr2l,f,c
 17972  004EDE  5018               	movf	fputc@fp+1,w,c
 17973  004EE0  22DA               	addwfc	fsr2h,f,c
 17974  004EE2  CFDE F019          	movff	postinc2,??_fputc
 17975  004EE6  CFDD F01A          	movff	postdec2,??_fputc+1
 17976  004EEA  C017  FFD9         	movff	fputc@fp,fsr2l
 17977  004EEE  C018  FFDA         	movff	fputc@fp+1,fsr2h
 17978  004EF2  CFDE F01B          	movff	postinc2,??_fputc+2
 17979  004EF6  CFDD F01C          	movff	postdec2,??_fputc+3
 17980  004EFA  5019               	movf	??_fputc,w,c
 17981  004EFC  241B               	addwf	??_fputc+2,w,c
 17982  004EFE  6ED9               	movwf	fsr2l,c
 17983  004F00  501A               	movf	??_fputc+1,w,c
 17984  004F02  201C               	addwfc	??_fputc+3,w,c
 17985  004F04  6EDA               	movwf	fsr2h,c
 17986  004F06  C015  FFDF         	movff	fputc@c,indf2
 17987  004F0A  EE20 F002          	lfsr	2,2
 17988  004F0E  5017               	movf	fputc@fp,w,c
 17989  004F10  26D9               	addwf	fsr2l,f,c
 17990  004F12  5018               	movf	fputc@fp+1,w,c
 17991  004F14  22DA               	addwfc	fsr2h,f,c
 17992  004F16  2ADE               	incf	postinc2,f,c
 17993  004F18  0E00               	movlw	0
 17994  004F1A  22DD               	addwfc	postdec2,f,c
 17995  004F1C  0012               	return		;funcret
 17996  004F1E                     __end_of_fputc:
 17997                           	opt callstack 0
 17998                           
 17999 ;; *************** function _putch *****************
 18000 ;; Defined at:
 18001 ;;		line 176 in file "mcc_generated_files/eusart2.c"
 18002 ;; Parameters:    Size  Location     Type
 18003 ;;  txData          1    wreg     unsigned char 
 18004 ;; Auto vars:     Size  Location     Type
 18005 ;;  txData          1   19[COMRAM] unsigned char 
 18006 ;; Return value:  Size  Location     Type
 18007 ;;                  1    wreg      void 
 18008 ;; Registers used:
 18009 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18010 ;; Tracked objects:
 18011 ;;		On entry : 0/0
 18012 ;;		On exit  : 0/0
 18013 ;;		Unchanged: 0/0
 18014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18016 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18018 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18019 ;;Total ram usage:        1 bytes
 18020 ;; Hardware stack levels used:    1
 18021 ;; Hardware stack levels required when called:    9
 18022 ;; This function calls:
 18023 ;;		_EUSART2_Write
 18024 ;; This function is called by:
 18025 ;;		_fputc
 18026 ;; This function uses a non-reentrant model
 18027 ;;
 18028                           
 18029                           	psect	text77
 18030  005F2C                     __ptext77:
 18031                           	opt callstack 0
 18032  005F2C                     _putch:
 18033                           	opt callstack 13
 18034                           
 18035                           ;incstack = 0
 18036                           ;putch@txData stored from wreg
 18037  005F2C  6E14               	movwf	putch@txData,c
 18038                           
 18039                           ;mcc_generated_files/eusart2.c: 176: void putch(char txData);mcc_generated_files/eusart2
      +                          .c: 177: {;mcc_generated_files/eusart2.c: 178:     EUSART2_Write(txData);
 18040  005F2E  5014               	movf	putch@txData,w,c
 18041  005F30  EC37  F02C         	call	_EUSART2_Write
 18042  005F34  0012               	return		;funcret
 18043  005F36                     __end_of_putch:
 18044                           	opt callstack 0
 18045                           
 18046 ;; *************** function _EUSART2_Write *****************
 18047 ;; Defined at:
 18048 ;;		line 148 in file "mcc_generated_files/eusart2.c"
 18049 ;; Parameters:    Size  Location     Type
 18050 ;;  txData          1    wreg     unsigned char 
 18051 ;; Auto vars:     Size  Location     Type
 18052 ;;  txData          1   18[COMRAM] unsigned char 
 18053 ;; Return value:  Size  Location     Type
 18054 ;;                  1    wreg      void 
 18055 ;; Registers used:
 18056 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18057 ;; Tracked objects:
 18058 ;;		On entry : 0/0
 18059 ;;		On exit  : 0/0
 18060 ;;		Unchanged: 0/0
 18061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18063 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18065 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18066 ;;Total ram usage:        1 bytes
 18067 ;; Hardware stack levels used:    1
 18068 ;; Hardware stack levels required when called:    8
 18069 ;; This function calls:
 18070 ;;		Nothing
 18071 ;; This function is called by:
 18072 ;;		_putch
 18073 ;; This function uses a non-reentrant model
 18074 ;;
 18075                           
 18076                           	psect	text78
 18077  00586E                     __ptext78:
 18078                           	opt callstack 0
 18079  00586E                     _EUSART2_Write:
 18080                           	opt callstack 13
 18081                           
 18082                           ;incstack = 0
 18083                           ;EUSART2_Write@txData stored from wreg
 18084  00586E  6E13               	movwf	EUSART2_Write@txData,c
 18085  005870                     
 18086                           ;mcc_generated_files/eusart2.c: 150:     while(0 == eusart2TxBufferRemaining)
 18087                           
 18088                           ;mcc_generated_files/eusart2.c: 148: void EUSART2_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart2.c: 149: {;mcc_generated_files/eusart2.c: 150:     while(0 == eusart2TxBuffer
      +                          Remaining)
 18089  005870  0100               	movlb	0	; () banked
 18090  005872  51CB               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 18091  005874  B4D8               	btfsc	status,2,c
 18092  005876  D7FC               	goto	l9069
 18093                           
 18094                           ; BSR set to: 0
 18095                           ;mcc_generated_files/eusart2.c: 154:     if(0 == PIE3bits.TX2IE)
 18096  005878  B8A3               	btfsc	4003,4,c	;volatile
 18097  00587A  D003               	goto	l165
 18098                           
 18099                           ; BSR set to: 0
 18100                           ;mcc_generated_files/eusart2.c: 155:     {;mcc_generated_files/eusart2.c: 156:         T
      +                          XREG2 = txData;
 18101  00587C  C013  FF79         	movff	EUSART2_Write@txData,3961	;volatile
 18102                           
 18103                           ;mcc_generated_files/eusart2.c: 157:     }
 18104  005880  D010               	goto	l9085
 18105  005882                     l165:
 18106                           
 18107                           ; BSR set to: 0
 18108                           ;mcc_generated_files/eusart2.c: 159:     {;mcc_generated_files/eusart2.c: 160:         P
      +                          IE3bits.TX2IE = 0;
 18109  005882  98A3               	bcf	4003,4,c	;volatile
 18110                           
 18111                           ; BSR set to: 0
 18112                           ;mcc_generated_files/eusart2.c: 161:         eusart2TxBuffer[eusart2TxHead++] = txData;
 18113  005884  0E80               	movlw	low _eusart2TxBuffer
 18114  005886  244A               	addwf	_eusart2TxHead,w,c	;volatile
 18115  005888  6ED9               	movwf	fsr2l,c
 18116  00588A  6ADA               	clrf	fsr2h,c
 18117  00588C  0E02               	movlw	high _eusart2TxBuffer
 18118  00588E  22DA               	addwfc	fsr2h,f,c
 18119  005890  C013  FFDF         	movff	EUSART2_Write@txData,indf2
 18120                           
 18121                           ; BSR set to: 0
 18122  005894  2A4A               	incf	_eusart2TxHead,f,c	;volatile
 18123                           
 18124                           ; BSR set to: 0
 18125                           ;mcc_generated_files/eusart2.c: 162:         if(sizeof(eusart2TxBuffer) <= eusart2TxHead
      +                          )
 18126  005896  0E3F               	movlw	63
 18127  005898  644A               	cpfsgt	_eusart2TxHead,c	;volatile
 18128  00589A  D002               	goto	l9083
 18129                           
 18130                           ; BSR set to: 0
 18131                           ;mcc_generated_files/eusart2.c: 163:         {;mcc_generated_files/eusart2.c: 164:      
      +                                 eusart2TxHead = 0;
 18132  00589C  0E00               	movlw	0
 18133  00589E  6E4A               	movwf	_eusart2TxHead,c	;volatile
 18134  0058A0                     l9083:
 18135                           
 18136                           ; BSR set to: 0
 18137                           ;mcc_generated_files/eusart2.c: 166:         eusart2TxBufferRemaining--;
 18138  0058A0  07CB               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 18139  0058A2                     l9085:
 18140                           
 18141                           ; BSR set to: 0
 18142                           ;mcc_generated_files/eusart2.c: 168:     PIE3bits.TX2IE = 1;
 18143  0058A2  88A3               	bsf	4003,4,c	;volatile
 18144                           
 18145                           ; BSR set to: 0
 18146  0058A4  0012               	return		;funcret
 18147  0058A6                     __end_of_EUSART2_Write:
 18148                           	opt callstack 0
 18149                           
 18150 ;; *************** function _atoi *****************
 18151 ;; Defined at:
 18152 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/atoi.c"
 18153 ;; Parameters:    Size  Location     Type
 18154 ;;  s               2   25[COMRAM] PTR const unsigned char 
 18155 ;;		 -> STR_50(2), STR_49(3), STR_48(15), STR_47(24), 
 18156 ;;		 -> STR_45(9), STR_44(11), STR_43(7), STR_42(7), 
 18157 ;;		 -> STR_41(7), STR_40(7), STR_10(21), STR_8(3), 
 18158 ;;		 -> STR_7(3), STR_6(3), STR_5(3), STR_4(3), 
 18159 ;; Auto vars:     Size  Location     Type
 18160 ;;  n               2   38[COMRAM] int 
 18161 ;;  neg             2   31[COMRAM] int 
 18162 ;; Return value:  Size  Location     Type
 18163 ;;                  2   25[COMRAM] int 
 18164 ;; Registers used:
 18165 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18166 ;; Tracked objects:
 18167 ;;		On entry : 0/0
 18168 ;;		On exit  : 0/0
 18169 ;;		Unchanged: 0/0
 18170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18171 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18172 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18173 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18174 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18175 ;;Total ram usage:       15 bytes
 18176 ;; Hardware stack levels used:    1
 18177 ;; Hardware stack levels required when called:    9
 18178 ;; This function calls:
 18179 ;;		___wmul
 18180 ;;		_isdigit
 18181 ;;		_isspace
 18182 ;; This function is called by:
 18183 ;;		_vfpfcnvrt
 18184 ;; This function uses a non-reentrant model
 18185 ;;
 18186                           
 18187                           	psect	text79
 18188  00436A                     __ptext79:
 18189                           	opt callstack 0
 18190  00436A                     _atoi:
 18191                           	opt callstack 17
 18192                           
 18193                           ; BSR set to: 0
 18194                           ;incstack = 0
 18195  00436A  0E00               	movlw	0
 18196  00436C  6E28               	movwf	atoi@n+1,c
 18197  00436E  0E00               	movlw	0
 18198  004370  6E27               	movwf	atoi@n,c
 18199  004372  0E00               	movlw	0
 18200  004374  6E21               	movwf	atoi@neg+1,c
 18201  004376  0E00               	movlw	0
 18202  004378  6E20               	movwf	atoi@neg,c
 18203  00437A  D002               	goto	l9581
 18204  00437C                     l9579:
 18205  00437C  4A1A               	infsnz	atoi@s,f,c
 18206  00437E  2A1B               	incf	atoi@s+1,f,c
 18207  004380                     l9581:
 18208  004380  0E01               	movlw	1
 18209  004382  6E26               	movwf	_atoi$3535,c
 18210  004384  C01A  FFF6         	movff	atoi@s,tblptrl
 18211  004388  C01B  FFF7         	movff	atoi@s+1,tblptrh
 18212  00438C                     	if	0	;tblptru may be non-zero
 18213  00438C                     	endif
 18214  00438C                     	if	0	;tblptru may be non-zero
 18215  00438C                     	endif
 18216  00438C  0008               	tblrd		*
 18217  00438E  50F5               	movf	tablat,w,c
 18218  004390  0A20               	xorlw	32
 18219  004392  B4D8               	btfsc	status,2,c
 18220  004394  D018               	goto	l9589
 18221  004396  0EF7               	movlw	247
 18222  004398  6E1C               	movwf	??_atoi& (0+255),c
 18223  00439A  0EFF               	movlw	255
 18224  00439C  6E1D               	movwf	(??_atoi+1)& (0+255),c
 18225  00439E  C01A  FFF6         	movff	atoi@s,tblptrl
 18226  0043A2  C01B  FFF7         	movff	atoi@s+1,tblptrh
 18227  0043A6                     	if	0	;tblptru may be non-zero
 18228  0043A6                     	endif
 18229  0043A6                     	if	0	;tblptru may be non-zero
 18230  0043A6                     	endif
 18231  0043A6  0008               	tblrd		*
 18232  0043A8  50F5               	movf	tablat,w,c
 18233  0043AA  6E1E               	movwf	(??_atoi+2)& (0+255),c
 18234  0043AC  6A1F               	clrf	(??_atoi+3)& (0+255),c
 18235  0043AE  501C               	movf	??_atoi,w,c
 18236  0043B0  261E               	addwf	??_atoi+2,f,c
 18237  0043B2  501D               	movf	??_atoi+1,w,c
 18238  0043B4  221F               	addwfc	??_atoi+3,f,c
 18239  0043B6  501F               	movf	??_atoi+3,w,c
 18240  0043B8  E104               	bnz	u11860
 18241  0043BA  0E05               	movlw	5
 18242  0043BC  5C1E               	subwf	??_atoi+2,w,c
 18243  0043BE  A0D8               	btfss	status,0,c
 18244  0043C0  D002               	goto	l9589
 18245  0043C2                     u11860:
 18246  0043C2  0E00               	movlw	0
 18247  0043C4  6E26               	movwf	_atoi$3535,c
 18248  0043C6                     l9589:
 18249  0043C6  C026  F022         	movff	_atoi$3535,_atoi$3534
 18250  0043CA  6A23               	clrf	_atoi$3534+1,c
 18251  0043CC  5022               	movf	_atoi$3534,w,c
 18252  0043CE  1023               	iorwf	_atoi$3534+1,w,c
 18253  0043D0  B4D8               	btfsc	status,2,c
 18254  0043D2  D008               	goto	l9599
 18255  0043D4  D7D3               	goto	l9579
 18256  0043D6                     l9595:
 18257  0043D6  0E00               	movlw	0
 18258  0043D8  6E21               	movwf	atoi@neg+1,c
 18259  0043DA  0E01               	movlw	1
 18260  0043DC  6E20               	movwf	atoi@neg,c
 18261  0043DE                     l9597:
 18262  0043DE  4A1A               	infsnz	atoi@s,f,c
 18263  0043E0  2A1B               	incf	atoi@s+1,f,c
 18264  0043E2  D02E               	goto	l9605
 18265  0043E4                     l9599:
 18266  0043E4  C01A  FFF6         	movff	atoi@s,tblptrl
 18267  0043E8  C01B  FFF7         	movff	atoi@s+1,tblptrh
 18268  0043EC                     	if	0	;tblptru may be non-zero
 18269  0043EC                     	endif
 18270  0043EC                     	if	0	;tblptru may be non-zero
 18271  0043EC                     	endif
 18272  0043EC  0008               	tblrd		*
 18273  0043EE  50F5               	movf	tablat,w,c
 18274  0043F0  6E1C               	movwf	??_atoi& (0+255),c
 18275  0043F2  6A1D               	clrf	(??_atoi+1)& (0+255),c
 18276                           
 18277                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18278                           ; Switch size 1, requested type "simple"
 18279                           ; Number of cases is 1, Range of values is 0 to 0
 18280                           ; switch strategies available:
 18281                           ; Name         Instructions Cycles
 18282                           ; simple_byte            4     3 (average)
 18283                           ;	Chosen strategy is simple_byte
 18284  0043F4  501D               	movf	??_atoi+1,w,c
 18285  0043F6  0A00               	xorlw	0	; case 0
 18286  0043F8  A4D8               	btfss	status,2,c
 18287  0043FA  D022               	goto	l9605
 18288                           
 18289                           ; Switch size 1, requested type "simple"
 18290                           ; Number of cases is 2, Range of values is 43 to 45
 18291                           ; switch strategies available:
 18292                           ; Name         Instructions Cycles
 18293                           ; simple_byte            7     4 (average)
 18294                           ;	Chosen strategy is simple_byte
 18295  0043FC  501C               	movf	??_atoi,w,c
 18296  0043FE  0A2B               	xorlw	43	; case 43
 18297  004400  B4D8               	btfsc	status,2,c
 18298  004402  D7ED               	goto	l9597
 18299  004404  0A06               	xorlw	6	; case 45
 18300  004406  B4D8               	btfsc	status,2,c
 18301  004408  D7E6               	goto	l9595
 18302  00440A  D01A               	goto	l9605
 18303  00440C                     l9601:
 18304  00440C  C027  F013         	movff	atoi@n,___wmul@multiplier
 18305  004410  C028  F014         	movff	atoi@n+1,___wmul@multiplier+1
 18306  004414  0E00               	movlw	0
 18307  004416  6E16               	movwf	___wmul@multiplicand+1,c
 18308  004418  0E0A               	movlw	10
 18309  00441A  6E15               	movwf	___wmul@multiplicand,c
 18310  00441C  EC24  F02E         	call	___wmul	;wreg free
 18311  004420  C01A  FFF6         	movff	atoi@s,tblptrl
 18312  004424  C01B  FFF7         	movff	atoi@s+1,tblptrh
 18313  004428                     	if	0	;tblptru may be non-zero
 18314  004428                     	endif
 18315  004428                     	if	0	;tblptru may be non-zero
 18316  004428                     	endif
 18317  004428  0008               	tblrd		*
 18318  00442A  50F5               	movf	tablat,w,c
 18319  00442C  5E13               	subwf	?___wmul,f,c
 18320  00442E  0E00               	movlw	0
 18321  004430  5A14               	subwfb	?___wmul+1,f,c
 18322  004432  0E30               	movlw	48
 18323  004434  2413               	addwf	?___wmul,w,c
 18324  004436  6E27               	movwf	atoi@n,c
 18325  004438  0E00               	movlw	0
 18326  00443A  2014               	addwfc	?___wmul+1,w,c
 18327  00443C  6E28               	movwf	atoi@n+1,c
 18328  00443E  D7CF               	goto	l9597
 18329  004440                     l9605:
 18330  004440  0ED0               	movlw	208
 18331  004442  6E1C               	movwf	??_atoi& (0+255),c
 18332  004444  0EFF               	movlw	255
 18333  004446  6E1D               	movwf	(??_atoi+1)& (0+255),c
 18334  004448  C01A  FFF6         	movff	atoi@s,tblptrl
 18335  00444C  C01B  FFF7         	movff	atoi@s+1,tblptrh
 18336  004450                     	if	0	;tblptru may be non-zero
 18337  004450                     	endif
 18338  004450                     	if	0	;tblptru may be non-zero
 18339  004450                     	endif
 18340  004450  0008               	tblrd		*
 18341  004452  50F5               	movf	tablat,w,c
 18342  004454  6E1E               	movwf	(??_atoi+2)& (0+255),c
 18343  004456  6A1F               	clrf	(??_atoi+3)& (0+255),c
 18344  004458  501C               	movf	??_atoi,w,c
 18345  00445A  261E               	addwf	??_atoi+2,f,c
 18346  00445C  501D               	movf	??_atoi+1,w,c
 18347  00445E  221F               	addwfc	??_atoi+3,f,c
 18348  004460  501F               	movf	??_atoi+3,w,c
 18349  004462  E106               	bnz	u11880
 18350  004464  0E0A               	movlw	10
 18351  004466  5C1E               	subwf	??_atoi+2,w,c
 18352  004468  B0D8               	btfsc	status,0,c
 18353  00446A  D002               	goto	u11880
 18354  00446C  0E01               	movlw	1
 18355  00446E  D001               	goto	u11890
 18356  004470                     u11880:
 18357  004470  0E00               	movlw	0
 18358  004472                     u11890:
 18359  004472  6E24               	movwf	_atoi$3536,c
 18360  004474  6A25               	clrf	_atoi$3536+1,c
 18361  004476  5024               	movf	_atoi$3536,w,c
 18362  004478  1025               	iorwf	_atoi$3536+1,w,c
 18363  00447A  A4D8               	btfss	status,2,c
 18364  00447C  D7C7               	goto	l9601
 18365  00447E  5020               	movf	atoi@neg,w,c
 18366  004480  1021               	iorwf	atoi@neg+1,w,c
 18367  004482  A4D8               	btfss	status,2,c
 18368  004484  D00D               	goto	l1945
 18369  004486  C027  F01C         	movff	atoi@n,??_atoi
 18370  00448A  C028  F01D         	movff	atoi@n+1,??_atoi+1
 18371  00448E  1E1C               	comf	??_atoi,f,c
 18372  004490  1E1D               	comf	??_atoi+1,f,c
 18373  004492  4A1C               	infsnz	??_atoi,f,c
 18374  004494  2A1D               	incf	??_atoi+1,f,c
 18375  004496  C01C  F01A         	movff	??_atoi,?_atoi
 18376  00449A  C01D  F01B         	movff	??_atoi+1,?_atoi+1
 18377  00449E  0012               	return	
 18378  0044A0                     l1945:
 18379  0044A0  C027  F01A         	movff	atoi@n,?_atoi
 18380  0044A4  C028  F01B         	movff	atoi@n+1,?_atoi+1
 18381  0044A8  0012               	return		;funcret
 18382  0044AA                     __end_of_atoi:
 18383                           	opt callstack 0
 18384                           
 18385 ;; *************** function _isspace *****************
 18386 ;; Defined at:
 18387 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isspace.c"
 18388 ;; Parameters:    Size  Location     Type
 18389 ;;  c               2   18[COMRAM] int 
 18390 ;; Auto vars:     Size  Location     Type
 18391 ;;		None
 18392 ;; Return value:  Size  Location     Type
 18393 ;;                  2   18[COMRAM] int 
 18394 ;; Registers used:
 18395 ;;		wreg, status,2, status,0
 18396 ;; Tracked objects:
 18397 ;;		On entry : 0/0
 18398 ;;		On exit  : 0/0
 18399 ;;		Unchanged: 0/0
 18400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18401 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18402 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18403 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18404 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18405 ;;Total ram usage:        7 bytes
 18406 ;; Hardware stack levels used:    1
 18407 ;; Hardware stack levels required when called:    8
 18408 ;; This function calls:
 18409 ;;		Nothing
 18410 ;; This function is called by:
 18411 ;;		_atoi
 18412 ;;		_strtof
 18413 ;; This function uses a non-reentrant model
 18414 ;;
 18415                           
 18416                           	psect	text80
 18417  005698                     __ptext80:
 18418                           	opt callstack 0
 18419  005698                     _isspace:
 18420                           	opt callstack 17
 18421                           
 18422                           ;incstack = 0
 18423  005698  0E01               	movlw	1
 18424  00569A  6E19               	movwf	_isspace$3561,c
 18425  00569C  0E20               	movlw	32
 18426  00569E  1813               	xorwf	isspace@c,w,c
 18427  0056A0  1014               	iorwf	isspace@c+1,w,c
 18428  0056A2  B4D8               	btfsc	status,2,c
 18429  0056A4  D014               	goto	l9305
 18430  0056A6  0EF7               	movlw	247
 18431  0056A8  6E15               	movwf	??_isspace& (0+255),c
 18432  0056AA  0EFF               	movlw	255
 18433  0056AC  6E16               	movwf	(??_isspace+1)& (0+255),c
 18434  0056AE  C013  F017         	movff	isspace@c,??_isspace+2
 18435  0056B2  C014  F018         	movff	isspace@c+1,??_isspace+3
 18436  0056B6  5015               	movf	??_isspace,w,c
 18437  0056B8  2617               	addwf	??_isspace+2,f,c
 18438  0056BA  5016               	movf	??_isspace+1,w,c
 18439  0056BC  2218               	addwfc	??_isspace+3,f,c
 18440  0056BE  5018               	movf	??_isspace+3,w,c
 18441  0056C0  E104               	bnz	u11240
 18442  0056C2  0E05               	movlw	5
 18443  0056C4  5C17               	subwf	??_isspace+2,w,c
 18444  0056C6  A0D8               	btfss	status,0,c
 18445  0056C8  D002               	goto	l9305
 18446  0056CA                     u11240:
 18447  0056CA  0E00               	movlw	0
 18448  0056CC  6E19               	movwf	_isspace$3561,c
 18449  0056CE                     l9305:
 18450  0056CE  C019  F013         	movff	_isspace$3561,?_isspace
 18451  0056D2  6A14               	clrf	?_isspace+1,c
 18452  0056D4  0012               	return		;funcret
 18453  0056D6                     __end_of_isspace:
 18454                           	opt callstack 0
 18455                           
 18456 ;; *************** function _isdigit *****************
 18457 ;; Defined at:
 18458 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isdigit.c"
 18459 ;; Parameters:    Size  Location     Type
 18460 ;;  c               2   18[COMRAM] int 
 18461 ;; Auto vars:     Size  Location     Type
 18462 ;;		None
 18463 ;; Return value:  Size  Location     Type
 18464 ;;                  2   18[COMRAM] int 
 18465 ;; Registers used:
 18466 ;;		wreg, status,2, status,0
 18467 ;; Tracked objects:
 18468 ;;		On entry : 0/0
 18469 ;;		On exit  : 0/0
 18470 ;;		Unchanged: 0/0
 18471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18472 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18474 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18475 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18476 ;;Total ram usage:        6 bytes
 18477 ;; Hardware stack levels used:    1
 18478 ;; Hardware stack levels required when called:    8
 18479 ;; This function calls:
 18480 ;;		Nothing
 18481 ;; This function is called by:
 18482 ;;		_vfpfcnvrt
 18483 ;;		_atoi
 18484 ;;		_strtof
 18485 ;; This function uses a non-reentrant model
 18486 ;;
 18487                           
 18488                           	psect	text81
 18489  005A0E                     __ptext81:
 18490                           	opt callstack 0
 18491  005A0E                     _isdigit:
 18492                           	opt callstack 18
 18493                           
 18494                           ;incstack = 0
 18495  005A0E  0ED0               	movlw	208
 18496  005A10  6E15               	movwf	??_isdigit& (0+255),c
 18497  005A12  0EFF               	movlw	255
 18498  005A14  6E16               	movwf	(??_isdigit+1)& (0+255),c
 18499  005A16  C013  F017         	movff	isdigit@c,??_isdigit+2
 18500  005A1A  C014  F018         	movff	isdigit@c+1,??_isdigit+3
 18501  005A1E  5015               	movf	??_isdigit,w,c
 18502  005A20  2617               	addwf	??_isdigit+2,f,c
 18503  005A22  5016               	movf	??_isdigit+1,w,c
 18504  005A24  2218               	addwfc	??_isdigit+3,f,c
 18505  005A26  5018               	movf	??_isdigit+3,w,c
 18506  005A28  E106               	bnz	u11010
 18507  005A2A  0E0A               	movlw	10
 18508  005A2C  5C17               	subwf	??_isdigit+2,w,c
 18509  005A2E  B0D8               	btfsc	status,0,c
 18510  005A30  D002               	goto	u11010
 18511  005A32  0E01               	movlw	1
 18512  005A34  D001               	goto	u11020
 18513  005A36                     u11010:
 18514  005A36  0E00               	movlw	0
 18515  005A38                     u11020:
 18516  005A38  6E13               	movwf	?_isdigit,c
 18517  005A3A  6A14               	clrf	?_isdigit+1,c
 18518  005A3C  0012               	return		;funcret
 18519  005A3E                     __end_of_isdigit:
 18520                           	opt callstack 0
 18521                           
 18522 ;; *************** function ___wmul *****************
 18523 ;; Defined at:
 18524 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/Umul16.c"
 18525 ;; Parameters:    Size  Location     Type
 18526 ;;  multiplier      2   18[COMRAM] unsigned int 
 18527 ;;  multiplicand    2   20[COMRAM] unsigned int 
 18528 ;; Auto vars:     Size  Location     Type
 18529 ;;  product         2   22[COMRAM] unsigned int 
 18530 ;; Return value:  Size  Location     Type
 18531 ;;                  2   18[COMRAM] unsigned int 
 18532 ;; Registers used:
 18533 ;;		wreg, status,2, status,0, prodl, prodh
 18534 ;; Tracked objects:
 18535 ;;		On entry : 0/0
 18536 ;;		On exit  : 0/0
 18537 ;;		Unchanged: 0/0
 18538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18539 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18540 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18542 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18543 ;;Total ram usage:        6 bytes
 18544 ;; Hardware stack levels used:    1
 18545 ;; Hardware stack levels required when called:    8
 18546 ;; This function calls:
 18547 ;;		Nothing
 18548 ;; This function is called by:
 18549 ;;		_atoi
 18550 ;;		_strtof
 18551 ;; This function uses a non-reentrant model
 18552 ;;
 18553                           
 18554                           	psect	text82
 18555  005C48                     __ptext82:
 18556                           	opt callstack 0
 18557  005C48                     ___wmul:
 18558                           	opt callstack 17
 18559                           
 18560                           ;incstack = 0
 18561  005C48  5013               	movf	___wmul@multiplier,w,c
 18562  005C4A  0215               	mulwf	___wmul@multiplicand,c
 18563  005C4C  CFF3 F017          	movff	prodl,___wmul@product
 18564  005C50  CFF4 F018          	movff	prodh,___wmul@product+1
 18565  005C54  5013               	movf	___wmul@multiplier,w,c
 18566  005C56  0216               	mulwf	___wmul@multiplicand+1,c
 18567  005C58  50F3               	movf	prodl,w,c
 18568  005C5A  2618               	addwf	___wmul@product+1,f,c
 18569  005C5C  5014               	movf	___wmul@multiplier+1,w,c
 18570  005C5E  0215               	mulwf	___wmul@multiplicand,c
 18571  005C60  50F3               	movf	prodl,w,c
 18572  005C62  2618               	addwf	___wmul@product+1,f,c
 18573  005C64  C017  F013         	movff	___wmul@product,?___wmul
 18574  005C68  C018  F014         	movff	___wmul@product+1,?___wmul+1
 18575  005C6C  0012               	return		;funcret
 18576  005C6E                     __end_of___wmul:
 18577                           	opt callstack 0
 18578                           
 18579 ;; *************** function _clear_MC_port *****************
 18580 ;; Defined at:
 18581 ;;		line 49 in file "app.c"
 18582 ;; Parameters:    Size  Location     Type
 18583 ;;		None
 18584 ;; Auto vars:     Size  Location     Type
 18585 ;;		None
 18586 ;; Return value:  Size  Location     Type
 18587 ;;                  1    wreg      void 
 18588 ;; Registers used:
 18589 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18590 ;; Tracked objects:
 18591 ;;		On entry : 0/0
 18592 ;;		On exit  : 0/0
 18593 ;;		Unchanged: 0/0
 18594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18599 ;;Total ram usage:        0 bytes
 18600 ;; Hardware stack levels used:    1
 18601 ;; Hardware stack levels required when called:   10
 18602 ;; This function calls:
 18603 ;;		_EUSART1_Read
 18604 ;;		_EUSART1_is_rx_ready
 18605 ;;		_WaitMs
 18606 ;; This function is called by:
 18607 ;;		_APP_Tasks
 18608 ;; This function uses a non-reentrant model
 18609 ;;
 18610                           
 18611                           	psect	text83
 18612  005A3E                     __ptext83:
 18613                           	opt callstack 0
 18614  005A3E                     _clear_MC_port:
 18615                           	opt callstack 19
 18616                           
 18617                           ;app.c: 51:  while (EUSART1_is_rx_ready()) {
 18618                           
 18619                           ;incstack = 0
 18620  005A3E  D00D               	goto	l11259
 18621  005A40                     l11253:
 18622                           
 18623                           ;app.c: 52:   EUSART1_Read();
 18624  005A40  EC66  F02D         	call	_EUSART1_Read	;wreg free
 18625                           
 18626                           ;app.c: 53:   if (!EUSART1_is_rx_ready()) {
 18627  005A44  ECC0  F02F         	call	_EUSART1_is_rx_ready	;wreg free
 18628  005A48  0900               	iorlw	0
 18629  005A4A  A4D8               	btfss	status,2,c
 18630  005A4C  D006               	goto	l11259
 18631                           
 18632                           ;app.c: 54:    WaitMs(1);
 18633  005A4E  0E00               	movlw	0
 18634  005A50  6E19               	movwf	WaitMs@numMilliseconds+1,c
 18635  005A52  0E01               	movlw	1
 18636  005A54  6E18               	movwf	WaitMs@numMilliseconds,c
 18637  005A56  ECF4  F02E         	call	_WaitMs	;wreg free
 18638  005A5A                     l11259:
 18639                           
 18640                           ;app.c: 51:  while (EUSART1_is_rx_ready()) {
 18641  005A5A  ECC0  F02F         	call	_EUSART1_is_rx_ready	;wreg free
 18642  005A5E  0900               	iorlw	0
 18643  005A60  A4D8               	btfss	status,2,c
 18644  005A62  D7EE               	goto	l11253
 18645                           
 18646                           ;app.c: 58:  if (1 == RCSTA1bits.OERR) {
 18647  005A64  A2AB               	btfss	4011,1,c	;volatile
 18648  005A66  0012               	return	
 18649                           
 18650                           ;app.c: 60:   RCSTA1bits.CREN = 0;
 18651  005A68  98AB               	bcf	4011,4,c	;volatile
 18652                           
 18653                           ;app.c: 61:   RCSTA1bits.CREN = 1;
 18654  005A6A  88AB               	bsf	4011,4,c	;volatile
 18655  005A6C  0012               	return		;funcret
 18656  005A6E                     __end_of_clear_MC_port:
 18657                           	opt callstack 0
 18658                           
 18659 ;; *************** function _TMR3_StopTimer *****************
 18660 ;; Defined at:
 18661 ;;		line 100 in file "mcc_generated_files/tmr3.c"
 18662 ;; Parameters:    Size  Location     Type
 18663 ;;		None
 18664 ;; Auto vars:     Size  Location     Type
 18665 ;;		None
 18666 ;; Return value:  Size  Location     Type
 18667 ;;                  1    wreg      void 
 18668 ;; Registers used:
 18669 ;;		None
 18670 ;; Tracked objects:
 18671 ;;		On entry : 0/0
 18672 ;;		On exit  : 0/0
 18673 ;;		Unchanged: 0/0
 18674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18679 ;;Total ram usage:        0 bytes
 18680 ;; Hardware stack levels used:    1
 18681 ;; Hardware stack levels required when called:    8
 18682 ;; This function calls:
 18683 ;;		Nothing
 18684 ;; This function is called by:
 18685 ;;		_APP_Tasks
 18686 ;; This function uses a non-reentrant model
 18687 ;;
 18688                           
 18689                           	psect	text84
 18690  005F78                     __ptext84:
 18691                           	opt callstack 0
 18692  005F78                     _TMR3_StopTimer:
 18693                           	opt callstack 21
 18694                           
 18695                           ;mcc_generated_files/tmr3.c: 103:  T3CONbits.TMR3ON = 0;
 18696                           
 18697                           ;incstack = 0
 18698  005F78  90B1               	bcf	4017,0,c	;volatile
 18699  005F7A  0012               	return		;funcret
 18700  005F7C                     __end_of_TMR3_StopTimer:
 18701                           	opt callstack 0
 18702                           
 18703 ;; *************** function _TMR3_StartTimer *****************
 18704 ;; Defined at:
 18705 ;;		line 94 in file "mcc_generated_files/tmr3.c"
 18706 ;; Parameters:    Size  Location     Type
 18707 ;;		None
 18708 ;; Auto vars:     Size  Location     Type
 18709 ;;		None
 18710 ;; Return value:  Size  Location     Type
 18711 ;;                  1    wreg      void 
 18712 ;; Registers used:
 18713 ;;		None
 18714 ;; Tracked objects:
 18715 ;;		On entry : 0/0
 18716 ;;		On exit  : 0/0
 18717 ;;		Unchanged: 0/0
 18718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18723 ;;Total ram usage:        0 bytes
 18724 ;; Hardware stack levels used:    1
 18725 ;; Hardware stack levels required when called:    8
 18726 ;; This function calls:
 18727 ;;		Nothing
 18728 ;; This function is called by:
 18729 ;;		_APP_Tasks
 18730 ;; This function uses a non-reentrant model
 18731 ;;
 18732                           
 18733                           	psect	text85
 18734  005F7C                     __ptext85:
 18735                           	opt callstack 0
 18736  005F7C                     _TMR3_StartTimer:
 18737                           	opt callstack 21
 18738                           
 18739                           ;mcc_generated_files/tmr3.c: 97:  T3CONbits.TMR3ON = 1;
 18740                           
 18741                           ;incstack = 0
 18742  005F7C  80B1               	bsf	4017,0,c	;volatile
 18743  005F7E  0012               	return		;funcret
 18744  005F80                     __end_of_TMR3_StartTimer:
 18745                           	opt callstack 0
 18746                           
 18747 ;; *************** function _MC_SendCommand *****************
 18748 ;; Defined at:
 18749 ;;		line 404 in file "app.c"
 18750 ;; Parameters:    Size  Location     Type
 18751 ;;  data            2   25[COMRAM] PTR const unsigned char 
 18752 ;;		 -> STR_37(7), STR_36(12), STR_35(8), STR_34(6), 
 18753 ;;		 -> STR_33(7), STR_32(5), STR_31(11), STR_30(12), 
 18754 ;;		 -> STR_29(11), STR_28(8), STR_27(6), STR_17(9), 
 18755 ;;		 -> STR_15(7), APP_Tasks@mc_response(66), 
 18756 ;;  wait            1   27[COMRAM] _Bool 
 18757 ;; Auto vars:     Size  Location     Type
 18758 ;;  i               2   28[COMRAM] unsigned short 
 18759 ;; Return value:  Size  Location     Type
 18760 ;;                  1    wreg      _Bool 
 18761 ;; Registers used:
 18762 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18763 ;; Tracked objects:
 18764 ;;		On entry : 0/0
 18765 ;;		On exit  : 0/0
 18766 ;;		Unchanged: 0/0
 18767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18768 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18769 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18771 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18772 ;;Total ram usage:        5 bytes
 18773 ;; Hardware stack levels used:    1
 18774 ;; Hardware stack levels required when called:   10
 18775 ;; This function calls:
 18776 ;;		_EUSART1_Write
 18777 ;;		_WaitMs
 18778 ;; This function is called by:
 18779 ;;		_APP_Tasks
 18780 ;; This function uses a non-reentrant model
 18781 ;;
 18782                           
 18783                           	psect	text86
 18784  0050D2                     __ptext86:
 18785                           	opt callstack 0
 18786  0050D2                     _MC_SendCommand:
 18787                           	opt callstack 19
 18788                           
 18789                           ;app.c: 404: _Bool MC_SendCommand(const char *data, _Bool wait);app.c: 405: {;app.c: 406
      +                          :  uint16_t i;;app.c: 408:  for (i = 0; i < 64; i++) {
 18790                           
 18791                           ;incstack = 0
 18792  0050D2  0E00               	movlw	0
 18793  0050D4  6E1E               	movwf	MC_SendCommand@i+1,c
 18794  0050D6  0E00               	movlw	0
 18795  0050D8  6E1D               	movwf	MC_SendCommand@i,c
 18796  0050DA                     l11359:
 18797                           
 18798                           ;app.c: 409:   if (*data != '\0')
 18799  0050DA  C01A  FFF6         	movff	MC_SendCommand@data,tblptrl
 18800  0050DE  C01B  FFF7         	movff	MC_SendCommand@data+1,tblptrh
 18801  0050E2  6AF8               	clrf	tblptru,c
 18802  0050E4  0E0E               	movlw	(high __ramtop+-1)
 18803  0050E6  64F7               	cpfsgt	tblptrh,c
 18804  0050E8  D003               	bra	u15097
 18805  0050EA  0008               	tblrd		*
 18806  0050EC  50F5               	movf	tablat,w,c
 18807  0050EE  D005               	bra	u15090
 18808  0050F0                     u15097:
 18809  0050F0  CFF6 FFE9          	movff	tblptrl,fsr0l
 18810  0050F4  CFF7 FFEA          	movff	tblptrh,fsr0h
 18811  0050F8  50EF               	movf	indf0,w,c
 18812  0050FA                     u15090:
 18813  0050FA  0900               	iorlw	0
 18814  0050FC  B4D8               	btfsc	status,2,c
 18815  0050FE  D01C               	goto	u15120
 18816                           
 18817                           ;app.c: 410:    EUSART1_Write(*data++);
 18818  005100  C01A  FFF6         	movff	MC_SendCommand@data,tblptrl
 18819  005104  C01B  FFF7         	movff	MC_SendCommand@data+1,tblptrh
 18820  005108  6AF8               	clrf	tblptru,c
 18821  00510A  0E0E               	movlw	(high __ramtop+-1)
 18822  00510C  64F7               	cpfsgt	tblptrh,c
 18823  00510E  D003               	bra	u15117
 18824  005110  0008               	tblrd		*
 18825  005112  50F5               	movf	tablat,w,c
 18826  005114  D005               	bra	u15110
 18827  005116                     u15117:
 18828  005116  CFF6 FFE9          	movff	tblptrl,fsr0l
 18829  00511A  CFF7 FFEA          	movff	tblptrh,fsr0h
 18830  00511E  50EF               	movf	indf0,w,c
 18831  005120                     u15110:
 18832  005120  EC53  F02C         	call	_EUSART1_Write
 18833  005124  4A1A               	infsnz	MC_SendCommand@data,f,c
 18834  005126  2A1B               	incf	MC_SendCommand@data+1,f,c
 18835                           
 18836                           ;app.c: 413:  }
 18837  005128  4A1D               	infsnz	MC_SendCommand@i,f,c
 18838  00512A  2A1E               	incf	MC_SendCommand@i+1,f,c
 18839  00512C  501E               	movf	MC_SendCommand@i+1,w,c
 18840  00512E  E104               	bnz	u15120
 18841  005130  0E40               	movlw	64
 18842  005132  5C1D               	subwf	MC_SendCommand@i,w,c
 18843  005134  A0D8               	btfss	status,0,c
 18844  005136  D7D1               	goto	l11359
 18845  005138                     u15120:
 18846                           
 18847                           ;app.c: 415:  if (wait) {
 18848  005138  501C               	movf	MC_SendCommand@wait,w,c
 18849  00513A  B4D8               	btfsc	status,2,c
 18850  00513C  0012               	return	
 18851                           
 18852                           ;app.c: 416:   WaitMs(200);
 18853  00513E  0E00               	movlw	0
 18854  005140  6E19               	movwf	WaitMs@numMilliseconds+1,c
 18855  005142  0EC8               	movlw	200
 18856  005144  6E18               	movwf	WaitMs@numMilliseconds,c
 18857  005146  ECF4  F02E         	call	_WaitMs	;wreg free
 18858  00514A  0012               	return		;funcret
 18859  00514C                     __end_of_MC_SendCommand:
 18860                           	opt callstack 0
 18861                           
 18862 ;; *************** function _WaitMs *****************
 18863 ;; Defined at:
 18864 ;;		line 34 in file "timers.c"
 18865 ;; Parameters:    Size  Location     Type
 18866 ;;  numMilliseco    2   23[COMRAM] unsigned short 
 18867 ;; Auto vars:     Size  Location     Type
 18868 ;;		None
 18869 ;; Return value:  Size  Location     Type
 18870 ;;                  1    wreg      void 
 18871 ;; Registers used:
 18872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18873 ;; Tracked objects:
 18874 ;;		On entry : 0/0
 18875 ;;		On exit  : 0/0
 18876 ;;		Unchanged: 0/0
 18877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18878 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18881 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18882 ;;Total ram usage:        2 bytes
 18883 ;; Hardware stack levels used:    1
 18884 ;; Hardware stack levels required when called:    9
 18885 ;; This function calls:
 18886 ;;		_StartTimer
 18887 ;;		_TimerDone
 18888 ;; This function is called by:
 18889 ;;		_clear_MC_port
 18890 ;;		_APP_Tasks
 18891 ;;		_MC_SendCommand
 18892 ;;		_display_ea_init
 18893 ;;		_display_ea_version
 18894 ;;		_display_ea_ff
 18895 ;;		_display_ea_cursor_off
 18896 ;; This function uses a non-reentrant model
 18897 ;;
 18898                           
 18899                           	psect	text87
 18900  005DE8                     __ptext87:
 18901                           	opt callstack 0
 18902  005DE8                     _WaitMs:
 18903                           	opt callstack 19
 18904                           
 18905                           ;timers.c: 34: void WaitMs(uint16_t numMilliseconds);timers.c: 35: {;timers.c: 36:  Star
      +                          tTimer(TMR_INTERNAL, numMilliseconds);
 18906                           
 18907                           ;incstack = 0
 18908  005DE8  C018  F013         	movff	WaitMs@numMilliseconds,StartTimer@count
 18909  005DEC  C019  F014         	movff	WaitMs@numMilliseconds+1,StartTimer@count+1
 18910  005DF0  0E00               	movlw	0
 18911  005DF2  ECD3  F02D         	call	_StartTimer
 18912  005DF6                     l11095:
 18913                           
 18914                           ;timers.c: 37:  while (!TimerDone(TMR_INTERNAL)) {
 18915  005DF6  0E00               	movlw	0
 18916  005DF8  EC90  F02E         	call	_TimerDone
 18917  005DFC  0900               	iorlw	0
 18918  005DFE  A4D8               	btfss	status,2,c
 18919  005E00  0012               	return	
 18920  005E02  D7F9               	goto	l11095
 18921  005E04                     __end_of_WaitMs:
 18922                           	opt callstack 0
 18923                           
 18924 ;; *************** function _TimerDone *****************
 18925 ;; Defined at:
 18926 ;;		line 23 in file "timers.c"
 18927 ;; Parameters:    Size  Location     Type
 18928 ;;  timer           1    wreg     unsigned char 
 18929 ;; Auto vars:     Size  Location     Type
 18930 ;;  timer           1   20[COMRAM] unsigned char 
 18931 ;; Return value:  Size  Location     Type
 18932 ;;                  1    wreg      _Bool 
 18933 ;; Registers used:
 18934 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18935 ;; Tracked objects:
 18936 ;;		On entry : 0/0
 18937 ;;		On exit  : 0/0
 18938 ;;		Unchanged: 0/0
 18939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18941 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18942 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18943 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18944 ;;Total ram usage:        3 bytes
 18945 ;; Hardware stack levels used:    1
 18946 ;; Hardware stack levels required when called:    8
 18947 ;; This function calls:
 18948 ;;		Nothing
 18949 ;; This function is called by:
 18950 ;;		_WaitMs
 18951 ;;		_APP_Tasks
 18952 ;; This function uses a non-reentrant model
 18953 ;;
 18954                           
 18955                           	psect	text88
 18956  005D20                     __ptext88:
 18957                           	opt callstack 0
 18958  005D20                     _TimerDone:
 18959                           	opt callstack 19
 18960                           
 18961                           ;incstack = 0
 18962                           ;TimerDone@timer stored from wreg
 18963  005D20  6E15               	movwf	TimerDone@timer,c
 18964                           
 18965                           ;timers.c: 23: __attribute__((inline)) _Bool TimerDone(uint8_t timer);timers.c: 24: {;ti
      +                          mers.c: 25:  if (tickCount[timer] == 0) {
 18966  005D22  5015               	movf	TimerDone@timer,w,c
 18967  005D24  0D02               	mullw	2
 18968  005D26  0E00               	movlw	low _tickCount
 18969  005D28  24F3               	addwf	prodl,w,c
 18970  005D2A  6ED9               	movwf	fsr2l,c
 18971  005D2C  0E01               	movlw	high _tickCount
 18972  005D2E  20F4               	addwfc	prodh,w,c
 18973  005D30  6EDA               	movwf	fsr2h,c
 18974  005D32  50DE               	movf	postinc2,w,c
 18975  005D34  10DE               	iorwf	postinc2,w,c
 18976  005D36  A4D8               	btfss	status,2,c
 18977  005D38  D002               	goto	l10583
 18978                           
 18979                           ;timers.c: 26:   return 1;
 18980  005D3A  0E01               	movlw	1
 18981  005D3C  0012               	return	
 18982  005D3E                     l10583:
 18983                           
 18984                           ;timers.c: 28:  return 0;
 18985  005D3E  0E00               	movlw	0
 18986  005D40  0012               	return		;funcret
 18987  005D42                     __end_of_TimerDone:
 18988                           	opt callstack 0
 18989                           
 18990 ;; *************** function _StartTimer *****************
 18991 ;; Defined at:
 18992 ;;		line 15 in file "timers.c"
 18993 ;; Parameters:    Size  Location     Type
 18994 ;;  timer           1    wreg     unsigned char 
 18995 ;;  count           2   18[COMRAM] unsigned short 
 18996 ;; Auto vars:     Size  Location     Type
 18997 ;;  timer           1   22[COMRAM] unsigned char 
 18998 ;; Return value:  Size  Location     Type
 18999 ;;                  1    wreg      void 
 19000 ;; Registers used:
 19001 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19002 ;; Tracked objects:
 19003 ;;		On entry : 0/0
 19004 ;;		On exit  : 0/0
 19005 ;;		Unchanged: 0/0
 19006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19007 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19008 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19009 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19010 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19011 ;;Total ram usage:        5 bytes
 19012 ;; Hardware stack levels used:    1
 19013 ;; Hardware stack levels required when called:    8
 19014 ;; This function calls:
 19015 ;;		Nothing
 19016 ;; This function is called by:
 19017 ;;		_WaitMs
 19018 ;;		_APP_Tasks
 19019 ;; This function uses a non-reentrant model
 19020 ;;
 19021                           
 19022                           	psect	text89
 19023  005BA6                     __ptext89:
 19024                           	opt callstack 0
 19025  005BA6                     _StartTimer:
 19026                           	opt callstack 19
 19027                           
 19028                           ;incstack = 0
 19029                           ;StartTimer@timer stored from wreg
 19030  005BA6  6E17               	movwf	StartTimer@timer,c
 19031                           
 19032                           ;timers.c: 15: __attribute__((inline)) void StartTimer(uint8_t timer, uint16_t count);ti
      +                          mers.c: 16: {;timers.c: 17:  tickCount[timer] = count << 1;
 19033  005BA8  C013  F015         	movff	StartTimer@count,??_StartTimer
 19034  005BAC  C014  F016         	movff	StartTimer@count+1,??_StartTimer+1
 19035  005BB0  90D8               	bcf	status,0,c
 19036  005BB2  3615               	rlcf	??_StartTimer,f,c
 19037  005BB4  3616               	rlcf	??_StartTimer+1,f,c
 19038  005BB6  5017               	movf	StartTimer@timer,w,c
 19039  005BB8  0D02               	mullw	2
 19040  005BBA  0E00               	movlw	low _tickCount
 19041  005BBC  24F3               	addwf	prodl,w,c
 19042  005BBE  6ED9               	movwf	fsr2l,c
 19043  005BC0  0E01               	movlw	high _tickCount
 19044  005BC2  20F4               	addwfc	prodh,w,c
 19045  005BC4  6EDA               	movwf	fsr2h,c
 19046  005BC6  C015  FFDE         	movff	??_StartTimer,postinc2
 19047  005BCA  C016  FFDD         	movff	??_StartTimer+1,postdec2
 19048  005BCE  0012               	return		;funcret
 19049  005BD0                     __end_of_StartTimer:
 19050                           	opt callstack 0
 19051                           
 19052 ;; *************** function _EUSART1_Write *****************
 19053 ;; Defined at:
 19054 ;;		line 149 in file "mcc_generated_files/eusart1.c"
 19055 ;; Parameters:    Size  Location     Type
 19056 ;;  txData          1    wreg     unsigned char 
 19057 ;; Auto vars:     Size  Location     Type
 19058 ;;  txData          1   18[COMRAM] unsigned char 
 19059 ;; Return value:  Size  Location     Type
 19060 ;;                  1    wreg      void 
 19061 ;; Registers used:
 19062 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19063 ;; Tracked objects:
 19064 ;;		On entry : 0/0
 19065 ;;		On exit  : 0/0
 19066 ;;		Unchanged: 0/0
 19067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19069 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19071 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19072 ;;Total ram usage:        1 bytes
 19073 ;; Hardware stack levels used:    1
 19074 ;; Hardware stack levels required when called:    8
 19075 ;; This function calls:
 19076 ;;		Nothing
 19077 ;; This function is called by:
 19078 ;;		_MC_SendCommand
 19079 ;; This function uses a non-reentrant model
 19080 ;;
 19081                           
 19082                           	psect	text90
 19083  0058A6                     __ptext90:
 19084                           	opt callstack 0
 19085  0058A6                     _EUSART1_Write:
 19086                           	opt callstack 20
 19087                           
 19088                           ;incstack = 0
 19089                           ;EUSART1_Write@txData stored from wreg
 19090  0058A6  6E13               	movwf	EUSART1_Write@txData,c
 19091  0058A8                     
 19092                           ;mcc_generated_files/eusart1.c: 151:  while (0 == eusart1TxBufferRemaining) {
 19093                           
 19094                           ;mcc_generated_files/eusart1.c: 149: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 150: {;mcc_generated_files/eusart1.c: 151:  while (0 == eusart1TxBufferRe
      +                          maining) {
 19095  0058A8  0100               	movlb	0	; () banked
 19096  0058AA  51CA               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
 19097  0058AC  B4D8               	btfsc	status,2,c
 19098  0058AE  D7FC               	goto	l11073
 19099                           
 19100                           ; BSR set to: 0
 19101                           ;mcc_generated_files/eusart1.c: 154:  if (0 == PIE1bits.TX1IE) {
 19102  0058B0  B89D               	btfsc	3997,4,c	;volatile
 19103  0058B2  D003               	goto	l344
 19104                           
 19105                           ; BSR set to: 0
 19106                           ;mcc_generated_files/eusart1.c: 155:   TXREG1 = txData;
 19107  0058B4  C013  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
 19108                           
 19109                           ;mcc_generated_files/eusart1.c: 156:  } else {
 19110  0058B8  D010               	goto	l11089
 19111  0058BA                     l344:
 19112                           
 19113                           ; BSR set to: 0
 19114                           ;mcc_generated_files/eusart1.c: 157:   PIE1bits.TX1IE = 0;
 19115  0058BA  989D               	bcf	3997,4,c	;volatile
 19116                           
 19117                           ; BSR set to: 0
 19118                           ;mcc_generated_files/eusart1.c: 158:   eusart1TxBuffer[eusart1TxHead++] = txData;
 19119  0058BC  0E40               	movlw	low _eusart1TxBuffer
 19120  0058BE  2445               	addwf	_eusart1TxHead,w,c	;volatile
 19121  0058C0  6ED9               	movwf	fsr2l,c
 19122  0058C2  6ADA               	clrf	fsr2h,c
 19123  0058C4  0E02               	movlw	high _eusart1TxBuffer
 19124  0058C6  22DA               	addwfc	fsr2h,f,c
 19125  0058C8  C013  FFDF         	movff	EUSART1_Write@txData,indf2
 19126                           
 19127                           ; BSR set to: 0
 19128  0058CC  2A45               	incf	_eusart1TxHead,f,c	;volatile
 19129                           
 19130                           ; BSR set to: 0
 19131                           ;mcc_generated_files/eusart1.c: 159:   if (sizeof(eusart1TxBuffer) <= eusart1TxHead) {
 19132  0058CE  0E3F               	movlw	63
 19133  0058D0  6445               	cpfsgt	_eusart1TxHead,c	;volatile
 19134  0058D2  D002               	goto	l11087
 19135                           
 19136                           ; BSR set to: 0
 19137                           ;mcc_generated_files/eusart1.c: 160:    eusart1TxHead = 0;
 19138  0058D4  0E00               	movlw	0
 19139  0058D6  6E45               	movwf	_eusart1TxHead,c	;volatile
 19140  0058D8                     l11087:
 19141                           
 19142                           ; BSR set to: 0
 19143                           ;mcc_generated_files/eusart1.c: 162:   eusart1TxBufferRemaining--;
 19144  0058D8  07CA               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 19145  0058DA                     l11089:
 19146                           
 19147                           ; BSR set to: 0
 19148                           ;mcc_generated_files/eusart1.c: 164:  PIE1bits.TX1IE = 1;
 19149  0058DA  889D               	bsf	3997,4,c	;volatile
 19150                           
 19151                           ; BSR set to: 0
 19152  0058DC  0012               	return		;funcret
 19153  0058DE                     __end_of_EUSART1_Write:
 19154                           	opt callstack 0
 19155                           
 19156 ;; *************** function _MC_ReceivePacket *****************
 19157 ;; Defined at:
 19158 ;;		line 365 in file "app.c"
 19159 ;; Parameters:    Size  Location     Type
 19160 ;;  Message         2   19[COMRAM] PTR unsigned char 
 19161 ;;		 -> appData(76), 
 19162 ;; Auto vars:     Size  Location     Type
 19163 ;;		None
 19164 ;; Return value:  Size  Location     Type
 19165 ;;                  1    wreg      _Bool 
 19166 ;; Registers used:
 19167 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19168 ;; Tracked objects:
 19169 ;;		On entry : 0/0
 19170 ;;		On exit  : 0/0
 19171 ;;		Unchanged: 0/0
 19172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19173 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19175 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19176 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19177 ;;Total ram usage:        5 bytes
 19178 ;; Hardware stack levels used:    1
 19179 ;; Hardware stack levels required when called:    9
 19180 ;; This function calls:
 19181 ;;		_EUSART1_Read
 19182 ;;		_EUSART1_is_rx_ready
 19183 ;; This function is called by:
 19184 ;;		_APP_Tasks
 19185 ;; This function uses a non-reentrant model
 19186 ;;
 19187                           
 19188                           	psect	text91
 19189  00490C                     __ptext91:
 19190                           	opt callstack 0
 19191  00490C                     _MC_ReceivePacket:
 19192                           	opt callstack 20
 19193                           
 19194                           ;app.c: 365: _Bool MC_ReceivePacket(char * Message);app.c: 366: {;app.c: 367:  static en
      +                          um McDecodeState btDecodeState = WaitForCR;;app.c: 368:  static uint16_t i = 0;;app.c: 3
      +                          70:  if (EUSART1_is_rx_ready())
 19195                           
 19196                           ; BSR set to: 0
 19197                           ;incstack = 0
 19198  00490C  ECC0  F02F         	call	_EUSART1_is_rx_ready	;wreg free
 19199  004910  0900               	iorlw	0
 19200  004912  B4D8               	btfsc	status,2,c
 19201  004914  D06B               	goto	l11311
 19202                           
 19203                           ;app.c: 371:  {;app.c: 373:   Message[i++] = EUSART1_Read();
 19204  004916  EC66  F02D         	call	_EUSART1_Read	;wreg free
 19205  00491A  6E16               	movwf	??_MC_ReceivePacket& (0+255),c
 19206  00491C  0100               	movlb	0	; () banked
 19207  00491E  51C4               	movf	MC_ReceivePacket@i& (0+255),w,b
 19208  004920  2414               	addwf	MC_ReceivePacket@Message,w,c
 19209  004922  6ED9               	movwf	fsr2l,c
 19210  004924  51C5               	movf	(MC_ReceivePacket@i+1)& (0+255),w,b
 19211  004926  2015               	addwfc	MC_ReceivePacket@Message+1,w,c
 19212  004928  6EDA               	movwf	fsr2h,c
 19213  00492A  C016  FFDF         	movff	??_MC_ReceivePacket,indf2
 19214                           
 19215                           ; BSR set to: 0
 19216  00492E  4BC4               	infsnz	MC_ReceivePacket@i& (0+255),f,b
 19217  004930  2BC5               	incf	(MC_ReceivePacket@i+1)& (0+255),f,b
 19218                           
 19219                           ; BSR set to: 0
 19220                           ;app.c: 374:   if (i == 64) {
 19221  004932  0E40               	movlw	64
 19222  004934  19C4               	xorwf	MC_ReceivePacket@i& (0+255),w,b
 19223  004936  11C5               	iorwf	(MC_ReceivePacket@i+1)& (0+255),w,b
 19224  004938  A4D8               	btfss	status,2,c
 19225  00493A  D049               	goto	l11309
 19226                           
 19227                           ; BSR set to: 0
 19228                           ;app.c: 375:    i = 0;
 19229  00493C  0E00               	movlw	0
 19230  00493E  6FC5               	movwf	(MC_ReceivePacket@i+1)& (0+255),b
 19231  004940  0E00               	movlw	0
 19232  004942  6FC4               	movwf	MC_ReceivePacket@i& (0+255),b
 19233  004944  D044               	goto	l11309
 19234  004946                     l11289:
 19235                           
 19236                           ; BSR set to: 0
 19237                           ;app.c: 381:    if (Message[i - 1] == '\r') {
 19238  004946  51C4               	movf	MC_ReceivePacket@i& (0+255),w,b
 19239  004948  2414               	addwf	MC_ReceivePacket@Message,w,c
 19240  00494A  6E16               	movwf	??_MC_ReceivePacket& (0+255),c
 19241  00494C  51C5               	movf	(MC_ReceivePacket@i+1)& (0+255),w,b
 19242  00494E  2015               	addwfc	MC_ReceivePacket@Message+1,w,c
 19243  004950  6E17               	movwf	(??_MC_ReceivePacket+1)& (0+255),c
 19244  004952  0EFF               	movlw	255
 19245  004954  2416               	addwf	??_MC_ReceivePacket,w,c
 19246  004956  6ED9               	movwf	fsr2l,c
 19247  004958  0EFF               	movlw	255
 19248  00495A  2017               	addwfc	??_MC_ReceivePacket+1,w,c
 19249  00495C  6EDA               	movwf	fsr2h,c
 19250  00495E  0E0D               	movlw	13
 19251  004960  18DE               	xorwf	postinc2,w,c
 19252  004962  A4D8               	btfss	status,2,c
 19253  004964  D043               	goto	l11311
 19254                           
 19255                           ; BSR set to: 0
 19256                           ;app.c: 382:     btDecodeState = WaitForLF;
 19257  004966  0E01               	movlw	1
 19258  004968  D030               	goto	L26
 19259  00496A                     l11293:
 19260                           
 19261                           ; BSR set to: 0
 19262                           ;app.c: 387:    btDecodeState = WaitForCR;
 19263  00496A  0E00               	movlw	0
 19264  00496C  6FC8               	movwf	MC_ReceivePacket@btDecodeState& (0+255),b
 19265                           
 19266                           ; BSR set to: 0
 19267                           ;app.c: 388:    if (Message[i - 1] == '\n')
 19268  00496E  51C4               	movf	MC_ReceivePacket@i& (0+255),w,b
 19269  004970  2414               	addwf	MC_ReceivePacket@Message,w,c
 19270  004972  6E16               	movwf	??_MC_ReceivePacket& (0+255),c
 19271  004974  51C5               	movf	(MC_ReceivePacket@i+1)& (0+255),w,b
 19272  004976  2015               	addwfc	MC_ReceivePacket@Message+1,w,c
 19273  004978  6E17               	movwf	(??_MC_ReceivePacket+1)& (0+255),c
 19274  00497A  0EFF               	movlw	255
 19275  00497C  2416               	addwf	??_MC_ReceivePacket,w,c
 19276  00497E  6ED9               	movwf	fsr2l,c
 19277  004980  0EFF               	movlw	255
 19278  004982  2017               	addwfc	??_MC_ReceivePacket+1,w,c
 19279  004984  6EDA               	movwf	fsr2h,c
 19280  004986  0E0A               	movlw	10
 19281  004988  18DE               	xorwf	postinc2,w,c
 19282  00498A  A4D8               	btfss	status,2,c
 19283  00498C  D02F               	goto	l11311
 19284                           
 19285                           ; BSR set to: 0
 19286                           ;app.c: 389:    {;app.c: 390:     Message[i] = 0;
 19287  00498E  51C4               	movf	MC_ReceivePacket@i& (0+255),w,b
 19288  004990  2414               	addwf	MC_ReceivePacket@Message,w,c
 19289  004992  6ED9               	movwf	fsr2l,c
 19290  004994  51C5               	movf	(MC_ReceivePacket@i+1)& (0+255),w,b
 19291  004996  2015               	addwfc	MC_ReceivePacket@Message+1,w,c
 19292  004998  6EDA               	movwf	fsr2h,c
 19293  00499A  0E00               	movlw	0
 19294  00499C  6EDF               	movwf	indf2,c
 19295                           
 19296                           ; BSR set to: 0
 19297                           ;app.c: 391:     i = 0;
 19298  00499E  0E00               	movlw	0
 19299  0049A0  6FC5               	movwf	(MC_ReceivePacket@i+1)& (0+255),b
 19300  0049A2  0E00               	movlw	0
 19301  0049A4  6FC4               	movwf	MC_ReceivePacket@i& (0+255),b
 19302                           
 19303                           ; BSR set to: 0
 19304  0049A6  A689               	btfss	3977,3,c	;volatile
 19305  0049A8  D002               	goto	u15040
 19306  0049AA  0E01               	movlw	1
 19307  0049AC  D001               	goto	u15046
 19308  0049AE                     u15040:
 19309  0049AE  0E00               	movlw	0
 19310  0049B0                     u15046:
 19311  0049B0  0AFF               	xorlw	255
 19312  0049B2  6E16               	movwf	??_MC_ReceivePacket& (0+255),c
 19313  0049B4  4616               	rlncf	??_MC_ReceivePacket,f,c
 19314  0049B6  4616               	rlncf	??_MC_ReceivePacket,f,c
 19315  0049B8  4616               	rlncf	??_MC_ReceivePacket,f,c
 19316  0049BA  5089               	movf	3977,w,c	;volatile
 19317  0049BC  1816               	xorwf	??_MC_ReceivePacket,w,c
 19318  0049BE  0BF7               	andlw	-9
 19319  0049C0  1816               	xorwf	??_MC_ReceivePacket,w,c
 19320  0049C2  6E89               	movwf	3977,c	;volatile
 19321                           
 19322                           ; BSR set to: 0
 19323                           ;app.c: 393:     return 1;
 19324  0049C4  0E01               	movlw	1
 19325  0049C6  0012               	return	
 19326  0049C8                     l11307:
 19327                           
 19328                           ; BSR set to: 0
 19329                           ;app.c: 398:    btDecodeState = WaitForCR;
 19330  0049C8  0E00               	movlw	0
 19331  0049CA                     L26:
 19332  0049CA  6FC8               	movwf	MC_ReceivePacket@btDecodeState& (0+255),b
 19333                           
 19334                           ;app.c: 399:   }
 19335  0049CC  D00F               	goto	l11311
 19336  0049CE                     l11309:
 19337                           
 19338                           ; BSR set to: 0
 19339  0049CE  51C8               	movf	MC_ReceivePacket@btDecodeState& (0+255),w,b
 19340  0049D0  6E16               	movwf	??_MC_ReceivePacket& (0+255),c
 19341  0049D2  6A17               	clrf	(??_MC_ReceivePacket+1)& (0+255),c
 19342                           
 19343                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19344                           ; Switch size 1, requested type "simple"
 19345                           ; Number of cases is 1, Range of values is 0 to 0
 19346                           ; switch strategies available:
 19347                           ; Name         Instructions Cycles
 19348                           ; simple_byte            4     3 (average)
 19349                           ;	Chosen strategy is simple_byte
 19350  0049D4  5017               	movf	??_MC_ReceivePacket+1,w,c
 19351  0049D6  0A00               	xorlw	0	; case 0
 19352  0049D8  A4D8               	btfss	status,2,c
 19353  0049DA  D7F6               	goto	l11307
 19354                           
 19355                           ; BSR set to: 0
 19356                           ; Switch size 1, requested type "simple"
 19357                           ; Number of cases is 2, Range of values is 0 to 1
 19358                           ; switch strategies available:
 19359                           ; Name         Instructions Cycles
 19360                           ; simple_byte            7     4 (average)
 19361                           ;	Chosen strategy is simple_byte
 19362  0049DC  5016               	movf	??_MC_ReceivePacket,w,c
 19363  0049DE  0A00               	xorlw	0	; case 0
 19364  0049E0  B4D8               	btfsc	status,2,c
 19365  0049E2  D7B1               	goto	l11289
 19366  0049E4  0A01               	xorlw	1	; case 1
 19367  0049E6  B4D8               	btfsc	status,2,c
 19368  0049E8  D7C0               	goto	l11293
 19369  0049EA  D7EE               	goto	l11307
 19370  0049EC                     l11311:
 19371                           
 19372                           ;app.c: 401:  return 0;
 19373  0049EC  0E00               	movlw	0
 19374  0049EE  0012               	return		;funcret
 19375  0049F0                     __end_of_MC_ReceivePacket:
 19376                           	opt callstack 0
 19377                           
 19378 ;; *************** function _EUSART1_is_rx_ready *****************
 19379 ;; Defined at:
 19380 ;;		line 120 in file "mcc_generated_files/eusart1.c"
 19381 ;; Parameters:    Size  Location     Type
 19382 ;;		None
 19383 ;; Auto vars:     Size  Location     Type
 19384 ;;		None
 19385 ;; Return value:  Size  Location     Type
 19386 ;;                  1    wreg      unsigned char 
 19387 ;; Registers used:
 19388 ;;		wreg, status,2
 19389 ;; Tracked objects:
 19390 ;;		On entry : 0/0
 19391 ;;		On exit  : 0/0
 19392 ;;		Unchanged: 0/0
 19393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19398 ;;Total ram usage:        0 bytes
 19399 ;; Hardware stack levels used:    1
 19400 ;; Hardware stack levels required when called:    8
 19401 ;; This function calls:
 19402 ;;		Nothing
 19403 ;; This function is called by:
 19404 ;;		_clear_MC_port
 19405 ;;		_MC_ReceivePacket
 19406 ;; This function uses a non-reentrant model
 19407 ;;
 19408                           
 19409                           	psect	text92
 19410  005F80                     __ptext92:
 19411                           	opt callstack 0
 19412  005F80                     _EUSART1_is_rx_ready:
 19413                           	opt callstack 20
 19414                           
 19415                           ;mcc_generated_files/eusart1.c: 123:  return eusart1RxCount;
 19416                           
 19417                           ;incstack = 0
 19418  005F80  5041               	movf	_eusart1RxCount,w,c	;volatile
 19419  005F82  0012               	return		;funcret
 19420  005F84                     __end_of_EUSART1_is_rx_ready:
 19421                           	opt callstack 0
 19422                           
 19423 ;; *************** function _EUSART1_Read *****************
 19424 ;; Defined at:
 19425 ;;		line 131 in file "mcc_generated_files/eusart1.c"
 19426 ;; Parameters:    Size  Location     Type
 19427 ;;		None
 19428 ;; Auto vars:     Size  Location     Type
 19429 ;;  readValue       1   18[COMRAM] unsigned char 
 19430 ;; Return value:  Size  Location     Type
 19431 ;;                  1    wreg      unsigned char 
 19432 ;; Registers used:
 19433 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19434 ;; Tracked objects:
 19435 ;;		On entry : 0/0
 19436 ;;		On exit  : 0/0
 19437 ;;		Unchanged: 0/0
 19438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19440 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19442 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19443 ;;Total ram usage:        1 bytes
 19444 ;; Hardware stack levels used:    1
 19445 ;; Hardware stack levels required when called:    8
 19446 ;; This function calls:
 19447 ;;		Nothing
 19448 ;; This function is called by:
 19449 ;;		_clear_MC_port
 19450 ;;		_MC_ReceivePacket
 19451 ;; This function uses a non-reentrant model
 19452 ;;
 19453                           
 19454                           	psect	text93
 19455  005ACC                     __ptext93:
 19456                           	opt callstack 0
 19457  005ACC                     _EUSART1_Read:
 19458                           	opt callstack 20
 19459                           
 19460                           ;mcc_generated_files/eusart1.c: 135:  while (0 == eusart1RxCount) {
 19461                           
 19462                           ;mcc_generated_files/eusart1.c: 135:  while (0 == eusart1RxCount) {
 19463                           
 19464                           ;incstack = 0
 19465  005ACC  5041               	movf	_eusart1RxCount,w,c	;volatile
 19466  005ACE  B4D8               	btfsc	status,2,c
 19467  005AD0  D7FD               	goto	_EUSART1_Read
 19468                           
 19469                           ;mcc_generated_files/eusart1.c: 138:  readValue = eusart1RxBuffer[eusart1RxTail++];
 19470  005AD2  0E00               	movlw	low _eusart1RxBuffer
 19471  005AD4  2442               	addwf	_eusart1RxTail,w,c	;volatile
 19472  005AD6  6ED9               	movwf	fsr2l,c
 19473  005AD8  6ADA               	clrf	fsr2h,c
 19474  005ADA  0E02               	movlw	high _eusart1RxBuffer
 19475  005ADC  22DA               	addwfc	fsr2h,f,c
 19476  005ADE  50DF               	movf	indf2,w,c
 19477  005AE0  6E13               	movwf	EUSART1_Read@readValue,c
 19478  005AE2  2A42               	incf	_eusart1RxTail,f,c	;volatile
 19479                           
 19480                           ;mcc_generated_files/eusart1.c: 139:  if (sizeof(eusart1RxBuffer) <= eusart1RxTail) {
 19481  005AE4  0E3F               	movlw	63
 19482  005AE6  6442               	cpfsgt	_eusart1RxTail,c	;volatile
 19483  005AE8  D002               	goto	l11063
 19484                           
 19485                           ;mcc_generated_files/eusart1.c: 140:   eusart1RxTail = 0;
 19486  005AEA  0E00               	movlw	0
 19487  005AEC  6E42               	movwf	_eusart1RxTail,c	;volatile
 19488  005AEE                     l11063:
 19489                           
 19490                           ;mcc_generated_files/eusart1.c: 142:  PIE1bits.RC1IE = 0;
 19491  005AEE  9A9D               	bcf	3997,5,c	;volatile
 19492                           
 19493                           ;mcc_generated_files/eusart1.c: 143:  eusart1RxCount--;
 19494  005AF0  0641               	decf	_eusart1RxCount,f,c	;volatile
 19495                           
 19496                           ;mcc_generated_files/eusart1.c: 144:  PIE1bits.RC1IE = 1;
 19497  005AF2  8A9D               	bsf	3997,5,c	;volatile
 19498                           
 19499                           ;mcc_generated_files/eusart1.c: 146:  return readValue;
 19500  005AF4  5013               	movf	EUSART1_Read@readValue,w,c
 19501  005AF6  0012               	return		;funcret
 19502  005AF8                     __end_of_EUSART1_Read:
 19503                           	opt callstack 0
 19504                           
 19505 ;; *************** function _APP_Initialize *****************
 19506 ;; Defined at:
 19507 ;;		line 38 in file "app.c"
 19508 ;; Parameters:    Size  Location     Type
 19509 ;;		None
 19510 ;; Auto vars:     Size  Location     Type
 19511 ;;		None
 19512 ;; Return value:  Size  Location     Type
 19513 ;;                  1    wreg      _Bool 
 19514 ;; Registers used:
 19515 ;;		wreg, cstack
 19516 ;; Tracked objects:
 19517 ;;		On entry : 0/0
 19518 ;;		On exit  : 0/0
 19519 ;;		Unchanged: 0/0
 19520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19525 ;;Total ram usage:        0 bytes
 19526 ;; Hardware stack levels used:    1
 19527 ;; Hardware stack levels required when called:    9
 19528 ;; This function calls:
 19529 ;;		_TMR0_StartTimer
 19530 ;;		_TMR1_StartTimer
 19531 ;; This function is called by:
 19532 ;;		_APP_Tasks
 19533 ;; This function uses a non-reentrant model
 19534 ;;
 19535                           
 19536                           	psect	text94
 19537  005EB0                     __ptext94:
 19538                           	opt callstack 0
 19539  005EB0                     _APP_Initialize:
 19540                           	opt callstack 20
 19541                           
 19542                           ;app.c: 40:  TMR1_StartTimer();
 19543                           
 19544                           ;incstack = 0
 19545  005EB0  ECC2  F02F         	call	_TMR1_StartTimer	;wreg free
 19546                           
 19547                           ;app.c: 41:  TMR0_StartTimer();
 19548  005EB4  ECC4  F02F         	call	_TMR0_StartTimer	;wreg free
 19549                           
 19550                           ;app.c: 43:  LATAbits.LATA0 = 1;
 19551  005EB8  8089               	bsf	3977,0,c	;volatile
 19552                           
 19553                           ;app.c: 44:  return 1;
 19554  005EBA  0E01               	movlw	1
 19555  005EBC  0012               	return		;funcret
 19556  005EBE                     __end_of_APP_Initialize:
 19557                           	opt callstack 0
 19558                           
 19559 ;; *************** function _TMR1_StartTimer *****************
 19560 ;; Defined at:
 19561 ;;		line 94 in file "mcc_generated_files/tmr1.c"
 19562 ;; Parameters:    Size  Location     Type
 19563 ;;		None
 19564 ;; Auto vars:     Size  Location     Type
 19565 ;;		None
 19566 ;; Return value:  Size  Location     Type
 19567 ;;                  1    wreg      void 
 19568 ;; Registers used:
 19569 ;;		None
 19570 ;; Tracked objects:
 19571 ;;		On entry : 0/0
 19572 ;;		On exit  : 0/0
 19573 ;;		Unchanged: 0/0
 19574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19579 ;;Total ram usage:        0 bytes
 19580 ;; Hardware stack levels used:    1
 19581 ;; Hardware stack levels required when called:    8
 19582 ;; This function calls:
 19583 ;;		Nothing
 19584 ;; This function is called by:
 19585 ;;		_APP_Initialize
 19586 ;; This function uses a non-reentrant model
 19587 ;;
 19588                           
 19589                           	psect	text95
 19590  005F84                     __ptext95:
 19591                           	opt callstack 0
 19592  005F84                     _TMR1_StartTimer:
 19593                           	opt callstack 20
 19594                           
 19595                           ;mcc_generated_files/tmr1.c: 97:     T1CONbits.TMR1ON = 1;
 19596                           
 19597                           ;incstack = 0
 19598  005F84  80CD               	bsf	4045,0,c	;volatile
 19599  005F86  0012               	return		;funcret
 19600  005F88                     __end_of_TMR1_StartTimer:
 19601                           	opt callstack 0
 19602                           
 19603 ;; *************** function _TMR0_StartTimer *****************
 19604 ;; Defined at:
 19605 ;;		line 101 in file "mcc_generated_files/tmr0.c"
 19606 ;; Parameters:    Size  Location     Type
 19607 ;;		None
 19608 ;; Auto vars:     Size  Location     Type
 19609 ;;		None
 19610 ;; Return value:  Size  Location     Type
 19611 ;;                  1    wreg      void 
 19612 ;; Registers used:
 19613 ;;		None
 19614 ;; Tracked objects:
 19615 ;;		On entry : 0/0
 19616 ;;		On exit  : 0/0
 19617 ;;		Unchanged: 0/0
 19618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19623 ;;Total ram usage:        0 bytes
 19624 ;; Hardware stack levels used:    1
 19625 ;; Hardware stack levels required when called:    8
 19626 ;; This function calls:
 19627 ;;		Nothing
 19628 ;; This function is called by:
 19629 ;;		_APP_Initialize
 19630 ;; This function uses a non-reentrant model
 19631 ;;
 19632                           
 19633                           	psect	text96
 19634  005F88                     __ptext96:
 19635                           	opt callstack 0
 19636  005F88                     _TMR0_StartTimer:
 19637                           	opt callstack 20
 19638                           
 19639                           ;mcc_generated_files/tmr0.c: 104:  T0CONbits.TMR0ON = 1;
 19640                           
 19641                           ;incstack = 0
 19642  005F88  8ED5               	bsf	4053,7,c	;volatile
 19643  005F8A  0012               	return		;funcret
 19644  005F8C                     __end_of_TMR0_StartTimer:
 19645                           	opt callstack 0
 19646                           
 19647 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
 19648 ;; Defined at:
 19649 ;;		line 143 in file "mcc_generated_files/interrupt_manager.c"
 19650 ;; Parameters:    Size  Location     Type
 19651 ;;		None
 19652 ;; Auto vars:     Size  Location     Type
 19653 ;;		None
 19654 ;; Return value:  Size  Location     Type
 19655 ;;                  1    wreg      void 
 19656 ;; Registers used:
 19657 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 19658 ;; Tracked objects:
 19659 ;;		On entry : 0/0
 19660 ;;		On exit  : 0/0
 19661 ;;		Unchanged: 0/0
 19662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19665 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19666 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19667 ;;Total ram usage:        9 bytes
 19668 ;; Hardware stack levels used:    1
 19669 ;; Hardware stack levels required when called:    7
 19670 ;; This function calls:
 19671 ;;		_TMR1_ISR
 19672 ;; This function is called by:
 19673 ;;		Interrupt level 1
 19674 ;; This function uses a non-reentrant model
 19675 ;;
 19676                           
 19677                           	psect	intcodelo
 19678  000018                     __pintcodelo:
 19679                           	opt callstack 0
 19680  000018                     _INTERRUPT_InterruptManagerLow:
 19681                           	opt callstack 12
 19682                           
 19683                           ;incstack = 0
 19684  000018  804D               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 19685  00001A  CFD8 F00A          	movff	status,??_INTERRUPT_InterruptManagerLow
 19686  00001E  CFE8 F00B          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
 19687  000022  CFE0 F00C          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
 19688  000026  CFFA F00D          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
 19689  00002A  CFFB F00E          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
 19690  00002E  CFD9 F00F          	movff	fsr2l,??_INTERRUPT_InterruptManagerLow+5
 19691  000032  CFDA F010          	movff	fsr2h,??_INTERRUPT_InterruptManagerLow+6
 19692  000036  CFF3 F011          	movff	prodl,??_INTERRUPT_InterruptManagerLow+7
 19693  00003A  CFF4 F012          	movff	prodh,??_INTERRUPT_InterruptManagerLow+8
 19694                           
 19695                           ;mcc_generated_files/interrupt_manager.c: 146:     if(PIE1bits.TMR1IE == 1 && PIR1bits.T
      +                          MR1IF == 1)
 19696  00003E  B09D               	btfsc	3997,0,c	;volatile
 19697  000040  A09E               	btfss	3998,0,c	;volatile
 19698  000042  D002               	goto	i1l271
 19699                           
 19700                           ;mcc_generated_files/interrupt_manager.c: 147:     {;mcc_generated_files/interrupt_manag
      +                          er.c: 148:         TMR1_ISR();
 19701  000044  EC37  F02D         	call	_TMR1_ISR	;wreg free
 19702  000048                     i1l271:
 19703  000048  C012  FFF4         	movff	??_INTERRUPT_InterruptManagerLow+8,prodh
 19704  00004C  C011  FFF3         	movff	??_INTERRUPT_InterruptManagerLow+7,prodl
 19705  000050  C010  FFDA         	movff	??_INTERRUPT_InterruptManagerLow+6,fsr2h
 19706  000054  C00F  FFD9         	movff	??_INTERRUPT_InterruptManagerLow+5,fsr2l
 19707  000058  C00E  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
 19708  00005C  C00D  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
 19709  000060  C00C  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
 19710  000064  C00B  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
 19711  000068  C00A  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
 19712  00006C  904D               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 19713  00006E  0010               	retfie	
 19714  000070                     __end_of_INTERRUPT_InterruptManagerLow:
 19715                           	opt callstack 0
 19716                           
 19717 ;; *************** function _TMR1_ISR *****************
 19718 ;; Defined at:
 19719 ;;		line 158 in file "mcc_generated_files/tmr1.c"
 19720 ;; Parameters:    Size  Location     Type
 19721 ;;		None
 19722 ;; Auto vars:     Size  Location     Type
 19723 ;;		None
 19724 ;; Return value:  Size  Location     Type
 19725 ;;                  1    wreg      void 
 19726 ;; Registers used:
 19727 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 19728 ;; Tracked objects:
 19729 ;;		On entry : 0/0
 19730 ;;		On exit  : 0/0
 19731 ;;		Unchanged: 0/0
 19732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19737 ;;Total ram usage:        0 bytes
 19738 ;; Hardware stack levels used:    1
 19739 ;; Hardware stack levels required when called:    6
 19740 ;; This function calls:
 19741 ;;		Absolute function
 19742 ;;		_TMR1_DefaultInterruptHandler
 19743 ;;		_TMR1_WriteTimer
 19744 ;; This function is called by:
 19745 ;;		_INTERRUPT_InterruptManagerLow
 19746 ;; This function uses a non-reentrant model
 19747 ;;
 19748                           
 19749                           	psect	text98
 19750  005A6E                     __ptext98:
 19751                           	opt callstack 0
 19752  005A6E                     _TMR1_ISR:
 19753                           	opt callstack 12
 19754                           
 19755                           ;mcc_generated_files/tmr1.c: 162:     PIR1bits.TMR1IF = 0;
 19756                           
 19757                           ;incstack = 0
 19758  005A6E  909E               	bcf	3998,0,c	;volatile
 19759                           
 19760                           ;mcc_generated_files/tmr1.c: 163:     TMR1_WriteTimer(timer1ReloadVal);
 19761  005A70  C1E7  F007         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
 19762  005A74  C1E8  F008         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
 19763  005A78  EC02  F02F         	call	_TMR1_WriteTimer	;wreg free
 19764                           
 19765                           ;mcc_generated_files/tmr1.c: 165:     if(TMR1_InterruptHandler)
 19766  005A7C  0101               	movlb	1	; () banked
 19767  005A7E  51E5               	movf	_TMR1_InterruptHandler& (0+255),w,b
 19768  005A80  11E6               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 19769  005A82  B4D8               	btfsc	status,2,c
 19770  005A84  0012               	return	
 19771                           
 19772                           ; BSR set to: 1
 19773                           ;mcc_generated_files/tmr1.c: 166:     {;mcc_generated_files/tmr1.c: 167:         TMR1_In
      +                          terruptHandler();
 19774  005A86  D801               	call	i1u1016_28
 19775  005A88  0012               	return	
 19776  005A8A                     i1u1016_28:
 19777  005A8A  0005               	push	
 19778  005A8C  6EFA               	movwf	pclath,c
 19779  005A8E  51E5               	movf	_TMR1_InterruptHandler& (0+255),w,b
 19780  005A90  6EFD               	movwf	tosl,c
 19781  005A92  51E6               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 19782  005A94  6EFE               	movwf	tosh,c
 19783  005A96  50F8               	movf	tblptru,w,c
 19784  005A98  6EFF               	movwf	tosu,c
 19785  005A9A  50FA               	movf	pclath,w,c
 19786  005A9C  0012               	return		;indir
 19787  005A9E                     __end_of_TMR1_ISR:
 19788                           	opt callstack 0
 19789                           
 19790 ;; *************** function _TMR1_WriteTimer *****************
 19791 ;; Defined at:
 19792 ;;		line 121 in file "mcc_generated_files/tmr1.c"
 19793 ;; Parameters:    Size  Location     Type
 19794 ;;  timerVal        2    6[COMRAM] unsigned short 
 19795 ;; Auto vars:     Size  Location     Type
 19796 ;;		None
 19797 ;; Return value:  Size  Location     Type
 19798 ;;                  1    wreg      void 
 19799 ;; Registers used:
 19800 ;;		wreg, status,2
 19801 ;; Tracked objects:
 19802 ;;		On entry : 0/0
 19803 ;;		On exit  : 0/0
 19804 ;;		Unchanged: 0/0
 19805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19806 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19809 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19810 ;;Total ram usage:        2 bytes
 19811 ;; Hardware stack levels used:    1
 19812 ;; Hardware stack levels required when called:    4
 19813 ;; This function calls:
 19814 ;;		Nothing
 19815 ;; This function is called by:
 19816 ;;		_TMR1_ISR
 19817 ;;		_TMR1_Reload
 19818 ;; This function uses a non-reentrant model
 19819 ;;
 19820                           
 19821                           	psect	text99
 19822  005E04                     __ptext99:
 19823                           	opt callstack 0
 19824  005E04                     _TMR1_WriteTimer:
 19825                           	opt callstack 13
 19826                           
 19827                           ;mcc_generated_files/tmr1.c: 121: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 122: {;mcc_generated_files/tmr1.c: 123:     if (T1CONbits.nT1SYNC == 1)
 19828                           
 19829                           ;incstack = 0
 19830  005E04  A4CD               	btfss	4045,2,c	;volatile
 19831  005E06  D007               	goto	i1l8157
 19832                           
 19833                           ;mcc_generated_files/tmr1.c: 124:     {;mcc_generated_files/tmr1.c: 126:         T1CONbi
      +                          ts.TMR1ON = 0;
 19834  005E08  90CD               	bcf	4045,0,c	;volatile
 19835                           
 19836                           ;mcc_generated_files/tmr1.c: 129:         TMR1H = (timerVal >> 8);
 19837  005E0A  5008               	movf	TMR1_WriteTimer@timerVal+1,w,c
 19838  005E0C  6ECF               	movwf	4047,c	;volatile
 19839                           
 19840                           ;mcc_generated_files/tmr1.c: 130:         TMR1L = timerVal;
 19841  005E0E  C007  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 19842                           
 19843                           ;mcc_generated_files/tmr1.c: 133:         T1CONbits.TMR1ON =1;
 19844  005E12  80CD               	bsf	4045,0,c	;volatile
 19845                           
 19846                           ;mcc_generated_files/tmr1.c: 134:     }
 19847  005E14  0012               	return	
 19848  005E16                     i1l8157:
 19849                           
 19850                           ;mcc_generated_files/tmr1.c: 136:     {;mcc_generated_files/tmr1.c: 138:         TMR1H =
      +                           (timerVal >> 8);
 19851  005E16  5008               	movf	TMR1_WriteTimer@timerVal+1,w,c
 19852  005E18  6ECF               	movwf	4047,c	;volatile
 19853                           
 19854                           ;mcc_generated_files/tmr1.c: 139:         TMR1L = timerVal;
 19855  005E1A  C007  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 19856  005E1E  0012               	return		;funcret
 19857  005E20                     __end_of_TMR1_WriteTimer:
 19858                           	opt callstack 0
 19859                           
 19860 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 19861 ;; Defined at:
 19862 ;;		line 176 in file "mcc_generated_files/tmr1.c"
 19863 ;; Parameters:    Size  Location     Type
 19864 ;;		None
 19865 ;; Auto vars:     Size  Location     Type
 19866 ;;		None
 19867 ;; Return value:  Size  Location     Type
 19868 ;;                  1    wreg      void 
 19869 ;; Registers used:
 19870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19871 ;; Tracked objects:
 19872 ;;		On entry : 0/0
 19873 ;;		On exit  : 0/0
 19874 ;;		Unchanged: 0/0
 19875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19880 ;;Total ram usage:        0 bytes
 19881 ;; Hardware stack levels used:    1
 19882 ;; Hardware stack levels required when called:    5
 19883 ;; This function calls:
 19884 ;;		__T1Interrupt
 19885 ;; This function is called by:
 19886 ;;		_TMR1_Initialize
 19887 ;;		_TMR1_ISR
 19888 ;; This function uses a non-reentrant model
 19889 ;;
 19890                           
 19891                           	psect	text100
 19892  005F6E                     __ptext100:
 19893                           	opt callstack 0
 19894  005F6E                     _TMR1_DefaultInterruptHandler:
 19895                           	opt callstack 12
 19896                           
 19897                           ;mcc_generated_files/tmr1.c: 179:     _T1Interrupt();
 19898                           
 19899                           ;incstack = 0
 19900  005F6E  EC86  F029         	call	__T1Interrupt	;wreg free
 19901  005F72  0012               	return		;funcret
 19902  005F74                     __end_of_TMR1_DefaultInterruptHandler:
 19903                           	opt callstack 0
 19904                           
 19905 ;; *************** function __T1Interrupt *****************
 19906 ;; Defined at:
 19907 ;;		line 45 in file "timers.c"
 19908 ;; Parameters:    Size  Location     Type
 19909 ;;		None
 19910 ;; Auto vars:     Size  Location     Type
 19911 ;;  i               1    8[COMRAM] unsigned char 
 19912 ;; Return value:  Size  Location     Type
 19913 ;;                  1    wreg      void 
 19914 ;; Registers used:
 19915 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19916 ;; Tracked objects:
 19917 ;;		On entry : 0/0
 19918 ;;		On exit  : 0/0
 19919 ;;		Unchanged: 0/0
 19920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19922 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19923 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19924 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19925 ;;Total ram usage:        3 bytes
 19926 ;; Hardware stack levels used:    1
 19927 ;; Hardware stack levels required when called:    4
 19928 ;; This function calls:
 19929 ;;		Nothing
 19930 ;; This function is called by:
 19931 ;;		_TMR1_DefaultInterruptHandler
 19932 ;; This function uses a non-reentrant model
 19933 ;;
 19934                           
 19935                           	psect	text101
 19936  00530C                     __ptext101:
 19937                           	opt callstack 0
 19938  00530C                     __T1Interrupt:
 19939                           	opt callstack 12
 19940                           
 19941                           ;timers.c: 47:  uint8_t i;;timers.c: 50:  for (i = 0; i < TMR_COUNT; i++) {
 19942                           
 19943                           ;incstack = 0
 19944  00530C  0E00               	movlw	0
 19945  00530E  6E09               	movwf	__T1Interrupt@i,c
 19946  005310                     i1l7831:
 19947                           
 19948                           ;timers.c: 51:   if (tickCount[i] != 0) {
 19949  005310  5009               	movf	__T1Interrupt@i,w,c
 19950  005312  0D02               	mullw	2
 19951  005314  0E00               	movlw	low _tickCount
 19952  005316  24F3               	addwf	prodl,w,c
 19953  005318  6ED9               	movwf	fsr2l,c
 19954  00531A  0E01               	movlw	high _tickCount
 19955  00531C  20F4               	addwfc	prodh,w,c
 19956  00531E  6EDA               	movwf	fsr2h,c
 19957  005320  50DE               	movf	postinc2,w,c
 19958  005322  10DE               	iorwf	postinc2,w,c
 19959  005324  B4D8               	btfsc	status,2,c
 19960  005326  D00B               	goto	i1l7835
 19961                           
 19962                           ;timers.c: 52:    tickCount[i]--;
 19963  005328  5009               	movf	__T1Interrupt@i,w,c
 19964  00532A  0D02               	mullw	2
 19965  00532C  0E00               	movlw	low _tickCount
 19966  00532E  24F3               	addwf	prodl,w,c
 19967  005330  6ED9               	movwf	fsr2l,c
 19968  005332  0E01               	movlw	high _tickCount
 19969  005334  20F4               	addwfc	prodh,w,c
 19970  005336  6EDA               	movwf	fsr2h,c
 19971  005338  06DE               	decf	postinc2,f,c
 19972  00533A  0E00               	movlw	0
 19973  00533C  5ADD               	subwfb	postdec2,f,c
 19974  00533E                     i1l7835:
 19975                           
 19976                           ;timers.c: 54:  }
 19977  00533E  2A09               	incf	__T1Interrupt@i,f,c
 19978  005340  0E06               	movlw	6
 19979  005342  6409               	cpfsgt	__T1Interrupt@i,c
 19980  005344  D7E5               	goto	i1l7831
 19981  005346  A289               	btfss	3977,1,c	;volatile
 19982  005348  D002               	goto	i1u945_20
 19983  00534A  0E01               	movlw	1
 19984  00534C  D001               	goto	i1u945_26
 19985  00534E                     i1u945_20:
 19986  00534E  0E00               	movlw	0
 19987  005350                     i1u945_26:
 19988  005350  0AFF               	xorlw	255
 19989  005352  6E07               	movwf	??__T1Interrupt& (0+255),c
 19990  005354  4607               	rlncf	??__T1Interrupt,f,c
 19991  005356  5089               	movf	3977,w,c	;volatile
 19992  005358  1807               	xorwf	??__T1Interrupt,w,c
 19993  00535A  0BFD               	andlw	-3
 19994  00535C  1807               	xorwf	??__T1Interrupt,w,c
 19995  00535E  6E89               	movwf	3977,c	;volatile
 19996  005360  0012               	return		;funcret
 19997  005362                     __end_of__T1Interrupt:
 19998                           	opt callstack 0
 19999                           
 20000 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
 20001 ;; Defined at:
 20002 ;;		line 94 in file "mcc_generated_files/interrupt_manager.c"
 20003 ;; Parameters:    Size  Location     Type
 20004 ;;		None
 20005 ;; Auto vars:     Size  Location     Type
 20006 ;;		None
 20007 ;; Return value:  Size  Location     Type
 20008 ;;                  1    wreg      void 
 20009 ;; Registers used:
 20010 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 20011 ;; Tracked objects:
 20012 ;;		On entry : 0/0
 20013 ;;		On exit  : 0/0
 20014 ;;		Unchanged: 0/0
 20015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20018 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20019 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20020 ;;Total ram usage:        4 bytes
 20021 ;; Hardware stack levels used:    1
 20022 ;; Hardware stack levels required when called:    3
 20023 ;; This function calls:
 20024 ;;		Absolute function
 20025 ;;		_EUSART1_Receive_ISR
 20026 ;;		_EUSART1_Transmit_ISR
 20027 ;;		_EUSART2_Receive_ISR
 20028 ;;		_EUSART2_Transmit_ISR
 20029 ;;		_INT0_ISR
 20030 ;;		_INT1_ISR
 20031 ;;		_INT2_ISR
 20032 ;;		_INT3_ISR
 20033 ;;		_TMR0_ISR
 20034 ;;		_TMR3_ISR
 20035 ;; This function is called by:
 20036 ;;		Interrupt level 2
 20037 ;; This function uses a non-reentrant model
 20038 ;;
 20039                           
 20040                           	psect	intcode
 20041  000008                     __pintcode:
 20042                           	opt callstack 0
 20043  000008                     _INTERRUPT_InterruptManagerHigh:
 20044                           	opt callstack 12
 20045                           
 20046                           ;incstack = 0
 20047  000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 20048  00000A  EFF8  F024         	goto	int_func
 20049                           
 20050                           	psect	intcode_body
 20051  0049F0                     __pintcode_body:
 20052                           	opt callstack 12
 20053  0049F0                     int_func:
 20054                           	opt callstack 12
 20055  0049F0  CFFA F003          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
 20056  0049F4  CFFB F004          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
 20057  0049F8  CFD9 F005          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+2
 20058  0049FC  CFDA F006          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+3
 20059                           
 20060                           ;mcc_generated_files/interrupt_manager.c: 97:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
 20061  004A00  BAF2               	btfsc	4082,5,c	;volatile
 20062  004A02  A4F2               	btfss	4082,2,c	;volatile
 20063  004A04  D003               	goto	i2l244
 20064                           
 20065                           ;mcc_generated_files/interrupt_manager.c: 98:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 99:         TMR0_ISR();
 20066  004A06  EC7C  F02D         	call	_TMR0_ISR	;wreg free
 20067                           
 20068                           ;mcc_generated_files/interrupt_manager.c: 100:     }
 20069  004A0A  D051               	goto	i2l259
 20070  004A0C                     i2l244:
 20071  004A0C  B8F2               	btfsc	4082,4,c	;volatile
 20072  004A0E  A2F2               	btfss	4082,1,c	;volatile
 20073  004A10  D003               	goto	i2l246
 20074                           
 20075                           ;mcc_generated_files/interrupt_manager.c: 102:     {;mcc_generated_files/interrupt_manag
      +                          er.c: 103:         INT0_ISR();
 20076  004A12  ECB3  F02F         	call	_INT0_ISR	;wreg free
 20077                           
 20078                           ;mcc_generated_files/interrupt_manager.c: 104:     }
 20079  004A16  D04B               	goto	i2l259
 20080  004A18                     i2l246:
 20081  004A18  BAF0               	btfsc	4080,5,c	;volatile
 20082  004A1A  A4F0               	btfss	4080,2,c	;volatile
 20083  004A1C  D003               	goto	i2l248
 20084                           
 20085                           ;mcc_generated_files/interrupt_manager.c: 106:     {;mcc_generated_files/interrupt_manag
      +                          er.c: 107:         INT3_ISR();
 20086  004A1E  EC9B  F02F         	call	_INT3_ISR	;wreg free
 20087                           
 20088                           ;mcc_generated_files/interrupt_manager.c: 108:     }
 20089  004A22  D045               	goto	i2l259
 20090  004A24                     i2l248:
 20091  004A24  B6F0               	btfsc	4080,3,c	;volatile
 20092  004A26  A0F0               	btfss	4080,0,c	;volatile
 20093  004A28  D003               	goto	i2l250
 20094                           
 20095                           ;mcc_generated_files/interrupt_manager.c: 110:     {;mcc_generated_files/interrupt_manag
      +                          er.c: 111:         INT1_ISR();
 20096  004A2A  ECAB  F02F         	call	_INT1_ISR	;wreg free
 20097                           
 20098                           ;mcc_generated_files/interrupt_manager.c: 112:     }
 20099  004A2E  D03F               	goto	i2l259
 20100  004A30                     i2l250:
 20101  004A30  B8F0               	btfsc	4080,4,c	;volatile
 20102  004A32  A2F0               	btfss	4080,1,c	;volatile
 20103  004A34  D003               	goto	i2l252
 20104                           
 20105                           ;mcc_generated_files/interrupt_manager.c: 114:     {;mcc_generated_files/interrupt_manag
      +                          er.c: 115:         INT2_ISR();
 20106  004A36  ECA3  F02F         	call	_INT2_ISR	;wreg free
 20107                           
 20108                           ;mcc_generated_files/interrupt_manager.c: 116:     }
 20109  004A3A  D039               	goto	i2l259
 20110  004A3C                     i2l252:
 20111  004A3C  B8A3               	btfsc	4003,4,c	;volatile
 20112  004A3E  A8A4               	btfss	4004,4,c	;volatile
 20113  004A40  D009               	goto	i2l254
 20114                           
 20115                           ;mcc_generated_files/interrupt_manager.c: 118:     {;mcc_generated_files/interrupt_manag
      +                          er.c: 119:         EUSART2_TxDefaultInterruptHandler();
 20116  004A42  D801               	call	i2u1063_48
 20117  004A44  D034               	goto	i2l259
 20118  004A46                     i2u1063_48:
 20119  004A46  0005               	push	
 20120  004A48  0101               	movlb	1	; () banked
 20121  004A4A  6EFA               	movwf	pclath,c
 20122  004A4C  51EF               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
 20123  004A4E  6EFD               	movwf	tosl,c
 20124  004A50  51F0               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
 20125  004A52  D023               	goto	L29
 20126  004A54                     i2l254:
 20127  004A54  BAA3               	btfsc	4003,5,c	;volatile
 20128  004A56  AAA4               	btfss	4004,5,c	;volatile
 20129  004A58  D009               	goto	i2l256
 20130                           
 20131                           ;mcc_generated_files/interrupt_manager.c: 122:     {;mcc_generated_files/interrupt_manag
      +                          er.c: 123:         EUSART2_RxDefaultInterruptHandler();
 20132  004A5A  D801               	call	i2u1066_48
 20133  004A5C  D028               	goto	i2l259
 20134  004A5E                     i2u1066_48:
 20135  004A5E  0005               	push	
 20136  004A60  0101               	movlb	1	; () banked
 20137  004A62  6EFA               	movwf	pclath,c
 20138  004A64  51ED               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
 20139  004A66  6EFD               	movwf	tosl,c
 20140  004A68  51EE               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
 20141  004A6A  D017               	goto	L29
 20142  004A6C                     i2l256:
 20143  004A6C  B89D               	btfsc	3997,4,c	;volatile
 20144  004A6E  A89E               	btfss	3998,4,c	;volatile
 20145  004A70  D009               	goto	i2l258
 20146                           
 20147                           ;mcc_generated_files/interrupt_manager.c: 126:     {;mcc_generated_files/interrupt_manag
      +                          er.c: 127:         EUSART1_TxDefaultInterruptHandler();
 20148  004A72  D801               	call	i2u1069_48
 20149  004A74  D01C               	goto	i2l259
 20150  004A76                     i2u1069_48:
 20151  004A76  0005               	push	
 20152  004A78  0101               	movlb	1	; () banked
 20153  004A7A  6EFA               	movwf	pclath,c
 20154  004A7C  51EB               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
 20155  004A7E  6EFD               	movwf	tosl,c
 20156  004A80  51EC               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
 20157  004A82  D00B               	goto	L29
 20158  004A84                     i2l258:
 20159  004A84  BA9D               	btfsc	3997,5,c	;volatile
 20160  004A86  AA9E               	btfss	3998,5,c	;volatile
 20161  004A88  D00D               	goto	i2l260
 20162                           
 20163                           ;mcc_generated_files/interrupt_manager.c: 130:     {;mcc_generated_files/interrupt_manag
      +                          er.c: 131:         EUSART1_RxDefaultInterruptHandler();
 20164  004A8A  D801               	call	i2u1072_48
 20165  004A8C  D010               	goto	i2l259
 20166  004A8E                     i2u1072_48:
 20167  004A8E  0005               	push	
 20168  004A90  0101               	movlb	1	; () banked
 20169  004A92  6EFA               	movwf	pclath,c
 20170  004A94  51E9               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
 20171  004A96  6EFD               	movwf	tosl,c
 20172  004A98  51EA               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
 20173  004A9A                     L29:
 20174  004A9A  6EFE               	movwf	tosh,c
 20175  004A9C  50F8               	movf	tblptru,w,c
 20176  004A9E  6EFF               	movwf	tosu,c
 20177  004AA0  50FA               	movf	pclath,w,c
 20178  004AA2  0012               	return		;indir
 20179  004AA4                     i2l260:
 20180  004AA4  B2A0               	btfsc	4000,1,c	;volatile
 20181  004AA6  A2A1               	btfss	4001,1,c	;volatile
 20182  004AA8  D002               	goto	i2l259
 20183                           
 20184                           ;mcc_generated_files/interrupt_manager.c: 134:     {;mcc_generated_files/interrupt_manag
      +                          er.c: 135:         TMR3_ISR();
 20185  004AAA  EC6B  F02B         	call	_TMR3_ISR	;wreg free
 20186  004AAE                     i2l259:
 20187  004AAE  C006  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr2h
 20188  004AB2  C005  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr2l
 20189  004AB6  C004  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
 20190  004ABA  C003  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
 20191  004ABE  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 20192  004AC0  0011               	retfie		f
 20193  004AC2                     __end_of_INTERRUPT_InterruptManagerHigh:
 20194                           	opt callstack 0
 20195                           
 20196 ;; *************** function _TMR3_ISR *****************
 20197 ;; Defined at:
 20198 ;;		line 155 in file "mcc_generated_files/tmr3.c"
 20199 ;; Parameters:    Size  Location     Type
 20200 ;;		None
 20201 ;; Auto vars:     Size  Location     Type
 20202 ;;		None
 20203 ;; Return value:  Size  Location     Type
 20204 ;;                  1    wreg      void 
 20205 ;; Registers used:
 20206 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 20207 ;; Tracked objects:
 20208 ;;		On entry : 0/0
 20209 ;;		On exit  : 0/0
 20210 ;;		Unchanged: 0/0
 20211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20216 ;;Total ram usage:        0 bytes
 20217 ;; Hardware stack levels used:    1
 20218 ;; Hardware stack levels required when called:    1
 20219 ;; This function calls:
 20220 ;;		Absolute function
 20221 ;;		_TMR3_DefaultInterruptHandler
 20222 ;;		_TMR3_WriteTimer
 20223 ;; This function is called by:
 20224 ;;		_INTERRUPT_InterruptManagerHigh
 20225 ;; This function uses a non-reentrant model
 20226 ;;
 20227                           
 20228                           	psect	text103
 20229  0056D6                     __ptext103:
 20230                           	opt callstack 0
 20231  0056D6                     _TMR3_ISR:
 20232                           	opt callstack 13
 20233                           
 20234                           ;mcc_generated_files/tmr3.c: 157:  static uint8_t chirp=0;;mcc_generated_files/tmr3.c: 1
      +                          59:  PIR2bits.TMR3IF = 0;
 20235                           
 20236                           ;incstack = 0
 20237  0056D6  92A1               	bcf	4001,1,c	;volatile
 20238                           
 20239                           ;mcc_generated_files/tmr3.c: 160:  TMR3_WriteTimer(timer3ReloadVal+chirp++);
 20240  0056D8  0100               	movlb	0	; () banked
 20241  0056DA  51C9               	movf	TMR3_ISR@chirp& (0+255),w,b
 20242  0056DC  0101               	movlb	1	; () banked
 20243  0056DE  25E3               	addwf	_timer3ReloadVal& (0+255),w,b	;volatile
 20244  0056E0  6E01               	movwf	TMR3_WriteTimer@timerVal,c
 20245  0056E2  0E00               	movlw	0
 20246  0056E4  21E4               	addwfc	(_timer3ReloadVal+1)& (0+255),w,b	;volatile
 20247  0056E6  6E02               	movwf	TMR3_WriteTimer@timerVal+1,c
 20248  0056E8  EC10  F02F         	call	_TMR3_WriteTimer	;wreg free
 20249  0056EC  0100               	movlb	0	; () banked
 20250  0056EE  2BC9               	incf	TMR3_ISR@chirp& (0+255),f,b
 20251                           
 20252                           ; BSR set to: 0
 20253                           ;mcc_generated_files/tmr3.c: 162:  if (TMR3_InterruptHandler) {
 20254  0056F0  0101               	movlb	1	; () banked
 20255  0056F2  51E1               	movf	_TMR3_InterruptHandler& (0+255),w,b
 20256  0056F4  11E2               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 20257  0056F6  B4D8               	btfsc	status,2,c
 20258  0056F8  0012               	return	
 20259                           
 20260                           ; BSR set to: 1
 20261                           ;mcc_generated_files/tmr3.c: 163:   TMR3_InterruptHandler();
 20262  0056FA  D801               	call	i2u1014_48
 20263  0056FC  0012               	return	
 20264  0056FE                     i2u1014_48:
 20265  0056FE  0005               	push	
 20266  005700  6EFA               	movwf	pclath,c
 20267  005702  51E1               	movf	_TMR3_InterruptHandler& (0+255),w,b
 20268  005704  6EFD               	movwf	tosl,c
 20269  005706  51E2               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 20270  005708  6EFE               	movwf	tosh,c
 20271  00570A  50F8               	movf	tblptru,w,c
 20272  00570C  6EFF               	movwf	tosu,c
 20273  00570E  50FA               	movf	pclath,w,c
 20274  005710  0012               	return		;indir
 20275  005712                     __end_of_TMR3_ISR:
 20276                           	opt callstack 0
 20277                           
 20278 ;; *************** function _TMR3_WriteTimer *****************
 20279 ;; Defined at:
 20280 ;;		line 121 in file "mcc_generated_files/tmr3.c"
 20281 ;; Parameters:    Size  Location     Type
 20282 ;;  timerVal        2    0[COMRAM] unsigned short 
 20283 ;; Auto vars:     Size  Location     Type
 20284 ;;		None
 20285 ;; Return value:  Size  Location     Type
 20286 ;;                  1    wreg      void 
 20287 ;; Registers used:
 20288 ;;		wreg, status,2
 20289 ;; Tracked objects:
 20290 ;;		On entry : 0/0
 20291 ;;		On exit  : 0/0
 20292 ;;		Unchanged: 0/0
 20293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20294 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20297 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20298 ;;Total ram usage:        2 bytes
 20299 ;; Hardware stack levels used:    1
 20300 ;; This function calls:
 20301 ;;		Nothing
 20302 ;; This function is called by:
 20303 ;;		_TMR3_ISR
 20304 ;;		_TMR3_Reload
 20305 ;; This function uses a non-reentrant model
 20306 ;;
 20307                           
 20308                           	psect	text104
 20309  005E20                     __ptext104:
 20310                           	opt callstack 0
 20311  005E20                     _TMR3_WriteTimer:
 20312                           	opt callstack 13
 20313                           
 20314                           ;mcc_generated_files/tmr3.c: 121: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 122: {;mcc_generated_files/tmr3.c: 123:  if (T3CONbits.nT3SYNC == 1) {
 20315                           
 20316                           ;incstack = 0
 20317  005E20  A4B1               	btfss	4017,2,c	;volatile
 20318  005E22  D007               	goto	i2l8177
 20319                           
 20320                           ;mcc_generated_files/tmr3.c: 125:   T3CONbits.TMR3ON = 0;
 20321  005E24  90B1               	bcf	4017,0,c	;volatile
 20322                           
 20323                           ;mcc_generated_files/tmr3.c: 128:   TMR3H = (timerVal >> 8);
 20324  005E26  5002               	movf	TMR3_WriteTimer@timerVal+1,w,c
 20325  005E28  6EB3               	movwf	4019,c	;volatile
 20326                           
 20327                           ;mcc_generated_files/tmr3.c: 129:   TMR3L = timerVal;
 20328  005E2A  C001  FFB2         	movff	TMR3_WriteTimer@timerVal,4018	;volatile
 20329                           
 20330                           ;mcc_generated_files/tmr3.c: 132:   T3CONbits.TMR3ON = 1;
 20331  005E2E  80B1               	bsf	4017,0,c	;volatile
 20332                           
 20333                           ;mcc_generated_files/tmr3.c: 133:  } else {
 20334  005E30  0012               	return	
 20335  005E32                     i2l8177:
 20336                           
 20337                           ;mcc_generated_files/tmr3.c: 135:   TMR3H = (timerVal >> 8);
 20338  005E32  5002               	movf	TMR3_WriteTimer@timerVal+1,w,c
 20339  005E34  6EB3               	movwf	4019,c	;volatile
 20340                           
 20341                           ;mcc_generated_files/tmr3.c: 136:   TMR3L = timerVal;
 20342  005E36  C001  FFB2         	movff	TMR3_WriteTimer@timerVal,4018	;volatile
 20343  005E3A  0012               	return		;funcret
 20344  005E3C                     __end_of_TMR3_WriteTimer:
 20345                           	opt callstack 0
 20346                           
 20347 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 20348 ;; Defined at:
 20349 ;;		line 172 in file "mcc_generated_files/tmr3.c"
 20350 ;; Parameters:    Size  Location     Type
 20351 ;;		None
 20352 ;; Auto vars:     Size  Location     Type
 20353 ;;		None
 20354 ;; Return value:  Size  Location     Type
 20355 ;;                  1    wreg      void 
 20356 ;; Registers used:
 20357 ;;		wreg, status,2, status,0
 20358 ;; Tracked objects:
 20359 ;;		On entry : 0/0
 20360 ;;		On exit  : 0/0
 20361 ;;		Unchanged: 0/0
 20362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20365 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20366 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20367 ;;Total ram usage:        1 bytes
 20368 ;; Hardware stack levels used:    1
 20369 ;; This function calls:
 20370 ;;		Nothing
 20371 ;; This function is called by:
 20372 ;;		_TMR3_Initialize
 20373 ;;		_TMR3_ISR
 20374 ;; This function uses a non-reentrant model
 20375 ;;
 20376                           
 20377                           	psect	text105
 20378  005DCA                     __ptext105:
 20379                           	opt callstack 0
 20380  005DCA                     _TMR3_DefaultInterruptHandler:
 20381                           	opt callstack 13
 20382                           
 20383                           ;incstack = 0
 20384                           ;mcc_generated_files/tmr3.c: 176:  do { LATAbits.LATA5 = ~LATAbits.LATA5; } while(0);
 20385  005DCA  AA89               	btfss	3977,5,c	;volatile
 20386  005DCC  D002               	goto	i2u980_40
 20387  005DCE  0E01               	movlw	1
 20388  005DD0  D001               	goto	i2u980_46
 20389  005DD2                     i2u980_40:
 20390  005DD2  0E00               	movlw	0
 20391  005DD4                     i2u980_46:
 20392  005DD4  0AFF               	xorlw	255
 20393  005DD6  6E01               	movwf	??_TMR3_DefaultInterruptHandler& (0+255),c
 20394  005DD8  3A01               	swapf	??_TMR3_DefaultInterruptHandler,f,c
 20395  005DDA  4601               	rlncf	??_TMR3_DefaultInterruptHandler,f,c
 20396  005DDC  5089               	movf	3977,w,c	;volatile
 20397  005DDE  1801               	xorwf	??_TMR3_DefaultInterruptHandler,w,c
 20398  005DE0  0BDF               	andlw	-33
 20399  005DE2  1801               	xorwf	??_TMR3_DefaultInterruptHandler,w,c
 20400  005DE4  6E89               	movwf	3977,c	;volatile
 20401  005DE6  0012               	return		;funcret
 20402  005DE8                     __end_of_TMR3_DefaultInterruptHandler:
 20403                           	opt callstack 0
 20404                           
 20405 ;; *************** function _TMR0_ISR *****************
 20406 ;; Defined at:
 20407 ;;		line 140 in file "mcc_generated_files/tmr0.c"
 20408 ;; Parameters:    Size  Location     Type
 20409 ;;		None
 20410 ;; Auto vars:     Size  Location     Type
 20411 ;;		None
 20412 ;; Return value:  Size  Location     Type
 20413 ;;                  1    wreg      void 
 20414 ;; Registers used:
 20415 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 20416 ;; Tracked objects:
 20417 ;;		On entry : 0/0
 20418 ;;		On exit  : 0/0
 20419 ;;		Unchanged: 0/0
 20420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20425 ;;Total ram usage:        0 bytes
 20426 ;; Hardware stack levels used:    1
 20427 ;; Hardware stack levels required when called:    1
 20428 ;; This function calls:
 20429 ;;		Absolute function
 20430 ;;		_TMR0_DefaultInterruptHandler
 20431 ;; This function is called by:
 20432 ;;		_INTERRUPT_InterruptManagerHigh
 20433 ;; This function uses a non-reentrant model
 20434 ;;
 20435                           
 20436                           	psect	text106
 20437  005AF8                     __ptext106:
 20438                           	opt callstack 0
 20439  005AF8                     _TMR0_ISR:
 20440                           	opt callstack 13
 20441                           
 20442                           ;mcc_generated_files/tmr0.c: 144:  INTCONbits.TMR0IF = 0;
 20443                           
 20444                           ;incstack = 0
 20445  005AF8  94F2               	bcf	4082,2,c	;volatile
 20446                           
 20447                           ;mcc_generated_files/tmr0.c: 148:  TMR0H = timer0ReloadVal >> 8;
 20448  005AFA  504C               	movf	_timer0ReloadVal+1,w,c	;volatile
 20449  005AFC  6ED7               	movwf	4055,c	;volatile
 20450                           
 20451                           ;mcc_generated_files/tmr0.c: 149:  TMR0L = (uint8_t) timer0ReloadVal;
 20452  005AFE  C04B  FFD6         	movff	_timer0ReloadVal,4054	;volatile
 20453                           
 20454                           ;mcc_generated_files/tmr0.c: 151:  if (TMR0_InterruptHandler) {
 20455  005B02  0101               	movlb	1	; () banked
 20456  005B04  51F1               	movf	_TMR0_InterruptHandler& (0+255),w,b
 20457  005B06  11F2               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 20458  005B08  B4D8               	btfsc	status,2,c
 20459  005B0A  0012               	return	
 20460                           
 20461                           ; BSR set to: 1
 20462                           ;mcc_generated_files/tmr0.c: 152:   TMR0_InterruptHandler();
 20463  005B0C  D801               	call	i2u1008_48
 20464  005B0E  0012               	return	
 20465  005B10                     i2u1008_48:
 20466  005B10  0005               	push	
 20467  005B12  6EFA               	movwf	pclath,c
 20468  005B14  51F1               	movf	_TMR0_InterruptHandler& (0+255),w,b
 20469  005B16  6EFD               	movwf	tosl,c
 20470  005B18  51F2               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 20471  005B1A  6EFE               	movwf	tosh,c
 20472  005B1C  50F8               	movf	tblptru,w,c
 20473  005B1E  6EFF               	movwf	tosu,c
 20474  005B20  50FA               	movf	pclath,w,c
 20475  005B22  0012               	return		;indir
 20476  005B24                     __end_of_TMR0_ISR:
 20477                           	opt callstack 0
 20478                           
 20479 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 20480 ;; Defined at:
 20481 ;;		line 164 in file "mcc_generated_files/tmr0.c"
 20482 ;; Parameters:    Size  Location     Type
 20483 ;;		None
 20484 ;; Auto vars:     Size  Location     Type
 20485 ;;		None
 20486 ;; Return value:  Size  Location     Type
 20487 ;;                  1    wreg      void 
 20488 ;; Registers used:
 20489 ;;		wreg, status,2
 20490 ;; Tracked objects:
 20491 ;;		On entry : 0/0
 20492 ;;		On exit  : 0/0
 20493 ;;		Unchanged: 0/0
 20494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20499 ;;Total ram usage:        0 bytes
 20500 ;; Hardware stack levels used:    1
 20501 ;; This function calls:
 20502 ;;		Nothing
 20503 ;; This function is called by:
 20504 ;;		_TMR0_Initialize
 20505 ;;		_TMR0_ISR
 20506 ;; This function uses a non-reentrant model
 20507 ;;
 20508                           
 20509                           	psect	text107
 20510  005712                     __ptext107:
 20511                           	opt callstack 0
 20512  005712                     _TMR0_DefaultInterruptHandler:
 20513                           	opt callstack 13
 20514                           
 20515                           ;mcc_generated_files/tmr0.c: 169:  if (appData.sw1Changed) {
 20516                           
 20517                           ;incstack = 0
 20518  005712  0101               	movlb	1	; () banked
 20519  005714  51D5               	movf	(_appData+72)& (0+255),w,b	;volatile
 20520  005716  B4D8               	btfsc	status,2,c
 20521  005718  D004               	goto	i2l84
 20522                           
 20523                           ; BSR set to: 1
 20524                           ;mcc_generated_files/tmr0.c: 170:   if (!(--appData.sw1Changed))
 20525  00571A  2FD5               	decfsz	(_appData+72)& (0+255),f,b	;volatile
 20526  00571C  D002               	goto	i2l84
 20527                           
 20528                           ; BSR set to: 1
 20529                           ;mcc_generated_files/tmr0.c: 171:    appData.sw1 = 1;
 20530  00571E  0E01               	movlw	1
 20531  005720  6FD1               	movwf	(_appData+68)& (0+255),b	;volatile
 20532  005722                     i2l84:
 20533                           
 20534                           ; BSR set to: 1
 20535                           ;mcc_generated_files/tmr0.c: 174:  if (appData.sw2Changed) {
 20536  005722  51D6               	movf	(_appData+73)& (0+255),w,b	;volatile
 20537  005724  B4D8               	btfsc	status,2,c
 20538  005726  D004               	goto	i2l86
 20539                           
 20540                           ; BSR set to: 1
 20541                           ;mcc_generated_files/tmr0.c: 175:   if (!(--appData.sw2Changed))
 20542  005728  2FD6               	decfsz	(_appData+73)& (0+255),f,b	;volatile
 20543  00572A  D002               	goto	i2l86
 20544                           
 20545                           ; BSR set to: 1
 20546                           ;mcc_generated_files/tmr0.c: 176:    appData.sw2 = 1;
 20547  00572C  0E01               	movlw	1
 20548  00572E  6FD2               	movwf	(_appData+69)& (0+255),b	;volatile
 20549  005730                     i2l86:
 20550                           
 20551                           ; BSR set to: 1
 20552                           ;mcc_generated_files/tmr0.c: 179:  if (appData.sw3Changed) {
 20553  005730  51D7               	movf	(_appData+74)& (0+255),w,b	;volatile
 20554  005732  B4D8               	btfsc	status,2,c
 20555  005734  D004               	goto	i2l88
 20556                           
 20557                           ; BSR set to: 1
 20558                           ;mcc_generated_files/tmr0.c: 180:   if (!(--appData.sw3Changed))
 20559  005736  2FD7               	decfsz	(_appData+74)& (0+255),f,b	;volatile
 20560  005738  D002               	goto	i2l88
 20561                           
 20562                           ; BSR set to: 1
 20563                           ;mcc_generated_files/tmr0.c: 181:    appData.sw3 = 1;
 20564  00573A  0E01               	movlw	1
 20565  00573C  6FD3               	movwf	(_appData+70)& (0+255),b	;volatile
 20566  00573E                     i2l88:
 20567                           
 20568                           ; BSR set to: 1
 20569                           ;mcc_generated_files/tmr0.c: 184:  if (appData.sw4Changed) {
 20570  00573E  51D8               	movf	(_appData+75)& (0+255),w,b	;volatile
 20571  005740  B4D8               	btfsc	status,2,c
 20572  005742  0012               	return	
 20573                           
 20574                           ; BSR set to: 1
 20575                           ;mcc_generated_files/tmr0.c: 185:   if (!(--appData.sw4Changed))
 20576  005744  2FD8               	decfsz	(_appData+75)& (0+255),f,b	;volatile
 20577  005746  0012               	return	
 20578                           
 20579                           ; BSR set to: 1
 20580                           ;mcc_generated_files/tmr0.c: 186:    appData.sw4 = 1;
 20581  005748  0E01               	movlw	1
 20582  00574A  6FD4               	movwf	(_appData+71)& (0+255),b	;volatile
 20583                           
 20584                           ; BSR set to: 1
 20585  00574C  0012               	return		;funcret
 20586  00574E                     __end_of_TMR0_DefaultInterruptHandler:
 20587                           	opt callstack 0
 20588                           
 20589 ;; *************** function _INT3_ISR *****************
 20590 ;; Defined at:
 20591 ;;		line 126 in file "mcc_generated_files/ext_int.c"
 20592 ;; Parameters:    Size  Location     Type
 20593 ;;		None
 20594 ;; Auto vars:     Size  Location     Type
 20595 ;;		None
 20596 ;; Return value:  Size  Location     Type
 20597 ;;                  1    wreg      void 
 20598 ;; Registers used:
 20599 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 20600 ;; Tracked objects:
 20601 ;;		On entry : 0/0
 20602 ;;		On exit  : 0/0
 20603 ;;		Unchanged: 0/0
 20604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20609 ;;Total ram usage:        0 bytes
 20610 ;; Hardware stack levels used:    1
 20611 ;; Hardware stack levels required when called:    2
 20612 ;; This function calls:
 20613 ;;		_INT3_CallBack
 20614 ;; This function is called by:
 20615 ;;		_INTERRUPT_InterruptManagerHigh
 20616 ;; This function uses a non-reentrant model
 20617 ;;
 20618                           
 20619                           	psect	text108
 20620  005F36                     __ptext108:
 20621                           	opt callstack 0
 20622  005F36                     _INT3_ISR:
 20623                           	opt callstack 12
 20624                           
 20625                           ;mcc_generated_files/ext_int.c: 128:  (INTCON3bits.INT3IF = 0);
 20626                           
 20627                           ; BSR set to: 1
 20628                           ;incstack = 0
 20629  005F36  94F0               	bcf	4080,2,c	;volatile
 20630                           
 20631                           ;mcc_generated_files/ext_int.c: 131:  INT3_CallBack();
 20632  005F38  ECA1  F02E         	call	_INT3_CallBack	;wreg free
 20633  005F3C  0012               	return		;funcret
 20634  005F3E                     __end_of_INT3_ISR:
 20635                           	opt callstack 0
 20636                           
 20637 ;; *************** function _INT3_CallBack *****************
 20638 ;; Defined at:
 20639 ;;		line 134 in file "mcc_generated_files/ext_int.c"
 20640 ;; Parameters:    Size  Location     Type
 20641 ;;		None
 20642 ;; Auto vars:     Size  Location     Type
 20643 ;;		None
 20644 ;; Return value:  Size  Location     Type
 20645 ;;                  1    wreg      void 
 20646 ;; Registers used:
 20647 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 20648 ;; Tracked objects:
 20649 ;;		On entry : 0/0
 20650 ;;		On exit  : 0/0
 20651 ;;		Unchanged: 0/0
 20652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20657 ;;Total ram usage:        0 bytes
 20658 ;; Hardware stack levels used:    1
 20659 ;; Hardware stack levels required when called:    1
 20660 ;; This function calls:
 20661 ;;		Absolute function
 20662 ;;		_INT3_DefaultInterruptHandler
 20663 ;; This function is called by:
 20664 ;;		_INT3_ISR
 20665 ;; This function uses a non-reentrant model
 20666 ;;
 20667                           
 20668                           	psect	text109
 20669  005D42                     __ptext109:
 20670                           	opt callstack 0
 20671  005D42                     _INT3_CallBack:
 20672                           	opt callstack 12
 20673                           
 20674                           ;mcc_generated_files/ext_int.c: 137:  if (INT3_InterruptHandler) {
 20675                           
 20676                           ;incstack = 0
 20677  005D42  0101               	movlb	1	; () banked
 20678  005D44  51D9               	movf	_INT3_InterruptHandler& (0+255),w,b
 20679  005D46  11DA               	iorwf	(_INT3_InterruptHandler+1)& (0+255),w,b
 20680  005D48  B4D8               	btfsc	status,2,c
 20681  005D4A  0012               	return	
 20682                           
 20683                           ; BSR set to: 1
 20684                           ;mcc_generated_files/ext_int.c: 138:   INT3_InterruptHandler();
 20685  005D4C  D801               	call	i2u988_48
 20686  005D4E  0012               	return	
 20687  005D50                     i2u988_48:
 20688  005D50  0005               	push	
 20689  005D52  6EFA               	movwf	pclath,c
 20690  005D54  51D9               	movf	_INT3_InterruptHandler& (0+255),w,b
 20691  005D56  6EFD               	movwf	tosl,c
 20692  005D58  51DA               	movf	(_INT3_InterruptHandler+1)& (0+255),w,b
 20693  005D5A  6EFE               	movwf	tosh,c
 20694  005D5C  50F8               	movf	tblptru,w,c
 20695  005D5E  6EFF               	movwf	tosu,c
 20696  005D60  50FA               	movf	pclath,w,c
 20697  005D62  0012               	return		;indir
 20698  005D64                     __end_of_INT3_CallBack:
 20699                           	opt callstack 0
 20700                           
 20701 ;; *************** function _INT3_DefaultInterruptHandler *****************
 20702 ;; Defined at:
 20703 ;;		line 147 in file "mcc_generated_files/ext_int.c"
 20704 ;; Parameters:    Size  Location     Type
 20705 ;;		None
 20706 ;; Auto vars:     Size  Location     Type
 20707 ;;		None
 20708 ;; Return value:  Size  Location     Type
 20709 ;;                  1    wreg      void 
 20710 ;; Registers used:
 20711 ;;		wreg, status,2
 20712 ;; Tracked objects:
 20713 ;;		On entry : 0/0
 20714 ;;		On exit  : 0/0
 20715 ;;		Unchanged: 0/0
 20716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20721 ;;Total ram usage:        0 bytes
 20722 ;; Hardware stack levels used:    1
 20723 ;; This function calls:
 20724 ;;		Nothing
 20725 ;; This function is called by:
 20726 ;;		_EXT_INT_Initialize
 20727 ;;		_INT3_CallBack
 20728 ;; This function uses a non-reentrant model
 20729 ;;
 20730                           
 20731                           	psect	text110
 20732  005F3E                     __ptext110:
 20733                           	opt callstack 0
 20734  005F3E                     _INT3_DefaultInterruptHandler:
 20735                           	opt callstack 12
 20736                           
 20737                           ;mcc_generated_files/ext_int.c: 151:  appData.sw4Changed = 2;
 20738                           
 20739                           ;incstack = 0
 20740  005F3E  0E02               	movlw	2
 20741  005F40  0101               	movlb	1	; () banked
 20742  005F42  6FD8               	movwf	(_appData+75)& (0+255),b	;volatile
 20743                           
 20744                           ; BSR set to: 1
 20745  005F44  0012               	return		;funcret
 20746  005F46                     __end_of_INT3_DefaultInterruptHandler:
 20747                           	opt callstack 0
 20748                           
 20749 ;; *************** function _INT2_ISR *****************
 20750 ;; Defined at:
 20751 ;;		line 98 in file "mcc_generated_files/ext_int.c"
 20752 ;; Parameters:    Size  Location     Type
 20753 ;;		None
 20754 ;; Auto vars:     Size  Location     Type
 20755 ;;		None
 20756 ;; Return value:  Size  Location     Type
 20757 ;;                  1    wreg      void 
 20758 ;; Registers used:
 20759 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 20760 ;; Tracked objects:
 20761 ;;		On entry : 0/0
 20762 ;;		On exit  : 0/0
 20763 ;;		Unchanged: 0/0
 20764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20769 ;;Total ram usage:        0 bytes
 20770 ;; Hardware stack levels used:    1
 20771 ;; Hardware stack levels required when called:    2
 20772 ;; This function calls:
 20773 ;;		_INT2_CallBack
 20774 ;; This function is called by:
 20775 ;;		_INTERRUPT_InterruptManagerHigh
 20776 ;; This function uses a non-reentrant model
 20777 ;;
 20778                           
 20779                           	psect	text111
 20780  005F46                     __ptext111:
 20781                           	opt callstack 0
 20782  005F46                     _INT2_ISR:
 20783                           	opt callstack 12
 20784                           
 20785                           ;mcc_generated_files/ext_int.c: 100:  (INTCON3bits.INT2IF = 0);
 20786                           
 20787                           ; BSR set to: 1
 20788                           ;incstack = 0
 20789  005F46  92F0               	bcf	4080,1,c	;volatile
 20790                           
 20791                           ;mcc_generated_files/ext_int.c: 103:  INT2_CallBack();
 20792  005F48  ECB2  F02E         	call	_INT2_CallBack	;wreg free
 20793  005F4C  0012               	return		;funcret
 20794  005F4E                     __end_of_INT2_ISR:
 20795                           	opt callstack 0
 20796                           
 20797 ;; *************** function _INT2_CallBack *****************
 20798 ;; Defined at:
 20799 ;;		line 106 in file "mcc_generated_files/ext_int.c"
 20800 ;; Parameters:    Size  Location     Type
 20801 ;;		None
 20802 ;; Auto vars:     Size  Location     Type
 20803 ;;		None
 20804 ;; Return value:  Size  Location     Type
 20805 ;;                  1    wreg      void 
 20806 ;; Registers used:
 20807 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 20808 ;; Tracked objects:
 20809 ;;		On entry : 0/0
 20810 ;;		On exit  : 0/0
 20811 ;;		Unchanged: 0/0
 20812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20817 ;;Total ram usage:        0 bytes
 20818 ;; Hardware stack levels used:    1
 20819 ;; Hardware stack levels required when called:    1
 20820 ;; This function calls:
 20821 ;;		Absolute function
 20822 ;;		_INT2_DefaultInterruptHandler
 20823 ;; This function is called by:
 20824 ;;		_INT2_ISR
 20825 ;; This function uses a non-reentrant model
 20826 ;;
 20827                           
 20828                           	psect	text112
 20829  005D64                     __ptext112:
 20830                           	opt callstack 0
 20831  005D64                     _INT2_CallBack:
 20832                           	opt callstack 12
 20833                           
 20834                           ;mcc_generated_files/ext_int.c: 109:  if (INT2_InterruptHandler) {
 20835                           
 20836                           ;incstack = 0
 20837  005D64  0101               	movlb	1	; () banked
 20838  005D66  51DB               	movf	_INT2_InterruptHandler& (0+255),w,b
 20839  005D68  11DC               	iorwf	(_INT2_InterruptHandler+1)& (0+255),w,b
 20840  005D6A  B4D8               	btfsc	status,2,c
 20841  005D6C  0012               	return	
 20842                           
 20843                           ; BSR set to: 1
 20844                           ;mcc_generated_files/ext_int.c: 110:   INT2_InterruptHandler();
 20845  005D6E  D801               	call	i2u986_48
 20846  005D70  0012               	return	
 20847  005D72                     i2u986_48:
 20848  005D72  0005               	push	
 20849  005D74  6EFA               	movwf	pclath,c
 20850  005D76  51DB               	movf	_INT2_InterruptHandler& (0+255),w,b
 20851  005D78  6EFD               	movwf	tosl,c
 20852  005D7A  51DC               	movf	(_INT2_InterruptHandler+1)& (0+255),w,b
 20853  005D7C  6EFE               	movwf	tosh,c
 20854  005D7E  50F8               	movf	tblptru,w,c
 20855  005D80  6EFF               	movwf	tosu,c
 20856  005D82  50FA               	movf	pclath,w,c
 20857  005D84  0012               	return		;indir
 20858  005D86                     __end_of_INT2_CallBack:
 20859                           	opt callstack 0
 20860                           
 20861 ;; *************** function _INT2_DefaultInterruptHandler *****************
 20862 ;; Defined at:
 20863 ;;		line 119 in file "mcc_generated_files/ext_int.c"
 20864 ;; Parameters:    Size  Location     Type
 20865 ;;		None
 20866 ;; Auto vars:     Size  Location     Type
 20867 ;;		None
 20868 ;; Return value:  Size  Location     Type
 20869 ;;                  1    wreg      void 
 20870 ;; Registers used:
 20871 ;;		wreg, status,2
 20872 ;; Tracked objects:
 20873 ;;		On entry : 0/0
 20874 ;;		On exit  : 0/0
 20875 ;;		Unchanged: 0/0
 20876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20881 ;;Total ram usage:        0 bytes
 20882 ;; Hardware stack levels used:    1
 20883 ;; This function calls:
 20884 ;;		Nothing
 20885 ;; This function is called by:
 20886 ;;		_EXT_INT_Initialize
 20887 ;;		_INT2_CallBack
 20888 ;; This function uses a non-reentrant model
 20889 ;;
 20890                           
 20891                           	psect	text113
 20892  005F4E                     __ptext113:
 20893                           	opt callstack 0
 20894  005F4E                     _INT2_DefaultInterruptHandler:
 20895                           	opt callstack 12
 20896                           
 20897                           ;mcc_generated_files/ext_int.c: 123:  appData.sw3Changed = 2;
 20898                           
 20899                           ;incstack = 0
 20900  005F4E  0E02               	movlw	2
 20901  005F50  0101               	movlb	1	; () banked
 20902  005F52  6FD7               	movwf	(_appData+74)& (0+255),b	;volatile
 20903                           
 20904                           ; BSR set to: 1
 20905  005F54  0012               	return		;funcret
 20906  005F56                     __end_of_INT2_DefaultInterruptHandler:
 20907                           	opt callstack 0
 20908                           
 20909 ;; *************** function _INT1_ISR *****************
 20910 ;; Defined at:
 20911 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 20912 ;; Parameters:    Size  Location     Type
 20913 ;;		None
 20914 ;; Auto vars:     Size  Location     Type
 20915 ;;		None
 20916 ;; Return value:  Size  Location     Type
 20917 ;;                  1    wreg      void 
 20918 ;; Registers used:
 20919 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 20920 ;; Tracked objects:
 20921 ;;		On entry : 0/0
 20922 ;;		On exit  : 0/0
 20923 ;;		Unchanged: 0/0
 20924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20929 ;;Total ram usage:        0 bytes
 20930 ;; Hardware stack levels used:    1
 20931 ;; Hardware stack levels required when called:    2
 20932 ;; This function calls:
 20933 ;;		_INT1_CallBack
 20934 ;; This function is called by:
 20935 ;;		_INTERRUPT_InterruptManagerHigh
 20936 ;; This function uses a non-reentrant model
 20937 ;;
 20938                           
 20939                           	psect	text114
 20940  005F56                     __ptext114:
 20941                           	opt callstack 0
 20942  005F56                     _INT1_ISR:
 20943                           	opt callstack 12
 20944                           
 20945                           ;mcc_generated_files/ext_int.c: 72:  (INTCON3bits.INT1IF = 0);
 20946                           
 20947                           ; BSR set to: 1
 20948                           ;incstack = 0
 20949  005F56  90F0               	bcf	4080,0,c	;volatile
 20950                           
 20951                           ;mcc_generated_files/ext_int.c: 75:  INT1_CallBack();
 20952  005F58  ECC3  F02E         	call	_INT1_CallBack	;wreg free
 20953  005F5C  0012               	return		;funcret
 20954  005F5E                     __end_of_INT1_ISR:
 20955                           	opt callstack 0
 20956                           
 20957 ;; *************** function _INT1_CallBack *****************
 20958 ;; Defined at:
 20959 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 20960 ;; Parameters:    Size  Location     Type
 20961 ;;		None
 20962 ;; Auto vars:     Size  Location     Type
 20963 ;;		None
 20964 ;; Return value:  Size  Location     Type
 20965 ;;                  1    wreg      void 
 20966 ;; Registers used:
 20967 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 20968 ;; Tracked objects:
 20969 ;;		On entry : 0/0
 20970 ;;		On exit  : 0/0
 20971 ;;		Unchanged: 0/0
 20972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20977 ;;Total ram usage:        0 bytes
 20978 ;; Hardware stack levels used:    1
 20979 ;; Hardware stack levels required when called:    1
 20980 ;; This function calls:
 20981 ;;		Absolute function
 20982 ;;		_INT1_DefaultInterruptHandler
 20983 ;; This function is called by:
 20984 ;;		_INT1_ISR
 20985 ;; This function uses a non-reentrant model
 20986 ;;
 20987                           
 20988                           	psect	text115
 20989  005D86                     __ptext115:
 20990                           	opt callstack 0
 20991  005D86                     _INT1_CallBack:
 20992                           	opt callstack 12
 20993                           
 20994                           ;mcc_generated_files/ext_int.c: 81:  if (INT1_InterruptHandler) {
 20995                           
 20996                           ;incstack = 0
 20997  005D86  0101               	movlb	1	; () banked
 20998  005D88  51DD               	movf	_INT1_InterruptHandler& (0+255),w,b
 20999  005D8A  11DE               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 21000  005D8C  B4D8               	btfsc	status,2,c
 21001  005D8E  0012               	return	
 21002                           
 21003                           ; BSR set to: 1
 21004                           ;mcc_generated_files/ext_int.c: 82:   INT1_InterruptHandler();
 21005  005D90  D801               	call	i2u984_48
 21006  005D92  0012               	return	
 21007  005D94                     i2u984_48:
 21008  005D94  0005               	push	
 21009  005D96  6EFA               	movwf	pclath,c
 21010  005D98  51DD               	movf	_INT1_InterruptHandler& (0+255),w,b
 21011  005D9A  6EFD               	movwf	tosl,c
 21012  005D9C  51DE               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 21013  005D9E  6EFE               	movwf	tosh,c
 21014  005DA0  50F8               	movf	tblptru,w,c
 21015  005DA2  6EFF               	movwf	tosu,c
 21016  005DA4  50FA               	movf	pclath,w,c
 21017  005DA6  0012               	return		;indir
 21018  005DA8                     __end_of_INT1_CallBack:
 21019                           	opt callstack 0
 21020                           
 21021 ;; *************** function _INT1_DefaultInterruptHandler *****************
 21022 ;; Defined at:
 21023 ;;		line 91 in file "mcc_generated_files/ext_int.c"
 21024 ;; Parameters:    Size  Location     Type
 21025 ;;		None
 21026 ;; Auto vars:     Size  Location     Type
 21027 ;;		None
 21028 ;; Return value:  Size  Location     Type
 21029 ;;                  1    wreg      void 
 21030 ;; Registers used:
 21031 ;;		wreg, status,2
 21032 ;; Tracked objects:
 21033 ;;		On entry : 0/0
 21034 ;;		On exit  : 0/0
 21035 ;;		Unchanged: 0/0
 21036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21041 ;;Total ram usage:        0 bytes
 21042 ;; Hardware stack levels used:    1
 21043 ;; This function calls:
 21044 ;;		Nothing
 21045 ;; This function is called by:
 21046 ;;		_EXT_INT_Initialize
 21047 ;;		_INT1_CallBack
 21048 ;; This function uses a non-reentrant model
 21049 ;;
 21050                           
 21051                           	psect	text116
 21052  005F5E                     __ptext116:
 21053                           	opt callstack 0
 21054  005F5E                     _INT1_DefaultInterruptHandler:
 21055                           	opt callstack 12
 21056                           
 21057                           ;mcc_generated_files/ext_int.c: 95:  appData.sw2Changed = 6;
 21058                           
 21059                           ;incstack = 0
 21060  005F5E  0E06               	movlw	6
 21061  005F60  0101               	movlb	1	; () banked
 21062  005F62  6FD6               	movwf	(_appData+73)& (0+255),b	;volatile
 21063                           
 21064                           ; BSR set to: 1
 21065  005F64  0012               	return		;funcret
 21066  005F66                     __end_of_INT1_DefaultInterruptHandler:
 21067                           	opt callstack 0
 21068                           
 21069 ;; *************** function _INT0_ISR *****************
 21070 ;; Defined at:
 21071 ;;		line 38 in file "mcc_generated_files/ext_int.c"
 21072 ;; Parameters:    Size  Location     Type
 21073 ;;		None
 21074 ;; Auto vars:     Size  Location     Type
 21075 ;;		None
 21076 ;; Return value:  Size  Location     Type
 21077 ;;                  1    wreg      void 
 21078 ;; Registers used:
 21079 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 21080 ;; Tracked objects:
 21081 ;;		On entry : 0/0
 21082 ;;		On exit  : 0/0
 21083 ;;		Unchanged: 0/0
 21084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21089 ;;Total ram usage:        0 bytes
 21090 ;; Hardware stack levels used:    1
 21091 ;; Hardware stack levels required when called:    2
 21092 ;; This function calls:
 21093 ;;		_INT0_CallBack
 21094 ;; This function is called by:
 21095 ;;		_INTERRUPT_InterruptManagerHigh
 21096 ;; This function uses a non-reentrant model
 21097 ;;
 21098                           
 21099                           	psect	text117
 21100  005F66                     __ptext117:
 21101                           	opt callstack 0
 21102  005F66                     _INT0_ISR:
 21103                           	opt callstack 12
 21104                           
 21105                           ;mcc_generated_files/ext_int.c: 40:  (INTCONbits.INT0IF = 0);
 21106                           
 21107                           ; BSR set to: 1
 21108                           ;incstack = 0
 21109  005F66  92F2               	bcf	4082,1,c	;volatile
 21110                           
 21111                           ;mcc_generated_files/ext_int.c: 43:  INT0_CallBack();
 21112  005F68  ECD4  F02E         	call	_INT0_CallBack	;wreg free
 21113  005F6C  0012               	return		;funcret
 21114  005F6E                     __end_of_INT0_ISR:
 21115                           	opt callstack 0
 21116                           
 21117 ;; *************** function _INT0_CallBack *****************
 21118 ;; Defined at:
 21119 ;;		line 46 in file "mcc_generated_files/ext_int.c"
 21120 ;; Parameters:    Size  Location     Type
 21121 ;;		None
 21122 ;; Auto vars:     Size  Location     Type
 21123 ;;		None
 21124 ;; Return value:  Size  Location     Type
 21125 ;;                  1    wreg      void 
 21126 ;; Registers used:
 21127 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 21128 ;; Tracked objects:
 21129 ;;		On entry : 0/0
 21130 ;;		On exit  : 0/0
 21131 ;;		Unchanged: 0/0
 21132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21137 ;;Total ram usage:        0 bytes
 21138 ;; Hardware stack levels used:    1
 21139 ;; Hardware stack levels required when called:    1
 21140 ;; This function calls:
 21141 ;;		Absolute function
 21142 ;;		_INT0_DefaultInterruptHandler
 21143 ;; This function is called by:
 21144 ;;		_INT0_ISR
 21145 ;; This function uses a non-reentrant model
 21146 ;;
 21147                           
 21148                           	psect	text118
 21149  005DA8                     __ptext118:
 21150                           	opt callstack 0
 21151  005DA8                     _INT0_CallBack:
 21152                           	opt callstack 12
 21153                           
 21154                           ;mcc_generated_files/ext_int.c: 49:  if (INT0_InterruptHandler) {
 21155                           
 21156                           ;incstack = 0
 21157  005DA8  0101               	movlb	1	; () banked
 21158  005DAA  51DF               	movf	_INT0_InterruptHandler& (0+255),w,b
 21159  005DAC  11E0               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 21160  005DAE  B4D8               	btfsc	status,2,c
 21161  005DB0  0012               	return	
 21162                           
 21163                           ; BSR set to: 1
 21164                           ;mcc_generated_files/ext_int.c: 50:   INT0_InterruptHandler();
 21165  005DB2  D801               	call	i2u982_48
 21166  005DB4  0012               	return	
 21167  005DB6                     i2u982_48:
 21168  005DB6  0005               	push	
 21169  005DB8  6EFA               	movwf	pclath,c
 21170  005DBA  51DF               	movf	_INT0_InterruptHandler& (0+255),w,b
 21171  005DBC  6EFD               	movwf	tosl,c
 21172  005DBE  51E0               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 21173  005DC0  6EFE               	movwf	tosh,c
 21174  005DC2  50F8               	movf	tblptru,w,c
 21175  005DC4  6EFF               	movwf	tosu,c
 21176  005DC6  50FA               	movf	pclath,w,c
 21177  005DC8  0012               	return		;indir
 21178  005DCA                     __end_of_INT0_CallBack:
 21179                           	opt callstack 0
 21180                           
 21181 ;; *************** function _INT0_DefaultInterruptHandler *****************
 21182 ;; Defined at:
 21183 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 21184 ;; Parameters:    Size  Location     Type
 21185 ;;		None
 21186 ;; Auto vars:     Size  Location     Type
 21187 ;;		None
 21188 ;; Return value:  Size  Location     Type
 21189 ;;                  1    wreg      void 
 21190 ;; Registers used:
 21191 ;;		wreg, status,2
 21192 ;; Tracked objects:
 21193 ;;		On entry : 0/0
 21194 ;;		On exit  : 0/0
 21195 ;;		Unchanged: 0/0
 21196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21201 ;;Total ram usage:        0 bytes
 21202 ;; Hardware stack levels used:    1
 21203 ;; This function calls:
 21204 ;;		Nothing
 21205 ;; This function is called by:
 21206 ;;		_EXT_INT_Initialize
 21207 ;;		_INT0_CallBack
 21208 ;; This function uses a non-reentrant model
 21209 ;;
 21210                           
 21211                           	psect	text119
 21212  005E92                     __ptext119:
 21213                           	opt callstack 0
 21214  005E92                     _INT0_DefaultInterruptHandler:
 21215                           	opt callstack 12
 21216                           
 21217                           ;mcc_generated_files/ext_int.c: 63:  appData.sw1Changed = 2;
 21218                           
 21219                           ;incstack = 0
 21220  005E92  0E02               	movlw	2
 21221  005E94  0101               	movlb	1	; () banked
 21222  005E96  6FD5               	movwf	(_appData+72)& (0+255),b	;volatile
 21223                           
 21224                           ;mcc_generated_files/ext_int.c: 64:  if (appData.sw2Changed) {
 21225  005E98  51D6               	movf	(_appData+73)& (0+255),w,b	;volatile
 21226  005E9A  B4D8               	btfsc	status,2,c
 21227  005E9C  0012               	return	
 21228                           
 21229                           ; BSR set to: 1
 21230  005E9E  00FF               	reset		;# 
 21231  005EA0  0012               	return		;funcret
 21232  005EA2                     __end_of_INT0_DefaultInterruptHandler:
 21233                           	opt callstack 0
 21234                           
 21235 ;; *************** function _EUSART2_Transmit_ISR *****************
 21236 ;; Defined at:
 21237 ;;		line 181 in file "mcc_generated_files/eusart2.c"
 21238 ;; Parameters:    Size  Location     Type
 21239 ;;		None
 21240 ;; Auto vars:     Size  Location     Type
 21241 ;;		None
 21242 ;; Return value:  Size  Location     Type
 21243 ;;                  1    wreg      void 
 21244 ;; Registers used:
 21245 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21246 ;; Tracked objects:
 21247 ;;		On entry : 0/0
 21248 ;;		On exit  : 0/0
 21249 ;;		Unchanged: 0/0
 21250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21255 ;;Total ram usage:        0 bytes
 21256 ;; Hardware stack levels used:    1
 21257 ;; This function calls:
 21258 ;;		Nothing
 21259 ;; This function is called by:
 21260 ;;		_EUSART2_Initialize
 21261 ;;		_INTERRUPT_InterruptManagerHigh
 21262 ;; This function uses a non-reentrant model
 21263 ;;
 21264                           
 21265                           	psect	text120
 21266  005B24                     __ptext120:
 21267                           	opt callstack 0
 21268  005B24                     _EUSART2_Transmit_ISR:
 21269                           	opt callstack 14
 21270                           
 21271                           ;mcc_generated_files/eusart2.c: 185:     if(sizeof(eusart2TxBuffer) > eusart2TxBufferRem
      +                          aining)
 21272                           
 21273                           ;incstack = 0
 21274  005B24  0E40               	movlw	64
 21275  005B26  0100               	movlb	0	; () banked
 21276  005B28  61CB               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
 21277  005B2A  D010               	goto	i2l174
 21278                           
 21279                           ; BSR set to: 0
 21280                           ;mcc_generated_files/eusart2.c: 186:     {;mcc_generated_files/eusart2.c: 187:         T
      +                          XREG2 = eusart2TxBuffer[eusart2TxTail++];
 21281  005B2C  0E80               	movlw	low _eusart2TxBuffer
 21282  005B2E  2449               	addwf	_eusart2TxTail,w,c	;volatile
 21283  005B30  6ED9               	movwf	fsr2l,c
 21284  005B32  6ADA               	clrf	fsr2h,c
 21285  005B34  0E02               	movlw	high _eusart2TxBuffer
 21286  005B36  22DA               	addwfc	fsr2h,f,c
 21287  005B38  50DF               	movf	indf2,w,c
 21288  005B3A  6E79               	movwf	3961,c	;volatile
 21289                           
 21290                           ; BSR set to: 0
 21291  005B3C  2A49               	incf	_eusart2TxTail,f,c	;volatile
 21292                           
 21293                           ; BSR set to: 0
 21294                           ;mcc_generated_files/eusart2.c: 188:         if(sizeof(eusart2TxBuffer) <= eusart2TxTail
      +                          )
 21295  005B3E  0E3F               	movlw	63
 21296  005B40  6449               	cpfsgt	_eusart2TxTail,c	;volatile
 21297  005B42  D002               	goto	i2l8379
 21298                           
 21299                           ; BSR set to: 0
 21300                           ;mcc_generated_files/eusart2.c: 189:         {;mcc_generated_files/eusart2.c: 190:      
      +                                 eusart2TxTail = 0;
 21301  005B44  0E00               	movlw	0
 21302  005B46  6E49               	movwf	_eusart2TxTail,c	;volatile
 21303  005B48                     i2l8379:
 21304                           
 21305                           ; BSR set to: 0
 21306                           ;mcc_generated_files/eusart2.c: 192:         eusart2TxBufferRemaining++;
 21307  005B48  2BCB               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 21308                           
 21309                           ;mcc_generated_files/eusart2.c: 193:     }
 21310  005B4A  0012               	return	
 21311  005B4C                     i2l174:
 21312                           
 21313                           ; BSR set to: 0
 21314                           ;mcc_generated_files/eusart2.c: 195:     {;mcc_generated_files/eusart2.c: 196:         P
      +                          IE3bits.TX2IE = 0;
 21315  005B4C  98A3               	bcf	4003,4,c	;volatile
 21316                           
 21317                           ; BSR set to: 0
 21318  005B4E  0012               	return		;funcret
 21319  005B50                     __end_of_EUSART2_Transmit_ISR:
 21320                           	opt callstack 0
 21321                           
 21322 ;; *************** function _EUSART2_Receive_ISR *****************
 21323 ;; Defined at:
 21324 ;;		line 200 in file "mcc_generated_files/eusart2.c"
 21325 ;; Parameters:    Size  Location     Type
 21326 ;;		None
 21327 ;; Auto vars:     Size  Location     Type
 21328 ;;		None
 21329 ;; Return value:  Size  Location     Type
 21330 ;;                  1    wreg      void 
 21331 ;; Registers used:
 21332 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21333 ;; Tracked objects:
 21334 ;;		On entry : 0/0
 21335 ;;		On exit  : 0/0
 21336 ;;		Unchanged: 0/0
 21337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21342 ;;Total ram usage:        0 bytes
 21343 ;; Hardware stack levels used:    1
 21344 ;; This function calls:
 21345 ;;		Nothing
 21346 ;; This function is called by:
 21347 ;;		_EUSART2_Initialize
 21348 ;;		_INTERRUPT_InterruptManagerHigh
 21349 ;; This function uses a non-reentrant model
 21350 ;;
 21351                           
 21352                           	psect	text121
 21353  005C20                     __ptext121:
 21354                           	opt callstack 0
 21355  005C20                     _EUSART2_Receive_ISR:
 21356                           	opt callstack 14
 21357                           
 21358                           ;mcc_generated_files/eusart2.c: 203:     if(1 == RCSTA2bits.OERR)
 21359                           
 21360                           ; BSR set to: 0
 21361                           ;incstack = 0
 21362  005C20  A2A6               	btfss	4006,1,c	;volatile
 21363  005C22  D002               	goto	i2l8385
 21364                           
 21365                           ;mcc_generated_files/eusart2.c: 204:     {;mcc_generated_files/eusart2.c: 207:         R
      +                          CSTA2bits.CREN = 0;
 21366  005C24  98A6               	bcf	4006,4,c	;volatile
 21367                           
 21368                           ;mcc_generated_files/eusart2.c: 208:         RCSTA2bits.CREN = 1;
 21369  005C26  88A6               	bsf	4006,4,c	;volatile
 21370  005C28                     i2l8385:
 21371                           
 21372                           ;mcc_generated_files/eusart2.c: 212:     eusart2RxBuffer[eusart2RxHead++] = RCREG2;
 21373  005C28  0E0E               	movlw	low _eusart2RxBuffer
 21374  005C2A  2448               	addwf	_eusart2RxHead,w,c	;volatile
 21375  005C2C  6ED9               	movwf	fsr2l,c
 21376  005C2E  6ADA               	clrf	fsr2h,c
 21377  005C30  0E01               	movlw	high _eusart2RxBuffer
 21378  005C32  22DA               	addwfc	fsr2h,f,c
 21379  005C34  CF7A FFDF          	movff	3962,indf2	;volatile
 21380  005C38  2A48               	incf	_eusart2RxHead,f,c	;volatile
 21381                           
 21382                           ;mcc_generated_files/eusart2.c: 213:     if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 21383  005C3A  0E07               	movlw	7
 21384  005C3C  6448               	cpfsgt	_eusart2RxHead,c	;volatile
 21385  005C3E  D002               	goto	i2l8393
 21386                           
 21387                           ;mcc_generated_files/eusart2.c: 214:     {;mcc_generated_files/eusart2.c: 215:         e
      +                          usart2RxHead = 0;
 21388  005C40  0E00               	movlw	0
 21389  005C42  6E48               	movwf	_eusart2RxHead,c	;volatile
 21390  005C44                     i2l8393:
 21391                           
 21392                           ;mcc_generated_files/eusart2.c: 217:     eusart2RxCount++;
 21393  005C44  2A46               	incf	_eusart2RxCount,f,c	;volatile
 21394  005C46  0012               	return		;funcret
 21395  005C48                     __end_of_EUSART2_Receive_ISR:
 21396                           	opt callstack 0
 21397                           
 21398 ;; *************** function _EUSART1_Transmit_ISR *****************
 21399 ;; Defined at:
 21400 ;;		line 167 in file "mcc_generated_files/eusart1.c"
 21401 ;; Parameters:    Size  Location     Type
 21402 ;;		None
 21403 ;; Auto vars:     Size  Location     Type
 21404 ;;		None
 21405 ;; Return value:  Size  Location     Type
 21406 ;;                  1    wreg      void 
 21407 ;; Registers used:
 21408 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21409 ;; Tracked objects:
 21410 ;;		On entry : 0/0
 21411 ;;		On exit  : 0/0
 21412 ;;		Unchanged: 0/0
 21413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21418 ;;Total ram usage:        0 bytes
 21419 ;; Hardware stack levels used:    1
 21420 ;; This function calls:
 21421 ;;		Nothing
 21422 ;; This function is called by:
 21423 ;;		_EUSART1_Initialize
 21424 ;;		_INTERRUPT_InterruptManagerHigh
 21425 ;; This function uses a non-reentrant model
 21426 ;;
 21427                           
 21428                           	psect	text122
 21429  005B50                     __ptext122:
 21430                           	opt callstack 0
 21431  005B50                     _EUSART1_Transmit_ISR:
 21432                           	opt callstack 14
 21433                           
 21434                           ;mcc_generated_files/eusart1.c: 171:  if (sizeof(eusart1TxBuffer) > eusart1TxBufferRemai
      +                          ning) {
 21435                           
 21436                           ;incstack = 0
 21437  005B50  0E40               	movlw	64
 21438  005B52  0100               	movlb	0	; () banked
 21439  005B54  61CA               	cpfslt	_eusart1TxBufferRemaining& (0+255),b	;volatile
 21440  005B56  D010               	goto	i2l350
 21441                           
 21442                           ; BSR set to: 0
 21443                           ;mcc_generated_files/eusart1.c: 172:   TXREG1 = eusart1TxBuffer[eusart1TxTail++];
 21444  005B58  0E40               	movlw	low _eusart1TxBuffer
 21445  005B5A  2444               	addwf	_eusart1TxTail,w,c	;volatile
 21446  005B5C  6ED9               	movwf	fsr2l,c
 21447  005B5E  6ADA               	clrf	fsr2h,c
 21448  005B60  0E02               	movlw	high _eusart1TxBuffer
 21449  005B62  22DA               	addwfc	fsr2h,f,c
 21450  005B64  50DF               	movf	indf2,w,c
 21451  005B66  6EAD               	movwf	4013,c	;volatile
 21452                           
 21453                           ; BSR set to: 0
 21454  005B68  2A44               	incf	_eusart1TxTail,f,c	;volatile
 21455                           
 21456                           ; BSR set to: 0
 21457                           ;mcc_generated_files/eusart1.c: 173:   if (sizeof(eusart1TxBuffer) <= eusart1TxTail) {
 21458  005B6A  0E3F               	movlw	63
 21459  005B6C  6444               	cpfsgt	_eusart1TxTail,c	;volatile
 21460  005B6E  D002               	goto	i2l8439
 21461                           
 21462                           ; BSR set to: 0
 21463                           ;mcc_generated_files/eusart1.c: 174:    eusart1TxTail = 0;
 21464  005B70  0E00               	movlw	0
 21465  005B72  6E44               	movwf	_eusart1TxTail,c	;volatile
 21466  005B74                     i2l8439:
 21467                           
 21468                           ; BSR set to: 0
 21469                           ;mcc_generated_files/eusart1.c: 176:   eusart1TxBufferRemaining++;
 21470  005B74  2BCA               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 21471                           
 21472                           ;mcc_generated_files/eusart1.c: 177:  } else {
 21473  005B76  0012               	return	
 21474  005B78                     i2l350:
 21475                           
 21476                           ; BSR set to: 0
 21477                           ;mcc_generated_files/eusart1.c: 178:   PIE1bits.TX1IE = 0;
 21478  005B78  989D               	bcf	3997,4,c	;volatile
 21479                           
 21480                           ; BSR set to: 0
 21481  005B7A  0012               	return		;funcret
 21482  005B7C                     __end_of_EUSART1_Transmit_ISR:
 21483                           	opt callstack 0
 21484                           
 21485 ;; *************** function _EUSART1_Receive_ISR *****************
 21486 ;; Defined at:
 21487 ;;		line 182 in file "mcc_generated_files/eusart1.c"
 21488 ;; Parameters:    Size  Location     Type
 21489 ;;		None
 21490 ;; Auto vars:     Size  Location     Type
 21491 ;;  treg            1    0[COMRAM] unsigned char 
 21492 ;; Return value:  Size  Location     Type
 21493 ;;                  1    wreg      void 
 21494 ;; Registers used:
 21495 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21496 ;; Tracked objects:
 21497 ;;		On entry : 0/0
 21498 ;;		On exit  : 0/0
 21499 ;;		Unchanged: 0/0
 21500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21502 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21504 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21505 ;;Total ram usage:        1 bytes
 21506 ;; Hardware stack levels used:    1
 21507 ;; This function calls:
 21508 ;;		Nothing
 21509 ;; This function is called by:
 21510 ;;		_EUSART1_Initialize
 21511 ;;		_INTERRUPT_InterruptManagerHigh
 21512 ;; This function uses a non-reentrant model
 21513 ;;
 21514                           
 21515                           	psect	text123
 21516  00574E                     __ptext123:
 21517                           	opt callstack 0
 21518  00574E                     _EUSART1_Receive_ISR:
 21519                           	opt callstack 14
 21520                           
 21521                           ;mcc_generated_files/eusart1.c: 184:  uint8_t treg;;mcc_generated_files/eusart1.c: 185: 
      +                           if (1 == RCSTA1bits.OERR) {
 21522                           
 21523                           ; BSR set to: 0
 21524                           ;incstack = 0
 21525  00574E  A2AB               	btfss	4011,1,c	;volatile
 21526  005750  D002               	goto	i2l356
 21527                           
 21528                           ;mcc_generated_files/eusart1.c: 188:   RCSTA1bits.CREN = 0;
 21529  005752  98AB               	bcf	4011,4,c	;volatile
 21530                           
 21531                           ;mcc_generated_files/eusart1.c: 189:   RCSTA1bits.CREN = 1;
 21532  005754  88AB               	bsf	4011,4,c	;volatile
 21533  005756                     i2l356:
 21534                           
 21535                           ;mcc_generated_files/eusart1.c: 193:  treg = RCREG1;
 21536  005756  CFAE F001          	movff	4014,EUSART1_Receive_ISR@treg	;volatile
 21537                           
 21538                           ;mcc_generated_files/eusart1.c: 198:  if ((treg != '-') && (treg != '>')) {
 21539  00575A  0E2D               	movlw	45
 21540  00575C  1801               	xorwf	EUSART1_Receive_ISR@treg,w,c
 21541  00575E  B4D8               	btfsc	status,2,c
 21542  005760  0012               	return	
 21543  005762  0E3E               	movlw	62
 21544  005764  1801               	xorwf	EUSART1_Receive_ISR@treg,w,c
 21545  005766  B4D8               	btfsc	status,2,c
 21546  005768  0012               	return	
 21547                           
 21548                           ;mcc_generated_files/eusart1.c: 200:   eusart1RxBuffer[eusart1RxHead++] = treg;
 21549  00576A  0E00               	movlw	low _eusart1RxBuffer
 21550  00576C  2443               	addwf	_eusart1RxHead,w,c	;volatile
 21551  00576E  6ED9               	movwf	fsr2l,c
 21552  005770  6ADA               	clrf	fsr2h,c
 21553  005772  0E02               	movlw	high _eusart1RxBuffer
 21554  005774  22DA               	addwfc	fsr2h,f,c
 21555  005776  C001  FFDF         	movff	EUSART1_Receive_ISR@treg,indf2
 21556  00577A  2A43               	incf	_eusart1RxHead,f,c	;volatile
 21557                           
 21558                           ;mcc_generated_files/eusart1.c: 201:   if (sizeof(eusart1RxBuffer) <= eusart1RxHead) {
 21559  00577C  0E3F               	movlw	63
 21560  00577E  6443               	cpfsgt	_eusart1RxHead,c	;volatile
 21561  005780  D002               	goto	i2l8457
 21562                           
 21563                           ;mcc_generated_files/eusart1.c: 202:    eusart1RxHead = 0;
 21564  005782  0E00               	movlw	0
 21565  005784  6E43               	movwf	_eusart1RxHead,c	;volatile
 21566  005786                     i2l8457:
 21567                           
 21568                           ;mcc_generated_files/eusart1.c: 204:   eusart1RxCount++;
 21569  005786  2A41               	incf	_eusart1RxCount,f,c	;volatile
 21570  005788  0012               	return		;funcret
 21571  00578A                     __end_of_EUSART1_Receive_ISR:
 21572                           	opt callstack 0
 21573                           
 21574                           	psect	text124
 21575  000000                     __ptext124:
 21576                           	opt callstack 0
 21577                           
 21578                           	psect	rparam
 21579  0000                     
 21580                           	psect	temp
 21581  00004D                     btemp:
 21582                           	opt callstack 0
 21583  00004D                     	ds	1
 21584  0000                     int$flags	set	btemp
 21585  0000                     wtemp8	set	btemp+1
 21586  0000                     ttemp5	set	btemp+1
 21587  0000                     ttemp6	set	btemp+4
 21588  0000                     ttemp7	set	btemp+8
 21589                           tosu	equ	0xFFF
 21590                           tosh	equ	0xFFE
 21591                           tosl	equ	0xFFD
 21592                           stkptr	equ	0xFFC
 21593                           pclatu	equ	0xFFB
 21594                           pclath	equ	0xFFA
 21595                           pcl	equ	0xFF9
 21596                           tblptru	equ	0xFF8
 21597                           tblptrh	equ	0xFF7
 21598                           tblptrl	equ	0xFF6
 21599                           tablat	equ	0xFF5
 21600                           prodh	equ	0xFF4
 21601                           prodl	equ	0xFF3
 21602                           indf0	equ	0xFEF
 21603                           postinc0	equ	0xFEE
 21604                           postdec0	equ	0xFED
 21605                           preinc0	equ	0xFEC
 21606                           plusw0	equ	0xFEB
 21607                           fsr0h	equ	0xFEA
 21608                           fsr0l	equ	0xFE9
 21609                           wreg	equ	0xFE8
 21610                           indf1	equ	0xFE7
 21611                           postinc1	equ	0xFE6
 21612                           postdec1	equ	0xFE5
 21613                           preinc1	equ	0xFE4
 21614                           plusw1	equ	0xFE3
 21615                           fsr1h	equ	0xFE2
 21616                           fsr1l	equ	0xFE1
 21617                           bsr	equ	0xFE0
 21618                           indf2	equ	0xFDF
 21619                           postinc2	equ	0xFDE
 21620                           postdec2	equ	0xFDD
 21621                           preinc2	equ	0xFDC
 21622                           plusw2	equ	0xFDB
 21623                           fsr2h	equ	0xFDA
 21624                           fsr2l	equ	0xFD9
 21625                           status	equ	0xFD8


Data Sizes:
    Strings     579
    Constant    197
    Data        89
    BSS         346
    Persistent  30
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     58      76
    BANK0           160     96     108
    BANK1           256      0     243
    BANK2           256      0     192
    BANK3           256     82      82
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    nanf@s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_158(CODE[1]), 

    strspn@c	PTR const unsigned char  size(2) Largest target is 2
		 -> get_pfb@s(BANK3[2]), 

    strspn@s	PTR const unsigned char  size(2) Largest target is 66
		 -> get_pfb@pfb_ascii(BANK3[66]), NULL(NULL[0]), 

    strcspn@c	PTR const unsigned char  size(2) Largest target is 2
		 -> get_pfb@s(BANK3[2]), 

    strcspn@s	PTR const unsigned char  size(2) Largest target is 66
		 -> get_pfb@pfb_ascii(BANK3[66]), NULL(NULL[0]), 

    strchr@s	PTR const unsigned char  size(2) Largest target is 76
		 -> get_pfb@s(BANK3[2]), appData.receive_packet(BANK1[64]), NULL(NULL[0]), appData(BANK1[76]), 

    strtok@sep	PTR const unsigned char  size(2) Largest target is 2
		 -> get_pfb@s(BANK3[2]), 

    strtok@p	PTR unsigned char  size(2) Largest target is 66
		 -> get_pfb@pfb_ascii(BANK3[66]), NULL(NULL[0]), 

    strtok@s	PTR unsigned char  size(2) Largest target is 66
		 -> get_pfb@pfb_ascii(BANK3[66]), NULL(NULL[0]), 

    atof@s	PTR const unsigned char  size(2) Largest target is 66
		 -> get_pfb@pfb_ascii(BANK3[66]), NULL(NULL[0]), 

    strtof@s	PTR const unsigned char  size(2) Largest target is 66
		 -> get_pfb@pfb_ascii(BANK3[66]), NULL(NULL[0]), 

    strtof@res	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 76
		 -> get_pfb@s(BANK3[2]), appData.receive_packet(BANK1[64]), NULL(NULL[0]), appData(BANK1[76]), 

    strstr@h	PTR const unsigned char  size(2) Largest target is 76
		 -> get_pfb@s(BANK3[2]), appData.receive_packet(BANK1[64]), NULL(NULL[0]), appData(BANK1[76]), 

    strstr@n	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_25(CODE[2]), STR_18(CODE[3]), STR_16(CODE[9]), STR_14(CODE[11]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_147(CODE[3]), STR_143(CODE[3]), STR_138(CODE[3]), STR_134(CODE[3]), 
		 -> STR_129(CODE[4]), STR_125(CODE[4]), STR_120(CODE[3]), STR_115(CODE[3]), 
		 -> STR_110(CODE[4]), STR_105(CODE[3]), STR_100(CODE[3]), STR_95(CODE[4]), 
		 -> STR_90(CODE[3]), STR_85(CODE[3]), STR_80(CODE[4]), STR_75(CODE[3]), 
		 -> STR_71(CODE[3]), STR_66(CODE[3]), STR_62(CODE[3]), STR_57(CODE[4]), 
		 -> STR_53(CODE[4]), STR_25(CODE[2]), STR_18(CODE[3]), STR_16(CODE[9]), 
		 -> STR_14(CODE[11]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_147(CODE[3]), STR_143(CODE[3]), STR_138(CODE[3]), STR_134(CODE[3]), 
		 -> STR_129(CODE[4]), STR_125(CODE[4]), STR_120(CODE[3]), STR_115(CODE[3]), 
		 -> STR_110(CODE[4]), STR_105(CODE[3]), STR_100(CODE[3]), STR_95(CODE[4]), 
		 -> STR_90(CODE[3]), STR_85(CODE[3]), STR_80(CODE[4]), STR_75(CODE[3]), 
		 -> STR_71(CODE[3]), STR_66(CODE[3]), STR_62(CODE[3]), STR_57(CODE[4]), 
		 -> STR_53(CODE[4]), STR_25(CODE[2]), STR_18(CODE[3]), STR_16(CODE[9]), 
		 -> STR_14(CODE[11]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 76
		 -> STR_50(CODE[2]), STR_49(CODE[3]), STR_48(CODE[15]), STR_47(CODE[24]), 
		 -> STR_45(CODE[9]), STR_44(CODE[11]), STR_43(CODE[7]), STR_42(CODE[7]), 
		 -> STR_41(CODE[7]), STR_40(CODE[7]), STR_10(CODE[21]), get_pfb@s(BANK3[2]), 
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[3]), 
		 -> STR_4(CODE[3]), appData.receive_packet(BANK1[64]), NULL(NULL[0]), appData(BANK1[76]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 76
		 -> STR_50(CODE[2]), STR_49(CODE[3]), STR_48(CODE[15]), STR_47(CODE[24]), 
		 -> STR_45(CODE[9]), STR_44(CODE[11]), STR_43(CODE[7]), STR_42(CODE[7]), 
		 -> STR_41(CODE[7]), STR_40(CODE[7]), STR_10(CODE[21]), get_pfb@s(BANK3[2]), 
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[3]), 
		 -> STR_4(CODE[3]), appData.receive_packet(BANK1[64]), NULL(NULL[0]), appData(BANK1[76]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), 
		 -> STR_46(CODE[2]), STR_39(CODE[21]), STR_38(CODE[18]), STR_26(CODE[13]), 
		 -> STR_25(CODE[2]), STR_24(CODE[21]), STR_23(CODE[21]), STR_22(CODE[21]), 
		 -> STR_21(CODE[21]), STR_20(CODE[21]), STR_19(CODE[21]), STR_18(CODE[3]), 
		 -> STR_16(CODE[9]), STR_14(CODE[11]), STR_13(CODE[11]), STR_12(CODE[21]), 
		 -> STR_11(CODE[21]), STR_9(CODE[15]), d_cur_off(CODE[4]), d_ff(CODE[2]), 
		 -> d_version(CODE[3]), d_reset(CODE[3]), STR_3(CODE[9]), STR_2(CODE[12]), 
		 -> STR_1(CODE[4]), APP_Tasks@mc_response(BANK1[66]), appData(BANK1[76]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), 
		 -> STR_46(CODE[2]), STR_39(CODE[21]), STR_38(CODE[18]), STR_26(CODE[13]), 
		 -> STR_25(CODE[2]), STR_24(CODE[21]), STR_23(CODE[21]), STR_22(CODE[21]), 
		 -> STR_21(CODE[21]), STR_20(CODE[21]), STR_19(CODE[21]), STR_18(CODE[3]), 
		 -> STR_16(CODE[9]), STR_14(CODE[11]), STR_13(CODE[11]), STR_12(CODE[21]), 
		 -> STR_11(CODE[21]), STR_9(CODE[15]), d_cur_off(CODE[4]), d_ff(CODE[2]), 
		 -> d_version(CODE[3]), d_reset(CODE[3]), STR_3(CODE[9]), STR_2(CODE[12]), 
		 -> STR_1(CODE[4]), APP_Tasks@mc_response(BANK1[66]), appData(BANK1[76]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 66
		 -> get_pfb@pfb_ascii(BANK3[66]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 66
		 -> get_pfb@pfb_ascii(BANK3[66]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 76
		 -> get_pfb@s(BANK3[2]), appData.receive_packet(BANK1[64]), NULL(NULL[0]), appData(BANK1[76]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 76
		 -> get_pfb@s(BANK3[2]), appData.receive_packet(BANK1[64]), NULL(NULL[0]), appData(BANK1[76]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[3]), 
		 -> STR_4(CODE[3]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_50(CODE[2]), STR_49(CODE[3]), STR_48(CODE[15]), STR_47(CODE[24]), 
		 -> STR_45(CODE[9]), STR_44(CODE[11]), STR_43(CODE[7]), STR_42(CODE[7]), 
		 -> STR_41(CODE[7]), STR_40(CODE[7]), STR_10(CODE[21]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 76
		 -> APP_Tasks@mc_response(BANK1[66]), appData(BANK1[76]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 76
		 -> APP_Tasks@mc_response(BANK1[66]), appData(BANK1[76]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    S3574_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 76
		 -> APP_Tasks@mc_response(BANK1[66]), appData(BANK1[76]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 76
		 -> APP_Tasks@mc_response(BANK1[66]), appData(BANK1[76]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_50(CODE[2]), STR_49(CODE[3]), STR_48(CODE[15]), STR_47(CODE[24]), 
		 -> STR_45(CODE[9]), STR_44(CODE[11]), STR_43(CODE[7]), STR_42(CODE[7]), 
		 -> STR_41(CODE[7]), STR_40(CODE[7]), STR_10(CODE[21]), STR_8(CODE[3]), 
		 -> STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[3]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_50(CODE[2]), STR_49(CODE[3]), STR_48(CODE[15]), STR_47(CODE[24]), 
		 -> STR_45(CODE[9]), STR_44(CODE[11]), STR_43(CODE[7]), STR_42(CODE[7]), 
		 -> STR_41(CODE[7]), STR_40(CODE[7]), STR_10(CODE[21]), STR_8(CODE[3]), 
		 -> STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_50(CODE[2]), STR_49(CODE[3]), STR_48(CODE[15]), STR_47(CODE[24]), 
		 -> STR_45(CODE[9]), STR_44(CODE[11]), STR_43(CODE[7]), STR_42(CODE[7]), 
		 -> STR_41(CODE[7]), STR_40(CODE[7]), STR_10(CODE[21]), STR_8(CODE[3]), 
		 -> STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[3]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), STR_46(CODE[2]), STR_39(CODE[21]), 
		 -> STR_38(CODE[18]), STR_26(CODE[13]), STR_24(CODE[21]), STR_23(CODE[21]), 
		 -> STR_22(CODE[21]), STR_21(CODE[21]), STR_20(CODE[21]), STR_19(CODE[21]), 
		 -> STR_13(CODE[11]), STR_12(CODE[21]), STR_11(CODE[21]), STR_9(CODE[15]), 
		 -> d_cur_off(CODE[4]), d_ff(CODE[2]), d_version(CODE[3]), d_reset(CODE[3]), 
		 -> STR_3(CODE[9]), STR_2(CODE[12]), STR_1(CODE[4]), APP_Tasks@mc_response(BANK1[66]), 
		 -> appData(BANK1[76]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), STR_46(CODE[2]), STR_39(CODE[21]), 
		 -> STR_38(CODE[18]), STR_26(CODE[13]), STR_24(CODE[21]), STR_23(CODE[21]), 
		 -> STR_22(CODE[21]), STR_21(CODE[21]), STR_20(CODE[21]), STR_19(CODE[21]), 
		 -> STR_13(CODE[11]), STR_12(CODE[21]), STR_11(CODE[21]), STR_9(CODE[15]), 
		 -> d_cur_off(CODE[4]), d_ff(CODE[2]), d_version(CODE[3]), d_reset(CODE[3]), 
		 -> STR_3(CODE[9]), STR_2(CODE[12]), STR_1(CODE[4]), APP_Tasks@mc_response(BANK1[66]), 
		 -> appData(BANK1[76]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), STR_46(CODE[2]), STR_39(CODE[21]), 
		 -> STR_38(CODE[18]), STR_26(CODE[13]), STR_24(CODE[21]), STR_23(CODE[21]), 
		 -> STR_22(CODE[21]), STR_21(CODE[21]), STR_20(CODE[21]), STR_19(CODE[21]), 
		 -> STR_13(CODE[11]), STR_12(CODE[21]), STR_11(CODE[21]), STR_9(CODE[15]), 
		 -> d_cur_off(CODE[4]), d_ff(CODE[2]), d_version(CODE[3]), d_reset(CODE[3]), 
		 -> STR_3(CODE[9]), STR_2(CODE[12]), STR_1(CODE[4]), APP_Tasks@mc_response(BANK1[66]), 
		 -> appData(BANK1[76]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), STR_46(CODE[2]), 
		 -> STR_39(CODE[21]), STR_38(CODE[18]), STR_26(CODE[13]), STR_24(CODE[21]), 
		 -> STR_23(CODE[21]), STR_22(CODE[21]), STR_21(CODE[21]), STR_20(CODE[21]), 
		 -> STR_19(CODE[21]), STR_13(CODE[11]), STR_12(CODE[21]), STR_11(CODE[21]), 
		 -> STR_9(CODE[15]), d_cur_off(CODE[4]), d_ff(CODE[2]), d_version(CODE[3]), 
		 -> d_reset(CODE[3]), STR_3(CODE[9]), STR_2(CODE[12]), STR_1(CODE[4]), 
		 -> APP_Tasks@mc_response(BANK1[66]), appData(BANK1[76]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    RsData.line_s	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_49(CODE[3]), 

    RsData.line_o	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_48(CODE[15]), 

    RsData.line_m	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_50(CODE[2]), STR_47(CODE[24]), 

    CrData.line_h	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_45(CODE[9]), 

    CrData.line_d	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_44(CODE[11]), 

    CrData.line4	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_43(CODE[7]), 

    CrData.line3	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_42(CODE[7]), 

    CrData.line2	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_41(CODE[7]), 

    CrData.line1	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_40(CODE[7]), 

    CrData.done	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_39(CODE[21]), 

    CrData.error	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_38(CODE[18]), 

    CrData.save_parm	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_37(CODE[7]), 

    CrData.mnumber0	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_36(CODE[12]), 

    CrData.msg0	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_35(CODE[8]), 

    CrData.pfb	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_34(CODE[6]), 

    CrData.t35	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_33(CODE[7]), 

    CrData.en	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_32(CODE[5]), 

    CrData.opmode2	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_31(CODE[11]), 

    CrData.mphase90	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_30(CODE[12]), 

    CrData.mpoles0	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_29(CODE[11]), 

    CrData.msg2	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_28(CODE[8]), 

    CrData.dis	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_27(CODE[6]), 

    CrData.diskmove	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_26(CODE[13]), 

    CrData.angle	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_25(CODE[2]), 

    CrData.w3	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_24(CODE[21]), 

    CrData.w2	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_23(CODE[21]), 

    CrData.w1	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_22(CODE[21]), 

    CrData.s3	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_21(CODE[21]), 

    CrData.s2	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_20(CODE[21]), 

    CrData.s1	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_19(CODE[21]), 

    CrData.r3	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), 

    CrData.c3	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_17(CODE[9]), 

    CrData.r2	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_16(CODE[9]), 

    CrData.c2	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_15(CODE[7]), 

    CrData.r1	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_14(CODE[11]), 

    CrData.c1	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_13(CODE[11]), 

    CrData.blank	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_12(CODE[21]), 

    CrData.buttonp	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_11(CODE[21]), 

    CrData.bootb	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_10(CODE[21]), 

    CrData.headder	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_46(CODE[2]), STR_9(CODE[15]), 

    sp__strtok	PTR unsigned char  size(2) Largest target is 66
		 -> get_pfb@pfb_ascii(BANK3[66]), NULL(NULL[0]), 

    get_pfb@token	PTR unsigned char  size(2) Largest target is 66
		 -> get_pfb@pfb_ascii(BANK3[66]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 66
		 -> get_pfb@pfb_ascii(BANK3[66]), 

    get_pfb@buf	PTR const unsigned char  size(2) Largest target is 76
		 -> get_pfb@s(BANK3[2]), appData.receive_packet(BANK1[64]), NULL(NULL[0]), appData(BANK1[76]), 

    display_ea_line@line	PTR unsigned char  size(2) Largest target is 66
		 -> APP_Tasks@mc_response(BANK1[66]), 

    MC_SendCommand@data	PTR const unsigned char  size(2) Largest target is 66
		 -> STR_37(CODE[7]), STR_36(CODE[12]), STR_35(CODE[8]), STR_34(CODE[6]), 
		 -> STR_33(CODE[7]), STR_32(CODE[5]), STR_31(CODE[11]), STR_30(CODE[12]), 
		 -> STR_29(CODE[11]), STR_28(CODE[8]), STR_27(CODE[6]), STR_17(CODE[9]), 
		 -> STR_15(CODE[7]), APP_Tasks@mc_response(BANK1[66]), 

    MC_ReceivePacket@Message	PTR unsigned char  size(2) Largest target is 76
		 -> appData(BANK1[76]), 

    S2566RS_DATA$line_s	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_49(CODE[3]), 

    rs_text.line_s	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_49(CODE[3]), 

    S2566RS_DATA$line_o	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_48(CODE[15]), 

    rs_text.line_o	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_48(CODE[15]), 

    S2566RS_DATA$line_m	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_50(CODE[2]), STR_47(CODE[24]), 

    rs_text.line_m	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_50(CODE[2]), STR_47(CODE[24]), 

    rs_text	PTR const struct RS_DATA size(2) Largest target is 18
		 -> RsData(CODE[12]), 

    APP_Tasks@m_start	PTR unsigned char  size(2) Largest target is 76
		 -> get_pfb@s(BANK3[2]), appData.receive_packet(BANK1[64]), NULL(NULL[0]), appData(BANK1[76]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 76
		 -> get_pfb@s(BANK3[2]), appData.receive_packet(BANK1[64]), NULL(NULL[0]), appData(BANK1[76]), 

    S2505CR_DATA$line_h	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_45(CODE[9]), 

    cr_text.line_h	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_45(CODE[9]), 

    S2505CR_DATA$line_d	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_44(CODE[11]), 

    cr_text.line_d	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_44(CODE[11]), 

    S2505CR_DATA$line4	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_43(CODE[7]), 

    cr_text.line4	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_43(CODE[7]), 

    S2505CR_DATA$line3	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_42(CODE[7]), 

    cr_text.line3	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_42(CODE[7]), 

    S2505CR_DATA$line2	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_41(CODE[7]), 

    cr_text.line2	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_41(CODE[7]), 

    S2505CR_DATA$line1	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_40(CODE[7]), 

    cr_text.line1	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_40(CODE[7]), 

    S2505CR_DATA$done	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_39(CODE[21]), 

    cr_text.done	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_39(CODE[21]), 

    S2505CR_DATA$error	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_38(CODE[18]), 

    cr_text.error	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_38(CODE[18]), 

    S2505CR_DATA$save_parm	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_37(CODE[7]), 

    cr_text.save_parm	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_37(CODE[7]), 

    S2505CR_DATA$mnumber0	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_36(CODE[12]), 

    cr_text.mnumber0	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_36(CODE[12]), 

    S2505CR_DATA$msg0	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_35(CODE[8]), 

    cr_text.msg0	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_35(CODE[8]), 

    S2505CR_DATA$pfb	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_34(CODE[6]), 

    cr_text.pfb	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_34(CODE[6]), 

    S2505CR_DATA$t35	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_33(CODE[7]), 

    cr_text.t35	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_33(CODE[7]), 

    S2505CR_DATA$en	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_32(CODE[5]), 

    cr_text.en	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_32(CODE[5]), 

    S2505CR_DATA$opmode2	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_31(CODE[11]), 

    cr_text.opmode2	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_31(CODE[11]), 

    S2505CR_DATA$mphase90	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_30(CODE[12]), 

    cr_text.mphase90	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_30(CODE[12]), 

    S2505CR_DATA$mpoles0	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_29(CODE[11]), 

    cr_text.mpoles0	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_29(CODE[11]), 

    S2505CR_DATA$msg2	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_28(CODE[8]), 

    cr_text.msg2	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_28(CODE[8]), 

    S2505CR_DATA$dis	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_27(CODE[6]), 

    cr_text.dis	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_27(CODE[6]), 

    S2505CR_DATA$diskmove	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_26(CODE[13]), 

    cr_text.diskmove	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_26(CODE[13]), 

    S2505CR_DATA$angle	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_25(CODE[2]), 

    cr_text.angle	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_25(CODE[2]), 

    S2505CR_DATA$w3	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_24(CODE[21]), 

    cr_text.w3	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_24(CODE[21]), 

    S2505CR_DATA$w2	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_23(CODE[21]), 

    cr_text.w2	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_23(CODE[21]), 

    S2505CR_DATA$w1	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_22(CODE[21]), 

    cr_text.w1	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_22(CODE[21]), 

    S2505CR_DATA$s3	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_21(CODE[21]), 

    cr_text.s3	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_21(CODE[21]), 

    S2505CR_DATA$s2	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_20(CODE[21]), 

    cr_text.s2	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_20(CODE[21]), 

    S2505CR_DATA$s1	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_19(CODE[21]), 

    cr_text.s1	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_19(CODE[21]), 

    S2505CR_DATA$r3	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), 

    cr_text.r3	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), 

    S2505CR_DATA$c3	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_17(CODE[9]), 

    cr_text.c3	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_17(CODE[9]), 

    S2505CR_DATA$r2	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_16(CODE[9]), 

    cr_text.r2	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_16(CODE[9]), 

    S2505CR_DATA$c2	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_15(CODE[7]), 

    cr_text.c2	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_15(CODE[7]), 

    S2505CR_DATA$r1	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_14(CODE[11]), 

    cr_text.r1	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_14(CODE[11]), 

    S2505CR_DATA$c1	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_13(CODE[11]), 

    cr_text.c1	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_13(CODE[11]), 

    S2505CR_DATA$blank	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_12(CODE[21]), 

    cr_text.blank	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_12(CODE[21]), 

    S2505CR_DATA$buttonp	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_11(CODE[21]), 

    cr_text.buttonp	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_11(CODE[21]), 

    S2505CR_DATA$bootb	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_10(CODE[21]), 

    cr_text.bootb	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_10(CODE[21]), 

    S2505CR_DATA$headder	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_46(CODE[2]), STR_9(CODE[15]), 

    cr_text.headder	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_46(CODE[2]), STR_9(CODE[15]), 

    cr_text	PTR const struct CR_DATA size(2) Largest target is 222
		 -> CrData(CODE[148]), 

    INT3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT3_DefaultInterruptHandler(), 

    INT3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT3_DefaultInterruptHandler(), Absolute function(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR3_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), Absolute function(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), Absolute function(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), Absolute function(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Receive_ISR(), Absolute function(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Transmit_ISR(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _SYSTEM_Initialize->_TMR0_Initialize
    _SYSTEM_Initialize->_TMR1_Initialize
    _SYSTEM_Initialize->_TMR3_Initialize
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT2_SetInterruptHandler
    _EXT_INT_Initialize->_INT3_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _strstr->_strncmp
    _get_pfb->___fldiv
    _get_pfb->_roundf
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _roundf->___flmul
    ___flsub->___fladd
    _strtof->___fldiv
    ___flmul->___flsub
    ___fldiv->___flmul
    ___fltol->_roundf
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART2_Write
    _atoi->_isspace
    _clear_MC_port->_WaitMs
    _MC_SendCommand->_WaitMs
    _WaitMs->_StartTimer
    _MC_ReceivePacket->_EUSART1_Read

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    _TMR1_DefaultInterruptHandler->__T1Interrupt

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _TMR3_ISR->_TMR3_WriteTimer

Critical Paths under _main in BANK0

    _main->_APP_Tasks
    _APP_Tasks->_sprintf
    _sprintf->_vfprintf
    _get_pfb->_atof
    _roundf->___flmul
    _atof->_strtof
    _strtof->___fldiv
    ___fldiv->___flmul
    ___fltol->_roundf
    _display_ea_version->_printf
    _display_ea_line->_printf
    _display_ea_init->_printf
    _display_ea_ff->_printf
    _display_ea_cursor_off->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    _APP_Tasks->_get_pfb

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  460446
                          _APP_Tasks
                    _PIN_MANAGER_IOC
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1078
                 _EUSART1_Initialize
                 _EUSART2_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR3_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0      98
                                             20 COMRAM     2     2      0
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR3_SetInterruptHandler                             2     0      2      98
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0      98
                                             20 COMRAM     2     2      0
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2      98
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0      98
                                             20 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     392
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
           _INT3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT3_SetInterruptHandler                             2     0      2      98
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             2     0      2      98
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             2     0      2      98
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2      98
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     196
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        2     0      2      98
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        2     0      2      98
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     196
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _PIN_MANAGER_IOC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _APP_Tasks                                            5     5      0  459368
                                             91 BANK0      5     5      0
                     _APP_Initialize
                   _MC_ReceivePacket
                     _MC_SendCommand
                         _StartTimer
                    _TMR3_StartTimer
                     _TMR3_StopTimer
                          _TimerDone
                             _WaitMs
                      _clear_MC_port
              _display_ea_cursor_off
                      _display_ea_ff
                    _display_ea_init
                    _display_ea_line
                 _display_ea_version
                            _get_pfb
                            _sprintf
                             _strstr
 ---------------------------------------------------------------------------------
 (2) _strstr                                               6     2      4    8365
                                             29 COMRAM     6     2      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   67740
                                             73 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _get_pfb                                             84    82      2   49583
                                             76 BANK0      2     0      2
                                              0 BANK3     82    82      0
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                               _atof
                             _roundf
                             _strcpy
                             _strtok
                             _truncf
 ---------------------------------------------------------------------------------
 (3) _truncf                                              20    16      4     449
                                             18 COMRAM    20    16      4
 ---------------------------------------------------------------------------------
 (3) _strtok                                               4     0      4    2568
                                             30 COMRAM     4     0      4
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (4) _strspn                                               7     3      4     977
                                             23 COMRAM     7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (4) _strcspn                                              7     3      4     977
                                             23 COMRAM     7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (3) _strchr                                               5     1      4     664
                                             18 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               8     4      4     317
                                             18 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _roundf                                              26    22      4   15067
                                             54 COMRAM     4     0      4
                                             13 BANK0     22    22      0
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    5087
                                             34 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8    4522
                                             18 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (3) _atof                                                 4     0      4   19349
                                             72 BANK0      4     0      4
                             _strtof
 ---------------------------------------------------------------------------------
 (4) _strtof                                              38    34      4   19228
                                             34 BANK0     38    34      4
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                             ___lmul
                             ___wmul
                           ___xxtofl
                            _isdigit
                            _isspace
                           _isxdigit
                               _nanf
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _nanf                                                 8     4      4     124
                                             18 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _isxdigit                                             7     5      2     349
                                             18 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) ___xxtofl                                            14    10      4     566
                                             18 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     456
                                             18 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     335
                                             18 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    3233
                                             42 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8     986
                                             18 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     590
                                             18 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2363
                                             54 COMRAM     4     4      0
                                             13 BANK0     21    13      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     427
                                             35 BANK0     10     6      4
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (2) _display_ea_version                                   2     0      2   64340
                                             81 BANK0      2     0      2
                             _WaitMs
                             _printf
 ---------------------------------------------------------------------------------
 (2) _display_ea_line                                      2     0      2   64756
                                             81 BANK0      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _display_ea_init                                      2     0      2   64340
                                             81 BANK0      2     0      2
                             _WaitMs
                             _printf
 ---------------------------------------------------------------------------------
 (2) _display_ea_ff                                        2     0      2   64430
                                             81 BANK0      2     0      2
                             _WaitMs
                             _printf
 ---------------------------------------------------------------------------------
 (2) _display_ea_cursor_off                                2     0      2   64340
                                             81 BANK0      2     0      2
                             _WaitMs
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                               8     4      4   61845
                                             73 BANK0      8     4      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   61170
                                             65 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   60106
                                             28 BANK0     37    31      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    9233
                                             47 COMRAM    11     0     11
                                              0 BANK0     28    28      0
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     692
                                             24 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     191
                                             18 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     191
                                             18 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     191
                                             18 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    7895
                                             47 COMRAM    10     0     10
                                              0 BANK0     22    22      0
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     412
                                             18 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     421
                                             18 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (3) _strncmp                                             11     5      6    6265
                                             18 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2915
                                             29 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _otoa                                                34    24     10    7167
                                             47 COMRAM    10     0     10
                                              0 BANK0     24    24      0
                                _pad
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    8749
                                             47 COMRAM    10     0     10
                                              0 BANK0     26    26      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             36 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                             18 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                             18 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    6222
                                             47 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    5943
                                             36 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     400
                                             18 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    2170
                                             29 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1670
                                             20 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0      93
                                             19 COMRAM     1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (10) _EUSART2_Write                                       1     1      0      62
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    3542
                                             25 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     349
                                             18 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2    1088
                                             18 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    1452
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _clear_MC_port                                        0     0      0    2411
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                             _WaitMs
 ---------------------------------------------------------------------------------
 (2) _TMR3_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR3_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MC_SendCommand                                       5     2      3    5300
                                             25 COMRAM     5     2      3
                      _EUSART1_Write
                             _WaitMs
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2    2374
                                             23 COMRAM     2     0      2
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (4) _TimerDone                                            3     3      0      31
                                             18 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           5     3      2     602
                                             18 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      62
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MC_ReceivePacket                                     5     3      2     431
                                             19 COMRAM     5     3      2
                       _EUSART1_Read
                _EUSART1_is_rx_ready
 ---------------------------------------------------------------------------------
 (3) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Read                                         1     1      0      37
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _APP_Initialize                                       0     0      0       0
                    _TMR0_StartTimer
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManagerLow                       9     9      0     330
                                              9 COMRAM     9     9      0
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (13) _TMR1_ISR                                            0     0      0     330
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (14) _TMR1_WriteTimer                                     2     0      2     240
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (14) _TMR1_DefaultInterruptHandler                        0     0      0      90
                       __T1Interrupt
 ---------------------------------------------------------------------------------
 (15) __T1Interrupt                                        3     3      0      90
                                              6 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _INTERRUPT_InterruptManagerHigh                      4     4      0     307
                                              2 COMRAM     4     4      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                _EUSART2_Receive_ISR *
               _EUSART2_Transmit_ISR *
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                           _INT3_ISR
                           _TMR0_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (17) _TMR3_ISR                                            0     0      0     240
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (18) _TMR3_WriteTimer                                     2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) _TMR3_DefaultInterruptHandler                        1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (18) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _INT3_ISR                                            0     0      0       0
                      _INT3_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT3_CallBack                                       0     0      0       0
                   Absolute function *
       _INT3_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART2_Receive_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART1_Receive_ISR                                 1     1      0      67
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_Tasks
     _APP_Initialize
       _TMR0_StartTimer
       _TMR1_StartTimer
     _MC_ReceivePacket
       _EUSART1_Read
       _EUSART1_is_rx_ready
     _MC_SendCommand
       _EUSART1_Write
       _WaitMs
         _StartTimer
         _TimerDone
     _StartTimer
     _TMR3_StartTimer
     _TMR3_StopTimer
     _TimerDone
     _WaitMs
       _StartTimer
       _TimerDone
     _clear_MC_port
       _EUSART1_Read
       _EUSART1_is_rx_ready
       _WaitMs
         _StartTimer
         _TimerDone
     _display_ea_cursor_off
       _WaitMs
         _StartTimer
         _TimerDone
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _display_ea_ff
       _WaitMs
         _StartTimer
         _TimerDone
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _display_ea_init
       _WaitMs
         _StartTimer
         _TimerDone
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _display_ea_line
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _display_ea_version
       _WaitMs
         _StartTimer
         _TimerDone
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _get_pfb
       ___fldiv
         ___flmul (ARG)
           ___flsub (ARG)
             ___fladd
       ___flmul
         ___flsub (ARG)
           ___fladd
       ___flsub
         ___fladd
       ___fltol
         _roundf (ARG)
           ___fladd
           ___flge
           ___flmul
             ___flsub (ARG)
               ___fladd
           ___flneg
           ___flsub
             ___fladd
       _atof
         _strtof
           ___fldiv
             ___flmul (ARG)
               ___flsub (ARG)
                 ___fladd
           ___fleq
           ___flge
           ___flmul
             ___flsub (ARG)
               ___fladd
           ___flneg
           ___lmul
           ___wmul
           ___xxtofl
           _isdigit
           _isspace
           _isxdigit
           _nanf
           _toupper
             _islower
       _roundf
         ___fladd
         ___flge
         ___flmul
           ___flsub (ARG)
             ___fladd
         ___flneg
         ___flsub
           ___fladd
       _strcpy
       _strtok
         _strcspn
           _strchr
         _strspn
           _strchr
       _truncf
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _otoa
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
     _strstr
       _strchr
       _strlen
       _strncmp
   _PIN_MANAGER_IOC
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
       _INT3_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR3_Initialize
       _TMR3_SetInterruptHandler

 _INTERRUPT_InterruptManagerLow (ROOT)
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
       __T1Interrupt
     _TMR1_WriteTimer *

 _INTERRUPT_InterruptManagerHigh (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
   _EUSART1_Transmit_ISR *
   _EUSART2_Receive_ISR *
   _EUSART2_Transmit_ISR *
   _INT0_ISR *
     _INT0_CallBack
       Absolute function(Fake) *
       _INT0_DefaultInterruptHandler *
   _INT1_ISR *
     _INT1_CallBack
       Absolute function(Fake) *
       _INT1_DefaultInterruptHandler *
   _INT2_ISR *
     _INT2_CallBack
       Absolute function(Fake) *
       _INT2_DefaultInterruptHandler *
   _INT3_ISR *
     _INT3_CallBack
       Absolute function(Fake) *
       _INT3_DefaultInterruptHandler *
   _TMR0_ISR *
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
   _TMR3_ISR *
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _TMR3_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100     52      52      12       32.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      C0      10       75.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      F3       8       94.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     60      6C       5       67.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3A      4C       1       80.9%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2BD       6        0.0%
DATA                 0      0     2BD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Jul 24 15:45:18 2019

                               _SPI_Initialize 5EA2                       _eusart1TxBufferRemaining 00CA  
                                 ___fldiv@aexp 0081                                   ___fldiv@bexp 0080  
                                 ___fldiv@sign 0079                                    _SSPSTATbits 000FC7  
                                           bsr 000FE0                            ___wmul@multiplicand 0015  
                                  __CFG_BORV$3 000000                                _timer0ReloadVal 004B  
                                 __CFG_CP0$OFF 000000                                   __CFG_CP1$OFF 000000  
                                 __CFG_CP2$OFF 000000                                   __CFG_CP3$OFF 000000  
                                          l165 5882                                            l344 58BA  
                                 __CFG_CPB$OFF 000000                                   __CFG_CPD$OFF 000000  
                   ??_INT0_SetInterruptHandler 0015                                _timer1ReloadVal 01E7  
                                          _abs 597C                     ??_INT3_SetInterruptHandler 0015  
                                          _pad 4F1E                           __end_of__T1Interrupt 5362  
                                          prod 000FF3                                            tosl 000FFD  
                                          wreg 000FE8                                     _TXSTA1bits 000FAC  
                                _INT0_CallBack 5DA8                                     _TXSTA2bits 000FBA  
                      __end_of_display_ea_line 5E6C                        __end_of_display_ea_init 5CB6  
                                 ___flmul@aexp 0061                                   ___flmul@bexp 0066  
                               _MC_SendCommand 50D2                                   ___flmul@sign 0060  
                                 ___flmul@temp 006B                                   ___flmul@prod 0067  
                             _MC_ReceivePacket 490C                                  _INT1_CallBack 5D86  
                                get_pfb@F13321 0187                                 ?_display_ea_ff 00B1  
                                 ___fltol@exp1 008C                     __end_of_display_ea_version 5C92  
                                         l1032 4F4C                                           l1050 3818  
                                         l1114 3C40                                           l1131 3A12  
                                         ?_abs 0025                                           l1052 3820  
                                         l1116 3C48                                           l1129 3A0A  
                                         l1075 3F7C                                           l1077 3F84  
                                         l1095 4510                                           l1504 4B56  
                              _timer3ReloadVal 01E3                                           l2175 24F0  
                                         l2095 2B3E                                           l2272 55C8  
                                         l2186 265C                                           l2195 271E  
                                         l2267 4DC6                                           l2196 26C6  
                                         l1901 42E6                                           l2197 2726  
                                         l1823 368E                                           l1914 59A4  
                                         l1834 36FC                                           l1835 36F8  
                                         l1677 4C3E                                           l1853 2BFC  
                                         l1870 2E9A                                           l1862 2E14  
                                         l1687 4E5C                                           l1863 2E10  
                                         l1784 3422                                           l1768 3350  
                                         l1945 44A0                                           l1793 3488  
                                         l1769 332E                                           l1794 3484  
                                         l1894 4268                                           ?_pad 0025  
                                         l9105 5840                                           l9113 5622  
                                         l9201 4170                                           l9115 5626  
                                         l9211 41CC                                           l9109 5856  
                                         l9133 4F44                                           l9143 4F9A  
                                         l9135 4F56                                           l9215 41E2  
                                         l9231 4614                                           l9305 56CE  
                                         l9129 4F36                                           l9313 5502  
                                         l9241 4666                                           l9083 58A0  
                                         l9139 4F6E                                           l9315 550E  
                                         l9219 4208                                           l9251 46C4  
                                         l9235 4638                                           l9411 404E  
                                         l9085 58A2                                           l9069 5870  
                                         l9095 4E96                                           l9255 46EA  
                                         l9247 46AE                                           l9239 4652  
                                         l9343 383A                                           l9601 440C  
                                         l9193 4136                                           l9329 37FC  
                                         l9441 44D4                                           l9265 4BB8  
                                         l9521 3A28                                           l9187 410E  
                                         l9347 384A                                           l9451 4526  
                                         l9267 4BCC                                           l9605 4440  
                                         l9381 39C2                                           l9357 3944  
                                         l9429 40B8                                           l9277 4C28  
                                         l9293 4E46                                           l9285 4DEA  
                                         l9199 415C                                           l9455 453E  
                                         l9287 4DFE                                           l9535 3A7C  
                                         l9527 3A5A                                           l9711 11C4  
                                         l9377 39AA                                           l9473 45CA  
                                         l9465 4598                                           l9625 4850  
                                         l9459 455C                                           l9627 485E  
                                         l9731 1314                                           l9707 1198  
                                         l9651 0FCA                                           l9581 4380  
                                         l9469 45B2                                           l9573 3BF8  
                                         l9549 3B0A                                           l9557 3B82  
                                         l9725 1272                                           l9709 11B6  
                                         l9661 0FE2                                           l9653 0FDA  
                                         l9399 3FC8                                           l9487 3C82  
                                         l9807 16CC                                           l9735 134A  
                                         l9497 3D70                                           l9905 1C2C  
                                         l9913 1C3E                                           l9817 1752  
                                         l9745 13B0                                           l9673 0FF4  
                                         l9665 0FE6                                           l9657 0FDE  
                                         l9649 0FC8                                           l9595 43D6  
                                         l9579 437C                                           l9827 17C4  
                                         l9755 1424                                           l9691 10CE  
                                         l9675 1036                                           l9597 43DE  
                                         l9589 43C6                                           l9941 1D7E  
                                         l9861 1A10                                           l9853 1966  
                                         l9845 18F8                                           l9837 1858  
                                         l9773 1576                                           l9765 14CC  
                                         l9669 0FEA                                           l9599 43E4  
                                         l9951 1DC6                                           l9935 1D4C  
                                         l9927 1CCA                                           l9687 10A2  
                                         STR_1 7FE3                                           STR_2 7EFB  
                                         l9689 10C0                                           STR_3 7F60  
                                         STR_4 7F92                                           l9947 1DBA  
                                         STR_5 7F92                                           STR_6 7F92  
                                         l9885 1AD2                                           l9877 1A62  
                                         l9797 1638                                           l9789 15C8  
                                         l9957 1DD6                                           STR_7 7F92  
                                         STR_8 7F92                                           l9975 5270  
                                         STR_9 7EB8                                           l9899 1BD2  
                                         l9979 5284                                           l9995 323A  
                                         l9999 323E                                           _LATA 000F89  
                                         _LATB 000F8A                                           _LATC 000F8B  
                                         _LATD 000F8C                                           _LATE 000F8D  
                                         i2l84 5722                                           i2l86 5730  
                                         i2l88 573E                                           _WPUB 000F5B  
                                _INT2_CallBack 5D64                          ??_EUSART2_Receive_ISR 0001  
                                 get_pfb@token 034A                                  _EUSART1_Write 58A6  
                                _EUSART2_Write 586E                                           _d_ff 7DBA  
                                         abs@a 0025                             __size_of_APP_Tasks 0F0C  
                                         _dbuf 0160                                 __T1Interrupt@i 0009  
                                         _atof 5BD0                                           _atoi 436A  
                                         _ctoa 54F0                                           _main 5E6C  
                                         _dtoa 37A4                                           _nanf 5CFE  
                                ?_EUSART1_Read 0001                                           _prec 003D  
                              _TMR0_StartTimer 5F88                                           _otoa 3F5E  
                                         _nout 00C2                                           pad@i 002C  
                                         pad@p 0029                                           fsr0h 000FEA  
                                         fsr1h 000FE2                                           indf0 000FEF  
                                         fsr2h 000FDA                                           fsr0l 000FE9  
                                         indf1 000FE7                                           indf2 000FDF  
                                         fsr1l 000FE1                                           pad@w 002E  
                                         fsr2l 000FD9                                           _stoa 44AA  
                                         btemp 004D                                           _utoa 3C22  
                                         _xtoa 39EC                                  _INT3_CallBack 5D42  
            __size_of_INT2_SetInterruptHandler 000A                      ?_INT2_SetInterruptHandler 0013  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 0070                                  __CFG_IESO$OFF 000000  
                              ___fldiv@new_exp 007A                         __end_of_SPI_Initialize 5EB0  
                 __end_of_EUSART2_Transmit_ISR 5B50                                _TMR3_Initialize 578A  
                   ??_TMR1_SetInterruptHandler 0015                                  __CFG_MCLRE$ON 000000  
                                  _strtof$3700 009C                                    _strtof$3710 008E  
                                  _strtof$3711 0090                                    _strtof$3712 0092  
                                  _strtof$3713 0094                                    _strtof$3714 0096  
                                  _strtof$3715 0098                                    _strtof$3716 009A  
                                  _strtof$3699 008C                                   ___param_bank 000000  
                                        ??_abs 0027                                          ??_pad 002B  
                      __end_of_TMR0_Initialize 5698                               __end_of_INT0_ISR 5F6E  
                             __end_of_INT1_ISR 5F5E                               __end_of_INT2_ISR 5F4E  
                             __end_of_INT3_ISR 5F3E                 ??_TMR0_DefaultInterruptHandler 0001  
               __size_of_OSCILLATOR_Initialize 0012                  __end_of_OSCILLATOR_Initialize 5E92  
                                        l10031 32A6                                          l10023 3286  
                                        l10201 354C                                          l11003 2A9A  
                                        l10107 33AC                                          l10019 3282  
                                        l10221 358C                                          l11005 2AA8  
                                        l10125 3446                                          l10141 3466  
                                        l10117 3412                                          l10061 32E2  
                                        l10303 3764                                          l10135 345C  
                                        l11031 53BE                                          l11201 4C80  
                                        l10313 379A                                          l10217 3588  
                                        l11025 2B68                                          l11009 2AE4  
                                        l10161 34CE                                          l10073 333C  
                                        l11105 5924                                          l11041 5416  
                                        l11033 53C6                                          l10315 379C  
                                        l10307 378E                                          l10243 35EE  
                                        l10235 35D6                                          l10411 2DDA  
                                        l11019 2B2C                                          l10075 3340  
                                        l11131 4DBE                                          l11123 4D7C  
                                        l11115 4D3E                                          l11221 4CDA  
                                        l10261 3666                                          l10253 363E  
                                        l10229 35C0                                          l10405 2DBC  
                                        l10173 34FC                                          l11063 5AEE  
                                        l11311 49EC                                          l10431 2E58  
                                        l10335 2BA8                                          l10511 4296  
                                        l10175 34FE                                          l11039 540E  
                                        l11073 58A8                                          l11217 4CCA  
                                        l10273 36A4                                          l10353 2BE8  
                                        l10337 2BAC                                          l10513 429C  
                                        l10505 4278                                          l10169 34F4  
                                        l10097 3396                                          l10089 3374  
                                        l11145 4784                                          l11307 49C8  
                                        l11235 4D0A                                          l11227 4CE2  
                                        l10267 368C                                          l10435 2E76  
                                        l10363 2C1A                                          l10355 2BEC  
                                        l10339 2BBC                                          l10523 430C  
                                        l10515 42A8                                          l10099 339A  
                                        l11171 2F8C                                          l11323 4FD2  
                                        l11331 5028                                          l11309 49CE  
                                        l11253 5A40                                          l11229 4CEE  
                                        l10197 3548                                          l10461 50B0  
                                        l10541 4358                                          l10525 4318  
                                        l10517 42CE                                          l10605 1E26  
                                        l11181 30F2                                          l11149 479C  
                                        l11087 58D8                                          l11095 5DF6  
                                        l10279 36C2                                          l10447 2EB8  
                                        l10711 2126                                          l10615 1E8A  
                                        l10607 1E2A                                          l11191 31FC  
                                        l11167 2F3A                                          l10551 58F8  
                                        l11431 010C                                          l11089 58DA  
                                        l10465 50CE                                          l10457 507C  
                                        l10481 4B40                                          l10473 4AF6  
                                        l10705 210C                                          l10633 1EBA  
                                        l11185 3174                                          l11177 2FD4  
                                        l11329 5000                                          l11425 00F4  
                                        l11409 0096                                          l11259 5A5A  
                                        l10299 3740                                          l10571 51FE  
                                        l10811 242A                                          l10723 2166  
                                        l10707 210E                                          l10635 1EC0  
                                        l10627 1EAA                                          l11451 019C  
                                        l11427 00FE                                          l11293 496A  
                                        l10477 4B2A                                          l10901 272C  
                                        l10805 241A                                          l10741 224C  
                                        l10653 1F4C                                          l10637 1EC2  
                                        l10629 1EB0                                          l11701 0DC4  
                                        l11613 0980                                          l11621 09E0  
                                        l11525 0584                                          l11461 01E8  
                                        l11453 01A4                                          l11445 0166  
                                        l10583 5D3E                                          l11359 50DA  
                                        l10591 52CA                                          l10487 4B8E  
                                        l10495 5ABA                                          l10911 276C  
                                        l10815 2448                                          l10823 2498  
                                        l10751 2272                                          l10735 21E0  
                                        l10655 1F6C                                          l11631 0A86  
                                        l11527 05C8                                          l11471 02A4  
                                        l11289 4946                                          l10593 52F0  
                                        l10809 2428                                          l10745 225A  
                                        l10657 1F72                                          l11713 0E80  
                                        l11617 09D4                                          l11481 0332  
                                        l11473 02EA                                          l10843 2528  
                                        l10819 246A                                          l10763 22C0  
                                        l10691 20AC                                          l10659 1F74  
                                        l11715 0E90                                          l11651 0C0A  
                                        l11627 0A32                                          l11635 0A9A  
                                        l11563 0792                                          l11491 03C0  
                                        l11459 01DC                                          l10917 2780  
                                        l10861 25BC                                          l10853 2580  
                                        l10837 24FC                                          l10781 23A6  
                                        l10749 226E                                          l10693 20AE  
                                        l10677 2020                                          l11581 080E  
                                        l11573 07D8                                          l11493 0404  
                                        l11477 030E                                          l10951 28D2  
                                        l10855 2590                                          l10775 233A  
                                        l10783 23AA                                          l10679 2022  
                                        l10687 2072                                          l11399 3F52  
                                        l11559 073E                                          l11727 0EEA  
                                        l10865 25D8                                          l10849 2546  
                                        l10785 23AE                                          l10689 2086  
                                        l11745 0F7A                                          l11649 0BC6  
                                        l11585 0822                                          l11577 07EC  
                                        l11729 0F24                                          l10971 2966  
                                        l10947 28C6                                          l10795 23EC  
                                        l11691 0DA0                                          l10981 29F2  
                                        l10869 2600                                          l11685 0D22  
                                        l11693 0DA8                                          l10991 2A3A  
                                        l10975 29A4                                          l10967 2956  
                                        l10959 28F4                                          l10879 2674  
                                        l10977 29B6                                          l11689 0D66  
                                        l11769 5E7A                                          l10995 2A4C  
                                        l10999 2A5C                                  ___fltol@sign1 008B  
                              __end_of___aodiv 422A                                          ?_atof 00A8  
                                        ?_atoi 001A                                          ?_ctoa 0030  
                              __end_of___fladd 351A                                          ?_main 0001  
                                        ?_dtoa 0030                                          ?_nanf 0013  
                              __end_of___aomod 470C                                __end_of___fldiv 37A4  
                              __end_of___flneg 5ACC                                          _EEADR 000F74  
                                        STR_10 7E52                                          STR_11 7E28  
                                        STR_20 7DFE                                          STR_12 7DD4  
                                        STR_21 7E67                                          STR_13 7F28  
                                        STR_30 7EEF                                          STR_22 7E13  
                                        STR_14 7F28                                          STR_31 7F12  
                                        STR_23 7DE9                                          STR_15 7F87  
                                        STR_40 7F8E                                          STR_32 7FB6  
                                        STR_24 7E91                                          STR_16 7F4E  
                                        STR_41 7F95                                          STR_33 7F79  
                                        STR_25 7F31                                          STR_17 7F45  
                                        STR_50 7DE7                                          STR_42 7F9C  
                                        STR_34 7FAA                                          STR_26 7ED6  
                                        STR_18 7FFC                                          STR_51 7FCB  
                                        STR_43 7FA3                                          STR_35 7F69  
                                        STR_27 7FB0                                          STR_19 7E7C  
                                        STR_44 7F1D                                          STR_36 7EE3  
                                        STR_28 7F71                                          STR_53 7FCB  
                                        STR_45 7F57                                          STR_37 7F80  
                                        STR_29 7F07                                          STR_62 7FCC  
                                        STR_46 7DE7                                          STR_38 7EA6  
                                        STR_71 7FEA                                          STR_55 7FCF  
                                        STR_47 7DBC                                          STR_39 7E3D  
                                        STR_80 7FD7                                          STR_48 7EC7  
                                        STR_57 7FCF                                          STR_73 7FED  
                                        STR_49 7F92                                          STR_66 7FD0  
                                        STR_90 7FF3                                          STR_75 7FED  
                                        STR_85 7FD8                                          STR_69 7FEA  
                                        STR_93 7FD3                                          STR_78 7FD7  
                                        STR_95 7FD3                                          STR_88 7FF3  
                              __end_of___flmul 2ECE                                          ?_otoa 0030  
                              __end_of___flsub 5618                                __end_of___fltol 4D1C  
                              _TMR1_StartTimer 5F84                                          ?_stoa 001E  
                                        ?_utoa 0030                                          u11010 5A36  
                                        u11020 5A38                                          u11130 466A  
                                        u11210 4E02                                          u11051 413C  
                                        u11300 380E                                          u12100 1200  
                                        u11070 4174                                          u12110 120C  
                                        u11240 56CA                                          u11320 3834  
                                        u12200 147C                                          u12040 1108  
                                        _T0CON 000FD5                                          u11161 4B98  
                                        u11330 3954                                          u12050 110A  
                              __end_of___lodiv 4C60                                          u11260 37CE  
                                        u11420 3F70                                          u11180 4BD0  
                                        u12300 17C2                                          u12140 12CA  
                                        u12060 1116                                          u13100 3772  
                                        u11350 3976                                          u11270 37D0  
                                        u11430 402A                                          u11351 3974  
                                        u11511 44B4                                          ?_xtoa 0030  
                                        u11360 3984                                          u11440 405C  
                                        u11600 45DE                                          u12400 1B2A  
                                        u12320 1856                                          u12240 15F4  
                                        u12160 13A2                                          u13200 2D7E  
                                        _T1CON 000FCD                                          u10810 4E8E  
                                        u11370 3988                                          u12090 11FE  
                                        u13050 36F2                                          u14010 236C  
                                        u11435 4018                                          u12307 17C0  
                                        u11460 407E                                          u11620 3C34  
                                        u12260 16C0                                          u12180 13E4  
                                        u14100 24CA                                          u14020 2392  
                                        u13205 2D74                                          u10830 4ED6  
                                        u11390 3994                                          u11470 408C  
                                        u11710 3A78                                          u14110 24CC  
                                        u14030 23B2                                          u12327 1846  
                                        u11480 4090                                          u11560 4552  
                                        u11720 3AAE                                          u12440 1C72  
                                        u12280 1750                                          u13240 2E0A  
                                        u14200 25C8                                          u12600 3314  
                                        u14025 2388                                          u10850 5646  
                                        u10930 598A                                          u11570 457C  
                                        u11650 3D9C                                          u11810 3BB6  
                                        u11730 3AB0                                          u13090 374E  
                                        u13330 50CA                                          u14210 25E8  
                                        u12610 3316                                          u11651 3D9A  
                                        u11811 3BB4                                          u12267 16B4  
                                        u11660 3DAA                                          u10940 5A06  
                                        u11820 3BC4                                          u12460 1D22  
                                        u12380 1A8E                                          u15110 5120  
                                        u11670 3DAE                                          u10950 5A08  
                                        u10870 59D6                                          u11830 3BC8  
                                        u11750 3AE8                                          u13190 2C08  
                                        u12287 174E                                          u15040 49AE  
                                        u15120 5138                                          u10960 5974  
                                        u10880 59D8                                          u11760 3AEA  
                                        u13280 2E66                                          u13520 51D2  
                                        u14400 2814                                          u13600 1E86  
                                        u12640 3358                                          _T3CON 000FB1  
                                        u10857 563C                                          u11577 4572  
                                        u14225 2604                                          u11930 487E  
                                        u10970 5976                                          u11690 39FE  
                                        u13290 2E84                                          u13530 51FA  
                                        u14410 2816                                          u14330 2754  
                                        u14170 256E                                          u14235 263C  
                                        u11860 43C2                                          u10980 55B0  
                                        u11780 3B5E                                          u13460 4322  
                                        u14260 26A2                                          u15300 07FE  
                                        u15117 5116                                          u15046 49B0  
                                        u10990 55B2                                          u11790 3B94  
                                        u14430 2886                                          u14350 277C  
                                        u14270 26A4                                          u12590 3304  
                                        u11880 4470                                          u14440 2888  
                                        u13720 1FD2                                          u15080 503E  
                                        u15320 0834                                          u15240 0204  
                                        u11937 4874                                __end_of___lomod 4E7E  
                                        u11785 3B4C                                          u15090 50FA  
                                        u11890 4472                                          u11970 48D2  
                                        u14370 27BE                                          u13570 1E42  
                                        u12850 34DA                                          u12770 346A  
                                        u11980 48F2                                          u14380 27C0  
                                        u13820 20F0                                          u13660 1F20  
                                        u13580 1E44                                          u14620 53FA  
                                        u13910 2212                                          u12790 347E  
                                        u15246 0206                                          u11975 48CC  
                                        u15351 0934                                          u13920 2238  
                                        u14640 544A                                          u15097 50F0  
                                        u11977 48C2                                          u13770 2048  
                                        u14810 2F0E                                          u11987 48E8  
                                        u14900 4C6E                                          u14820 2F28  
                                        u13925 222E                                          u14910 4C9E  
                                        u14830 2F58                                          u14815 2F02  
                                        u13880 21C0                                          u14760 4752  
                                        u13890 21C2                                          u14850 2F9E  
                                        u14770 4772                                          u14915 4C94  
                                        u14835 2F4E                                          u13980 231A  
                                        u14780 4794                                          u14765 4748  
                                        u14950 4CF4                                          u13990 231C  
                                        u14790 47BC                                          u14880 31C8  
                                        u14795 47B2                                          u14885 31BC  
                                        i1l271 0048                                          i2l250 4A30  
                                        i2l260 4AA4                                          i2l252 4A3C  
                                        i2l244 4A0C                                          i2l350 5B78  
                                        i2l174 5B4C                                          i2l254 4A54  
                                        i2l246 4A18                                          i2l256 4A6C  
                                        i2l248 4A24                                          i2l258 4A84  
                                        i2l259 4AAE                                          i2l356 5756  
                                get_pfb@offset 034E                                  get_pfb@mphase 0342  
                       __end_of_MC_SendCommand 514C                                   vfpfcnvrt@fmt 007E  
                                        _TMR0H 000FD7                                   vfpfcnvrt@llu 0099  
                                        _TMR1H 000FCF                                          _TMR0L 000FD6  
                                        _TMR1L 000FCE                                          _TMR3H 000FB3  
                                        _TMR3L 000FB2                                          _TRISA 000F92  
                                        _TRISB 000F93                                 ?_INT0_CallBack 0001  
                                        _TRISC 000F94                                          _TRISD 000F95  
                                        _TRISE 000F96                                __end_of_d_reset 7DBA  
            __size_of_TMR0_SetInterruptHandler 000A                                  __CFG_WRT0$OFF 000000  
                                __CFG_WRT1$OFF 000000                                  __CFG_WRT2$OFF 000000  
            __size_of_TMR3_SetInterruptHandler 000A                            ___lmul@multiplicand 0017  
                    ?_TMR0_SetInterruptHandler 0013                                  __CFG_WRT3$OFF 000000  
                         _EUSART1_Transmit_ISR 5B50                      ?_TMR3_SetInterruptHandler 0013  
                               __CFG_EBTR0$OFF 000000                                 __CFG_FCMEN$OFF 000000  
                               __CFG_EBTR1$OFF 000000                                 __CFG_EBTR2$OFF 000000  
                               __CFG_EBTR3$OFF 000000                               __end_of_TMR0_ISR 5B24  
                              __end_of_get_pfb 3F5E                               __end_of_TMR1_ISR 5A9E  
                                __CFG_WRTB$OFF 000000                               __end_of_TMR3_ISR 5712  
                                __CFG_WRTC$OFF 000000                                  __CFG_WRTD$OFF 000000  
                               ?_INT1_CallBack 0001                                 __CFG_EBTRB$OFF 000000  
               ??_TMR3_DefaultInterruptHandler 0001                        __end_of_PIN_MANAGER_IOC 5F78  
                                        _flags 003F                 ??_INT1_DefaultInterruptHandler 0001  
                                        _fputc 4E7E                                __end_of_isalpha 597C  
                                        _fputs 5836                                __end_of_isdigit 5A3E  
                                        atof@s 00A8                                          atoi@n 0027  
                                        pad@fp 0025                                          atoi@s 001A  
                                        _width 003B                                          ctoa@c 0032  
                                        _putch 5F2C                                          _toint 7D0C  
                                        ctoa@w 0033                                          dtoa@d 0032  
                                        dtoa@i 0078                                          dtoa@n 0070  
                                        dtoa@p 006A                                          dtoa@s 006E  
                                        dtoa@w 006C                                 ?_INT2_CallBack 0001  
                                        nanf@s 0013                                          nanf@u 0017  
                              __end_of_islower 59DE                                __end_of_isspace 56D6  
                     _INT1_SetInterruptHandler 5EF0                                 ?_EUSART1_Write 0001  
                      __end_of_TMR1_Initialize 57FE                                 ?_EUSART2_Write 0001  
                              __end_of_isupper 5A0E                                          pclath 000FFA  
                                        tablat 000FF5                                          otoa@d 0032  
                                        otoa@i 0076                                          otoa@n 006E  
                                        otoa@p 0068                                          otoa@t 006A  
                                        otoa@w 006C                                 ??_EUSART1_Read 0013  
                                        plusw1 000FE3                                          plusw2 000FDB  
                                        stoa@i 002A                                          stoa@l 0032  
                                        stoa@p 0030                                          stoa@s 0020  
                                        stoa@w 002C                                          ttemp5 004E  
                                        ttemp6 0051                                          ttemp7 0055  
                               ?_INT3_CallBack 0001                                          utoa@d 0032  
                                        utoa@i 0074                                          utoa@n 006C  
                                        utoa@p 0068                                          utoa@w 006A  
                                        status 000FD8                                          wtemp8 004E  
                              __end_of_sprintf 53B4                                          xtoa@c 007A  
                                        xtoa@d 0032                                          xtoa@i 0078  
                                        xtoa@n 0070                                          xtoa@p 006C  
                                        xtoa@w 006E                                          xtoa@x 003A  
                              __end_of_strcspn 5454                                __end_of_strncmp 490C  
                              __end_of_toupper 55D2                               ___lodiv@dividend 0013  
                              _TMR1_WriteTimer 5E04                 ?_INTERRUPT_InterruptManagerLow 0001  
                              ?_SPI_Initialize 0001          __end_of_EUSART2_SetTxInterruptHandler 5F0E  
       __size_of_EUSART2_SetTxInterruptHandler 000A                  _EUSART2_SetTxInterruptHandler 5F04  
                                 _toupper$3759 001F                                __initialization 514C  
                                 __end_of_d_ff 7DBC                           display_ea_init@pause 00B1  
                                 __end_of_atof 5BF8                                   __end_of_atoi 44AA  
                                 __end_of_ctoa 553E                     __end_of_EUSART1_Initialize 54F0  
                                 __end_of_main 5E80                                   __end_of_dtoa 39EC  
                                 __end_of_nanf 5D20                                   __end_of_otoa 40E2  
                        __end_of_clear_MC_port 5A6E                                   __end_of_stoa 45E8  
                                 __end_of_utoa 3DD8                                   __end_of_xtoa 3C22  
                                       ??_atof 003B                                         ??_atoi 001C  
                                       ??_ctoa 0033                                         ??_main 003B  
                                       ??_dtoa 0060                                         ??_nanf 0017  
                            __end_of_APP_Tasks 0F80                                         ??_otoa 0060  
                                       ??_stoa 0022                                         ??_utoa 0060  
                                       ??_xtoa 0060                                _TMR3_StartTimer 5F7C  
                                __activetblptr 000002                          _TMR3_InterruptHandler 01E1  
                              ?_MC_SendCommand 001A                                 __CFG_RETEN$OFF 000000  
                        ?_EUSART1_Transmit_ISR 0001                               ___lodiv@quotient 0023  
                             ?_display_ea_line 00B1                               ?_display_ea_init 00B1  
                              ??_display_ea_ff 003B                        __end_of_TMR0_StartTimer 5F8C  
                   __end_of_EUSART2_Initialize 54A2                       _eusart2TxBufferRemaining 00CB  
                                       ?_fputc 0015                                         STR_100 7FD4  
                                       STR_110 7FDB                                         ?_fputs 001E  
                                       STR_103 7FF0                                         STR_120 7FF6  
                                       STR_105 7FF0                                         STR_115 7FDC  
                                       STR_123 7FDF                                         STR_108 7FDB  
                                       STR_125 7FDF                                         STR_141 7FF9  
                                       STR_134 7FE0                                         STR_118 7FF6  
                                       STR_150 7F3C                                         STR_143 7FF9  
                                       STR_127 7FC7                                         STR_151 7F33  
                                       STR_152 7FBF                                         STR_129 7FC7  
                                       STR_145 7FE7                                         STR_138 7FC8  
                                       STR_147 7FE7                                         STR_155 7FC3  
                                       STR_156 7FBB                                         _EEDATA 000F73  
                                       STR_158 7DD3                                         _EECON2 000F7E  
                                       _ANCON0 000F5D                                         _ANCON1 000F5C  
                                       ?_putch 0001                                 TimerDone@timer 0015  
                                       _T1GCON 000FAA                                         _T3GCON 000FB0  
                      TMR1_WriteTimer@timerVal 0007                   __size_of_EUSART1_is_rx_ready 0004  
                      __end_of_TMR3_Initialize 57C4                                __CFG_BBSIZ$BB2K 000000  
                               __CFG_WDTEN$OFF 000000                                         i1l8157 5E16  
                                       i1l7831 5310                                         i1l7835 533E  
                                       _TABLAT 000FF5                                         i2l8177 5E32  
                                       i2l8439 5B74                                         i2l8457 5786  
                                       i2l8393 5C44                                         i2l8385 5C28  
                                       i2l8379 5B48                               ??_APP_Initialize 0013  
                                       _RCREG1 000FAE                                         _RCREG2 000F7A  
                                       _RCSTA1 000FAB                                         _RCSTA2 000FA6  
                                       _OSCCON 000FD3                                  vfpfcnvrt@done 0088  
                                       _SPBRG1 000FAF                                         _SPBRG2 000F7B  
                                       _SSPADD 000FC8                                         _SSPBUF 000FC9  
                                       _TXREG1 000FAD                                         _TXREG2 000F79  
                             __end_of___xxtofl 436A                                         _CrData 7D10  
                                       _TXSTA1 000FAC                                         _TXSTA2 000FBA  
                              _TMR3_WriteTimer 5E20                                         _RsData 7DA4  
                               __CFG_XINST$OFF 000000                                         _WaitMs 5DE8  
         __end_of_TMR1_DefaultInterruptHandler 5F74          __size_of_TMR1_DefaultInterruptHandler 0006  
                 _TMR1_DefaultInterruptHandler 5F6E                                   vfprintf@cfmt 00A7  
                                       ___flge 4AC2                                         ___fleq 5048  
                                       ___lmul 5260                        __end_of_TMR1_StartTimer 5F88  
                                    ??___aodiv 0023                                      ??___fladd 001B  
                                    ??___aomod 0023                                         ___wmul 5C48  
                                    ??___fldiv 0037                                      ??___flneg 0017  
                               __CFG_STVREN$ON 000000                                      ??___flmul 0033  
                                    ??___flsub 002B                                      ??___fltol 0087  
                                    ??___lodiv 0023                                      ??___lomod 0023  
                              MC_SendCommand@i 001D                               ?_TMR0_Initialize 0001  
                        __size_of__T1Interrupt 0056                                         clear_0 5172  
                                       clear_1 517E                                         clear_2 518A  
                                       clear_3 5196                                         _printf 5BF8  
                                       pad@buf 0027                                         ctoa@fp 0030  
                                       _roundf 2ECE                                ??_INT0_CallBack 0001  
                                       dtoa@fp 0030                                      ??_get_pfb 003B  
                                       _strchr 58DE                                         _strcpy 5914  
                                       _strlen 5618                                         _truncf 470C  
                                       _strtof 1E0A                                         _strtok 4D1C  
                                       _strspn 53B4                                         _strstr 4FB4  
                           __size_of_TimerDone 0022                               __end_of_isxdigit 5206  
                                       fputc@c 0015           __end_of_INT2_DefaultInterruptHandler 5F56  
        __size_of_INT2_DefaultInterruptHandler 0008                   _INT2_DefaultInterruptHandler 5F4E  
                                       fputs@c 0022                                         fputs@i 0023  
                                       fputs@s 001E                                      ??_isalpha 0015  
                                    ??_isdigit 0015                                ??_INT1_CallBack 0001  
                                    ??_islower 0015                                   __mediumconst 7CF6  
                                    ??_isspace 0015                                         otoa@fp 0030  
                                       tblptrh 000FF7                                      ??_isupper 0015  
                                       tblptrl 000FF6                                         tblptru 000FF8  
                         _EUSART2_Transmit_ISR 5B24                                         stoa@cp 002E  
                                       stoa@fp 001E                                ??_INT2_CallBack 0001  
                             __end_of_vfprintf 530C                                ??_EUSART1_Write 0013  
                                       utoa@fp 0030                                ??_EUSART2_Write 0013  
                                   _StartTimer 5BA6       INT3_SetInterruptHandler@InterruptHandler 0013  
     INT2_SetInterruptHandler@InterruptHandler 0013       INT1_SetInterruptHandler@InterruptHandler 0013  
     INT0_SetInterruptHandler@InterruptHandler 0013       TMR3_SetInterruptHandler@InterruptHandler 0013  
     TMR1_SetInterruptHandler@InterruptHandler 0013       TMR0_SetInterruptHandler@InterruptHandler 0013  
                             ?_PIN_MANAGER_IOC 0001                                      ??_sprintf 003B  
                      __end_of_TMR1_WriteTimer 5E20                                         xtoa@fp 0030  
                                    ??_strcspn 001C                                _eusart1RxBuffer 0200  
                                    ??_strncmp 0019                                      ??_toupper 001B  
               __size_of_display_ea_cursor_off 0024                  __size_of_INTERRUPT_Initialize 0018  
                              ??_INT3_CallBack 0001                  __end_of_display_ea_cursor_off 5CFE  
                              _eusart1TxBuffer 0240                                _eusart2RxBuffer 010E  
                                   ___flge@ff1 0013                                     ___flge@ff2 0017  
                             ?_TMR1_Initialize 0001                                   ___xxtofl@arg 001D  
                                 ___xxtofl@exp 001C               ??_INTERRUPT_InterruptManagerHigh 0003  
              ?_INTERRUPT_InterruptManagerHigh 0001                              _SYSTEM_Initialize 5B7C  
                                 ___xxtofl@val 0013                                     ___fleq@ff1 0013  
                                   ___fleq@ff2 0017                                _eusart2TxBuffer 0280  
                                   __accesstop 0060                        __end_of__initialization 519C  
                           display_ea_ff@pause 00B1                                      ?_INT0_ISR 0001  
                                    ?_INT1_ISR 0001                                     ___flneg@f1 0013  
                                    ?_INT2_ISR 0001                                      ?_INT3_ISR 0001  
                           ?_SYSTEM_Initialize 0001                           APP_Tasks@mc_response 011E  
                                ___rparam_used 000001                                     ___fltol@f1 0083  
                                 __T1Interrupt 530C                                 __pcstackCOMRAM 0001  
                                 __pidataBANK1 5206                            ??_SYSTEM_Initialize 0017  
                      __end_of_TMR3_StartTimer 5F80                       __end_of_MC_ReceivePacket 49F0  
                                    ?_TMR0_ISR 0001                                      ?_TMR1_ISR 0001  
                ?_TMR1_DefaultInterruptHandler 0001                                      ?_TMR3_ISR 0001  
                                __end_of_fputc 4F1E                                  __end_of_fputs 586E  
               ?_EUSART2_SetTxInterruptHandler 0013                                  __end_of_putch 5F36  
                                __end_of_toint 7D10                           __end_of_EUSART1_Read 5AF8  
                       ??_EUSART1_Transmit_ISR 0001                    __size_of_EXT_INT_Initialize 004A  
                        ?_EUSART2_Transmit_ISR 0001               __end_of_INT2_SetInterruptHandler 5EF0  
                  __end_of_EUSART1_Receive_ISR 578A                  ?_INT2_DefaultInterruptHandler 0001  
                             ?_TMR0_StartTimer 0001                                        ??_fputc 0019  
                    __end_of_SYSTEM_Initialize 5BA6                                        ??_fputs 0022  
                      __end_of_TMR3_WriteTimer 5E3C                                        ??_putch 0014  
                                _eusart1RxHead 0043                                  _eusart2RxHead 0048  
                                _eusart1TxHead 0045                                  _eusart1RxTail 0042  
                                _eusart2TxHead 004A                                     __pbssBANK0 00C0  
                                   __pbssBANK1 0100                                     __pbssBANK2 0200  
                                _eusart2RxTail 0047                                  _eusart1TxTail 0044  
            _EUSART1_TxDefaultInterruptHandler 01EB                                  _eusart2TxTail 0049  
              ??_EUSART1_SetRxInterruptHandler 0015                               ?_TMR3_Initialize 0001  
                              __CFG_PLLCFG$OFF 000000                          _INT0_InterruptHandler 01DF  
                                   ??_INT0_ISR 0001                                     ??_INT1_ISR 0001  
                                   ??_INT2_ISR 0001                                     ??_INT3_ISR 0001  
                                   __pnvCOMRAM 004B                              __end_of_TimerDone 5D42  
                                      ?_WaitMs 0018                             _display_ea_version 5C6E  
                                      ?___flge 0013                                        ?___fleq 0013  
             __end_of_TMR0_SetInterruptHandler 5EDC                                        ?___lmul 0013  
             __end_of_TMR3_SetInterruptHandler 5EC8                                        ?___wmul 0013  
                             ?_TMR1_StartTimer 0001                                     ??_TMR0_ISR 0001  
                                   ??_TMR1_ISR 000A                                     ??_TMR3_ISR 0003  
                               ___lmul@product 001B                            ?_display_ea_version 00B1  
                                      ?_printf 00A9                                        ?_roundf 0037  
                                      ?_strchr 0013                                        ?_strcpy 0013  
                                      ?_strlen 0013                                        ?_truncf 0013  
                              StartTimer@count 0013                                        ?_strtof 0082  
                                      ?_strtok 001F                                        ?_strspn 0018  
                                      ?_strstr 001E                                StartTimer@timer 0017  
                   ??_INT1_SetInterruptHandler 0015                               __CFG_CANMX$PORTB 000000  
                                    ?___xxtofl 0013                                        _REFOCON 000F9A  
                                      _OSCCON2 000FD2                    __end_of_EUSART2_Receive_ISR 5C48  
                           __size_of_vfpfcnvrt 0E8A                                        _TBLPTRH 000FF7  
                                      _TBLPTRL 000FF6                                        _TBLPTRU 000FF8  
                                      _OSCTUNE 000F9B                                        _SPBRGH1 000F7D  
                                      _SPBRGH2 000F7C                                    ?_StartTimer 0013  
                            __end_of_d_cur_off 7DB4                                        _SSPCON1 000FC6  
                                   _build_date 7CF7                                        _SSPSTAT 000FC7  
                                   _build_time 7D03                               ?_TMR1_WriteTimer 0007  
                             ___lomod@dividend 0013                               ??_SPI_Initialize 0013  
                         ??_display_ea_version 003B                              __end_of_d_version 7DB7  
            __size_of_INT0_SetInterruptHandler 000A                        __size_of_TMR3_StopTimer 0004  
            __size_of_INT3_SetInterruptHandler 000A                      ?_INT0_SetInterruptHandler 0013  
                    ?_INT3_SetInterruptHandler 0013                                __CFG_PWRTEN$OFF 000000  
                                      __Hparam 0000                        MC_ReceivePacket@Message 0014  
                                    ?_isxdigit 0013                                        __Lparam 0000  
                              __size_of_WaitMs 001C                                __size_of___flge 00D0  
                              __size_of___fleq 008A                                        ___aodiv 40E2  
                                      ___fladd 320E                                        ___aomod 45E8  
                                      ___fldiv 351A                                        ___flneg 5A9E  
                              __size_of___lmul 0056                                        ___flmul 2B7A  
                             ?_TMR3_StartTimer 0001                                        ___flsub 55D2  
                                      ___fltol 4C60                                __size_of___wmul 0026  
                                      ___lodiv 4B92                                        ___lomod 4DD0  
                                    ?_vfprintf 00A1                               ??_MC_SendCommand 001D  
                          _EUSART1_is_rx_ready 5F80                                        _appData 018D  
                                      _d_reset 7DB7                                        __pcinit 514C  
                                      __ramtop 0F00                                        __ptext0 5E6C  
                                      __ptext1 5B7C                                        __ptext2 578A  
                                      __ptext3 5EBE                                        __ptext4 57C4  
                                      __ptext5 5EC8                                        __ptext6 565A  
                                      __ptext7 5ED2                                        __ptext8 5EA2  
                                      __ptext9 57FE                                __size_of_printf 0028  
                                      _get_pfb 3DD8                                        _cr_text 018B  
                                    _T0CONbits 000FD5                 ??_TMR1_DefaultInterruptHandler 000A  
                              __size_of_roundf 0340                                __size_of_strchr 0036  
                              __size_of_strcpy 0034                                __size_of_strlen 0042  
                              __size_of_truncf 011A                                      _T1CONbits 000FCD  
                              __size_of_strtof 0D70                                __size_of_strtok 00B4  
                              __size_of_strspn 0050                                __size_of_strstr 0094  
                        _OSCILLATOR_Initialize 5E80                         ??_EUSART2_Transmit_ISR 0001  
                                 __size_of_abs 0032                                   __size_of_pad 0096  
                                      _isalpha 5948                                        _isdigit 5A0E  
                                   ??___xxtofl 0017                                      _T3CONbits 000FB1  
            __size_of_TMR1_SetInterruptHandler 000A                             _EUSART1_Initialize 54A2  
                                      _islower 59AE                       ??_PIN_MANAGER_Initialize 0013  
                                      _isspace 5698                      ?_TMR1_SetInterruptHandler 0013  
                            __CFG_MSSPMSK$MSK7 000000                                        _isupper 59DE  
                                    _APP_Tasks 0074                                        atoi@neg 0020  
                                      _rs_text 0189                     __size_of_SYSTEM_Initialize 002A  
                                      _sprintf 5362                                        _strcspn 5404  
                                      _strncmp 4826                                 __pintcode_body 49F0  
                                      _toupper 5588                           end_of_initialization 519C  
                             ?_TMR3_WriteTimer 0001                           ?_EUSART1_is_rx_ready 0001  
                     _INT2_SetInterruptHandler 5EE6                            ?_EUSART1_Initialize 0001  
               ??_INT2_DefaultInterruptHandler 0001                                        fputc@fp 0017  
                                    i1u1016_28 5A8A                                  __Lmediumconst 7CF6  
                                      int_func 49F0                                        fputs@fp 0020  
                                    i2u1014_48 56FE                                      i2u1008_48 5B10  
                                    i2u1063_48 4A46                                      i2u1072_48 4A8E  
                                    i2u1066_48 4A5E                                      i2u1069_48 4A76  
        __end_of_EUSART1_SetRxInterruptHandler 5F2C         __size_of_EUSART1_SetRxInterruptHandler 000A  
                _EUSART1_SetRxInterruptHandler 5F22                                     ??_isxdigit 0015  
                           _EUSART2_Initialize 5454                              __end_of_vfpfcnvrt 1E0A  
                              APP_Tasks@c_down 00BF                                        postdec1 000FE5  
                                      postdec2 000FDD                                        postinc0 000FEE  
                                      postinc1 000FE6                                        postinc2 000FDE  
                        __size_of_EUSART1_Read 002C                                        roundf@e 0075  
                                      roundf@u 007B                              MC_ReceivePacket@i 00C4  
                                      roundf@x 0037                                        roundf@y 007F  
                          __size_of_StartTimer 002A                                     ??_vfprintf 003B  
                         ??_EUSART1_Initialize 0015                                        strchr@c 0015  
                              APP_Tasks@offset 00BD                                        strchr@s 0013  
                          ?_EUSART2_Initialize 0001                                        strcpy@d 0019  
                                      strlen@a 0015                                        strcpy@s 0017  
                                      strlen@s 0013                                        truncf@e 0021  
                                      truncf@m 001D                                        truncf@u 0023  
                                      truncf@x 0013                                        strtof@i 00A7  
                                      strtof@s 0082                                        strspn@c 001A  
                                      strspn@i 001D                                        strtok@p 00C0  
                                      strtok@s 001F                                        strspn@s 0018  
                                      strstr@h 001E                       _TMR0_SetInterruptHandler 5ED2  
                                      strstr@n 0020                          _INT1_InterruptHandler 01DD  
                     _TMR3_SetInterruptHandler 5EBE                                    ___fladd@grs 0022  
                             __CFG_FOSC$INTIO1 000000                          WaitMs@numMilliseconds 0018  
                                ___xxtofl@sign 001B                                     ?_APP_Tasks 0001  
                                  ___fldiv@grs 007C                                    ___fldiv@rem 0075  
                          EUSART1_Write@txData 0013                          __end_of_display_ea_ff 5CDA  
                        ??_EUSART1_is_rx_ready 0013                                     get_pfb@buf 00AC  
                       __size_of_clear_MC_port 0030                           ??_EUSART2_Initialize 0015  
                                  ___flmul@grs 0062                       __size_of_display_ea_line 0018  
                     __size_of_display_ea_init 0024                                   _EUSART1_Read 5ACC  
                               __end_of_CrData 7DA4                              __size_of_INT0_ISR 0008  
                            __size_of_INT1_ISR 0008                              __size_of_INT2_ISR 0008  
                            __size_of_INT3_ISR 0008                                 __end_of_RsData 7DB0  
                               __end_of_WaitMs 5E04                   __end_of_INTERRUPT_Initialize 5E54  
                            ?_MC_ReceivePacket 0014                                 __end_of___flge 4B92  
                               __end_of___fleq 50D2           __end_of_INT0_DefaultInterruptHandler 5EA2  
        __size_of_INT0_DefaultInterruptHandler 0010                   _INT0_DefaultInterruptHandler 5E92  
                               __end_of___lmul 52B6                                    vfpfcnvrt@ap 0080  
                                  vfpfcnvrt@cp 0086                                    vfpfcnvrt@fp 007C  
                                  vfpfcnvrt@ll 008E                                 __end_of___wmul 5C6E  
                                  vfpfcnvrt@vp 0096                              __size_of_TMR0_ISR 002C  
                            __size_of_TMR1_ISR 0030                              __size_of_TMR3_ISR 003C  
                           ??_MC_ReceivePacket 0016                         ?_OSCILLATOR_Initialize 0001  
                               __end_of_printf 5C20                                 __end_of_roundf 320E  
                        __end_of_INT0_CallBack 5DCA                                 __end_of_strchr 5914  
                               __end_of_strcpy 5948                                 __end_of_strlen 565A  
                               __end_of_truncf 4826                                 __end_of_strtof 2B7A  
                               __end_of_strtok 4DD0                                 __end_of_strspn 5404  
                               __end_of_strstr 5048                            start_initialization 514C  
                              ___lodiv@divisor 001B                                ___lodiv@counter 002B  
                     __size_of_TMR0_Initialize 003E                __size_of_PIN_MANAGER_Initialize 0038  
                          display_ea_line@line 00B1           __end_of_INT3_DefaultInterruptHandler 5F46  
        __size_of_INT3_DefaultInterruptHandler 0008                   _INT3_DefaultInterruptHandler 5F3E  
                                  __end_of_abs 59AE                          __end_of_INT1_CallBack 5DA8  
                                  __end_of_pad 4FB4  EUSART1_SetRxInterruptHandler@interruptHandler 0013  
EUSART1_SetTxInterruptHandler@interruptHandler 0013  EUSART2_SetRxInterruptHandler@interruptHandler 0013  
EUSART2_SetTxInterruptHandler@interruptHandler 0013                                    putch@txData 0014  
                        __end_of_INT2_CallBack 5D86                          __end_of_EUSART1_Write 58DE  
                        __end_of_EUSART2_Write 58A6                          __end_of_INT3_CallBack 5D64  
                               _TMR3_StopTimer 5F78                          _display_ea_cursor_off 5CDA  
                     __size_of_PIN_MANAGER_IOC 0004                                       ??_WaitMs 001A  
                     __size_of_TMR1_Initialize 003A                                    vfprintf@fmt 00A3  
                                     ??___flge 001B                                       ??___fleq 001B  
                                    _TimerDone 5D20                                  _isxdigit$3792 0019  
                                     ??___lmul 001B                                       ??___wmul 0017  
                      __size_of_APP_Initialize 000E                 ?_EUSART1_SetRxInterruptHandler 0013  
                                _clear_MC_port 5A3E                                    __pdataBANK1 0180  
                   __end_of_EXT_INT_Initialize 5588                  ?_INT0_DefaultInterruptHandler 0001  
                                     ??_printf 003B                                       ??_roundf 006D  
                                     ??_strchr 0017                                       ??_strcpy 0017  
                                     ??_strlen 0015                                       ??_truncf 0017  
                                     ??_strtof 0086                                       ??_strtok 0023  
                                     ??_strspn 001C                                 _eusart1RxCount 0041  
                                     ??_strstr 0022                                      ___fladd@a 0017  
                                    ___fladd@b 0013                                 _eusart2RxCount 0046  
                                    ___fldiv@a 0071                                      ___fldiv@b 006D  
                                    ___flmul@a 002F                                      ___flmul@b 002B  
                                  __pbssCOMRAM 003B                                      ___flsub@a 0027  
                                    ___flsub@b 0023              _EUSART1_RxDefaultInterruptHandler 01E9  
             __end_of_INT0_SetInterruptHandler 5F04                  __size_of_EUSART1_Transmit_ISR 002C  
             __end_of_INT3_SetInterruptHandler 5EE6                                  __pcstackBANK0 0060  
                                __pcstackBANK3 0300                                    ??_APP_Tasks 00BB  
                             ___aodiv@dividend 0013                                   ??_StartTimer 0015  
                            __size_of___xxtofl 0140                  MC_ReceivePacket@btDecodeState 00C8  
                ?_INT3_DefaultInterruptHandler 0001                            EUSART2_Write@txData 0013  
                       __end_of_TMR3_StopTimer 5F7C                ??_EUSART1_SetTxInterruptHandler 0015  
              ??_EUSART2_SetRxInterruptHandler 0015                   __size_of_EUSART1_Receive_ISR 003C  
                                    _d_cur_off 7DB0                          _INT2_InterruptHandler 01DB  
                                    _atoi$3534 0022                                      _atoi$3535 0026  
                                    _atoi$3536 0024                          _TMR0_InterruptHandler 01F1  
                                    __pnvBANK0 00CA                                      __pnvBANK1 01D9  
                     __size_of_TMR0_StartTimer 0004                         _PIN_MANAGER_Initialize 57FE  
                                    _dtoa$2922 0068                                      _d_version 7DB4  
                     __size_of_TMR3_Initialize 003A                                      __pintcode 0008  
                                   ?_TimerDone 0001                              ??_display_ea_line 003B  
                            ??_display_ea_init 003B               __end_of_TMR1_SetInterruptHandler 5ED2  
                                __pmediumconst 7CF6                                       ?___aodiv 0013  
                                     ?___fladd 0013                                       ?___aomod 0013  
                            __size_of_isxdigit 005C                                 ?_clear_MC_port 0001  
                                     ?___fldiv 006D                                      __ptext100 5F6E  
                                    __ptext101 530C                                      __ptext110 5F3E  
                             ___aodiv@quotient 0025                                       ?___flneg 0013  
                                    __ptext111 5F46                                      __ptext103 56D6  
                                    __ptext120 5B24                                      __ptext112 5D64  
                                    __ptext104 5E20                                      __ptext121 5C20  
                                    __ptext113 5F4E                                      __ptext105 5DCA  
                                    __ptext122 5B50                                      __ptext114 5F56  
                                    __ptext106 5AF8                                      __ptext123 574E  
                                    __ptext115 5D86                                      __ptext107 5712  
                                    __ptext124 0000                                      __ptext116 5F5E  
                                    __ptext108 5F36                                      __ptext117 5F66  
                                    __ptext109 5D42                                      __ptext118 5DA8  
                                    __ptext119 5E92                                       ?___flmul 002B  
                                     ?___flsub 0023                                       ?___fltol 0083  
                                     ?___lodiv 0013                                       ?___lomod 0013  
            _EUSART2_TxDefaultInterruptHandler 01EF                             __end_of_StartTimer 5BD0  
                                  __pintcodelo 0018                              __size_of_vfprintf 0056  
                                     ?_get_pfb 00AC                                ___lomod@divisor 001B  
                                TMR3_ISR@chirp 00C9                                ___lomod@counter 0023  
                   ??_INT2_SetInterruptHandler 0015                                       _BAUDCON1 000FA7  
                                     _BAUDCON2 000FB9                       __size_of_TMR1_StartTimer 0004  
                                     ?_isalpha 0013                                       ?_isdigit 0013  
                                     ?_islower 0013                                       ?_isspace 0013  
                           MC_SendCommand@data 001A                                       ?_isupper 0013  
                           MC_SendCommand@wait 001C                                       ?_sprintf 00A9  
                               __size_of_fputc 00A0                                 __size_of_fputs 0038  
                                     ?_strcspn 0018                                       ?_strncmp 0013  
                                     ?_toupper 0019                                 __size_of_putch 000A  
                         _INTERRUPT_Initialize 5E3C                                ?_TMR3_StopTimer 0001  
                             get_pfb@pfb_ascii 0300                         ?_display_ea_cursor_off 00B1  
                            ??_TMR0_Initialize 0015                    __size_of_display_ea_version 0024  
                 __size_of_EUSART2_Receive_ISR 0028                                       _INT0_ISR 5F66  
                                     _INT1_ISR 5F56                                       _INT2_ISR 5F46  
                               ___wmul@product 0017                                       _INT3_ISR 5F36  
                                     _LATAbits 000F89              __size_of_INT1_SetInterruptHandler 000A  
                    ?_INT1_SetInterruptHandler 0013                                       _IPR1bits 000F9F  
                                     _IPR2bits 000FA2                                       _IPR3bits 000FA5  
                                     _PIE1bits 000F9D                                       _PIE2bits 000FA0  
                                     _PIE3bits 000FA3                                      _tickCount 0100  
                     __size_of_TMR1_WriteTimer 001C                     ??_TMR0_SetInterruptHandler 0015  
                                     _PIR1bits 000F9E                                       _PIR2bits 000FA1  
                                     _PIR3bits 000FA4                                       _PIR4bits 000FB7  
                                     i1u945_20 534E                     ??_TMR3_SetInterruptHandler 0015  
                                     i1u945_26 5350                                       i2u980_40 5DD2  
                                     i2u980_46 5DD4                                       i2u982_48 5DB6  
                                     _RCONbits 000FD0                                       i2u984_48 5D94  
                                     i2u986_48 5D72                                       i2u988_48 5D50  
                                     _TMR0_ISR 5AF8                                       _TMR1_ISR 5A6E  
                                     _TMR3_ISR 56D6                                    strtof@digit 009D  
                            ??_PIN_MANAGER_IOC 0013                                    strtof@flags 009E  
                                  strtof@expon 009F                                      _vfpfcnvrt 0F80  
                                    _xtoa$2957 0068                                      _xtoa$2958 006A  
                            ??_TMR1_Initialize 0015                              ___wmul@multiplier 0013  
                             __CFG_SOSCSEL$DIG 000000                       __size_of_TMR3_StartTimer 0004  
               ??_INT0_DefaultInterruptHandler 0001                  __size_of_EUSART2_Transmit_ISR 002C  
                                 _isspace$3561 0019                                     vfpfcnvrt@c 0098  
                            ___lmul@multiplier 0013                                    _INTCON2bits 000FF1  
                                  _INTCON3bits 000FF0                                      copy_data0 5160  
                        ?_INTERRUPT_Initialize 0001                       _INT0_SetInterruptHandler 5EFA  
                     _INT3_SetInterruptHandler 5EDC                          EUSART1_Read@readValue 0013  
               ??_INT3_DefaultInterruptHandler 0001                                     roundf@F525 011A  
                                   _EECON1bits 000F7F                                  ?__T1Interrupt 0001  
        __end_of_EUSART1_SetTxInterruptHandler 5F22         __size_of_EUSART1_SetTxInterruptHandler 000A  
                _EUSART1_SetTxInterruptHandler 5F18                                       __Hrparam 0000  
        __end_of_EUSART2_SetRxInterruptHandler 5F18         __size_of_EUSART2_SetRxInterruptHandler 000A  
                _EUSART2_SetRxInterruptHandler 5F0E                       __size_of_TMR3_WriteTimer 001C  
                              ??_clear_MC_port 001A                                     vfprintf@ap 00A5  
                                     __Lrparam 0000                                     vfprintf@fp 00A1  
                           __CFG_BOREN$SBORDIS 000000                                    ??_TimerDone 0013  
                               _APP_Initialize 5EB0                        __size_of_SPI_Initialize 000E  
                      ??_OSCILLATOR_Initialize 0013                              ??_TMR0_StartTimer 0013  
                             __size_of___aodiv 0148                               __size_of___fladd 030C  
                             __size_of___aomod 0124                               __size_of___fldiv 028A  
                             __size_of___flneg 002E                            get_pfb@offset_whole 0346  
                             __size_of___flmul 0354                               __size_of___flsub 0046  
                             __size_of___fltol 00BC                               __size_of___lodiv 00CE  
                             __size_of___lomod 00AE                    __size_of_EUSART1_Initialize 004E  
                                   ?_vfpfcnvrt 007C                             __end_of_build_date 7D03  
                           __end_of_build_time 7D0C                                ___aodiv@divisor 001B  
                            ??_TMR3_Initialize 0015                          _INT3_InterruptHandler 01D9  
                     _TMR1_SetInterruptHandler 5EC8                                ___aodiv@counter 0023  
                        _TMR1_InterruptHandler 01E5                               __size_of_get_pfb 0186  
                                   sprintf@fmt 00AB                    __end_of_EUSART1_is_rx_ready 5F84  
                                     ___xxtofl 422A                ??_INTERRUPT_InterruptManagerLow 000A  
                             __size_of_isalpha 0034                               __size_of_isdigit 0030  
                             __size_of_islower 0030                               __size_of_isspace 003E  
                      __size_of_MC_SendCommand 007A                                       __ptext10 5E80  
                                     __ptext11 5E3C                                       __ptext20 54A2  
                                     __ptext12 553E                                       __ptext21 5F18  
                                     __ptext13 5EDC                                     _T1GCONbits 000FAA  
                                     __ptext30 53B4                                       __ptext22 5F22  
                                     __ptext14 5EE6                                       __ptext31 5404  
                                     __ptext23 5F74                                       __ptext15 5EF0  
                                     __ptext40 51AA                                       __ptext32 58DE  
                                     __ptext24 0074                                       __ptext16 5EFA  
                                     __ptext41 422A                                       __ptext33 5914  
                                     __ptext25 4FB4                                       __ptext17 5454  
                                     __ptext50 5E54                                       __ptext42 5260  
                                     __ptext34 2ECE                                       __ptext26 5362  
                                     __ptext18 5F04                                       __ptext51 5C92  
                                     __ptext43 5A9E                                       __ptext35 55D2  
                                     __ptext27 3DD8                                       __ptext19 5F0E  
                                     __ptext60 59DE                                       __ptext52 5CB6  
                                     __ptext44 2B7A                                       __ptext36 320E  
                                     __ptext28 470C                                       __ptext61 5948  
                                     __ptext53 5CDA                                       __ptext45 4AC2  
                                     __ptext37 5BD0                                       __ptext29 4D1C  
                                     __ptext70 45E8                                       __ptext62 3C22  
                                     __ptext54 5BF8                                       __ptext46 5048  
                                     __ptext38 1E0A                                       __ptext71 40E2  
                                     __ptext63 4DD0                                       __ptext55 52B6  
                                     __ptext47 351A                                       __ptext39 5CFE  
                                     __ptext80 5698                                       __ptext72 54F0  
                                     __ptext64 4B92                                       __ptext56 0F80  
                                     __ptext48 4C60                                       __ptext81 5A0E  
                                     __ptext73 4F1E                                       __ptext65 4826  
                                     __ptext57 39EC                                       __ptext49 5C6E  
                                     __ptext90 58A6                                       __ptext82 5C48  
                                     __ptext74 5618                                       __ptext66 44AA  
                                     __ptext58 5588                                       __ptext91 490C  
                                     __ptext83 5A3E                                       __ptext75 5836  
                                     __ptext67 3F5E                                       __ptext59 59AE  
                                     __ptext92 5F80                                       __ptext84 5F78  
                                     __ptext76 4E7E                                       __ptext68 37A4  
                                     __ptext93 5ACC                                       __ptext85 5F7C  
                                     __ptext77 5F2C                                       __ptext69 597C  
                                     __ptext94 5EB0                                       __ptext86 50D2  
                                     __ptext78 586E                                       __ptext95 5F84  
                                     __ptext87 5DE8                                       __ptext79 436A  
                                     __ptext96 5F88                                       __ptext88 5D20  
                                     __ptext89 5BA6                                       __ptext98 5A6E  
                                     __ptext99 5E04                               __size_of_isupper 0030  
                    __size_of_MC_ReceivePacket 00E4                              ??_TMR1_StartTimer 0013  
                                    isxdigit@c 0013                               __size_of_sprintf 0052  
                                   _T3GCONbits 000FB0                               __size_of_strcspn 0050  
                                   strcpy@dest 0013                               __size_of_strncmp 00E6  
                      TMR3_WriteTimer@timerVal 0001                               __size_of_toupper 004A  
                  __size_of_EUSART2_Initialize 004E                                     truncf@F524 0116  
                      EUSART1_Receive_ISR@treg 0001                                  __size_of_atof 0028  
                                __size_of_atoi 0140                                  __size_of_ctoa 004E  
                                __size_of_main 0014                                  __size_of_dtoa 0248  
                                __size_of_nanf 0022                                  __size_of_otoa 0184  
                                __size_of_stoa 013E                                  __size_of_utoa 01B6  
                                __size_of_xtoa 0236                                 ??__T1Interrupt 0007  
         __end_of_TMR0_DefaultInterruptHandler 574E          __size_of_TMR0_DefaultInterruptHandler 003C  
                 _TMR0_DefaultInterruptHandler 5712                         __end_of_APP_Initialize 5EBE  
                   display_ea_cursor_off@pause 00B1                                       _isxdigit 51AA  
                                    stoa@F1152 0180                                     strtof@eexp 00A1  
                                     int$flags 004D                                       _vfprintf 52B6  
                                     get_pfb@s 034C                                      printf@fmt 00A9  
                       __size_of_display_ea_ff 0024                              ??_TMR1_WriteTimer 0009  
         __end_of_TMR3_DefaultInterruptHandler 5DE8          __size_of_TMR3_DefaultInterruptHandler 001E  
                 _TMR3_DefaultInterruptHandler 5DCA                            __CFG_INTOSCSEL$HIGH 000000  
                          _EUSART1_Receive_ISR 574E           __end_of_INT1_DefaultInterruptHandler 5F66  
        __size_of_INT1_DefaultInterruptHandler 0008                   _INT1_DefaultInterruptHandler 5F5E  
                             ___aomod@dividend 0013                                 _vfpfcnvrt$2972 008A  
                               _vfpfcnvrt$2973 008C                                     _INTCONbits 000FF2  
                                     isalpha@c 0013                                       isdigit@c 0013  
                       ??_INTERRUPT_Initialize 0013                             _EXT_INT_Initialize 553E  
                            ??_TMR3_StartTimer 0013                                       intlevel1 0000  
                                     intlevel2 0000                                      sprintf@ap 00B9  
                              _display_ea_line 5E54                                _display_ea_init 5C92  
                         ?_EUSART1_Receive_ISR 0001                                       islower@c 0013  
                                     isspace@c 0013                        ?_PIN_MANAGER_Initialize 0001  
                          ?_EXT_INT_Initialize 0001                                      strcpy@src 0015  
                                   _RCSTA1bits 000FAB                                     _RCSTA2bits 000FA6  
                                     isupper@c 0013                   __end_of_EUSART1_Transmit_ISR 5B7C  
                                    strncmp@_l 0013                                      strncmp@_r 0015  
                              ?_APP_Initialize 0001                         __size_of_INT0_CallBack 0022  
                ?_TMR0_DefaultInterruptHandler 0001                                      strtof@res 0084  
                                    strtok@sep 0021                                       printf@ap 00AF  
                       __size_of_INT1_CallBack 0022                             __CFG_WDTPS$1048576 000000  
               ?_EUSART1_SetTxInterruptHandler 0013                 ?_EUSART2_SetRxInterruptHandler 0013  
                              ___aomod@divisor 001B                                    ??_vfpfcnvrt 0082  
                                     stoa@nuls 0023                                ___aomod@counter 0023  
                            ??_TMR3_WriteTimer 0003                         __size_of_INT2_CallBack 0022  
                       __size_of_EUSART1_Write 0038                         __size_of_EUSART2_Write 0038  
                          _EUSART2_Receive_ISR 5C20         __end_of_INTERRUPT_InterruptManagerHigh 4AC2  
      __size_of_INTERRUPT_InterruptManagerHigh 4ABA                 _INTERRUPT_InterruptManagerHigh 0008  
                         ??_EXT_INT_Initialize 0015                                       sprintf@f 00B3  
                                     sprintf@s 00A9                               APP_Tasks@m_start 00C6  
                ?_TMR3_DefaultInterruptHandler 0001                         __size_of_INT3_CallBack 0022  
                ?_INT1_DefaultInterruptHandler 0001                                _TMR0_Initialize 565A  
                                     strcspn@c 001A                                       strcspn@i 001D  
                                     strcspn@s 0018                               ??_TMR3_StopTimer 0013  
             __end_of_INT1_SetInterruptHandler 5EFA                                       strncmp@l 001A  
                                     strncmp@n 0017                                       strncmp@r 001C  
                                     toupper@c 0019                                       strtof@_u 00A3  
                                  _SSPCON1bits 000FC6                                       strstr@nl 0022  
                      ??_display_ea_cursor_off 003B                        display_ea_version@pause 00B1  
                                ___fladd@signs 001F          __end_of_INTERRUPT_InterruptManagerLow 0070  
       __size_of_INTERRUPT_InterruptManagerLow 0058                  _INTERRUPT_InterruptManagerLow 0018  
                                _display_ea_ff 5CB6                                   ___aodiv@sign 0024  
                        ??_EUSART1_Receive_ISR 0001                 __end_of_PIN_MANAGER_Initialize 5836  
              ??_EUSART2_SetTxInterruptHandler 0015                           ?_EUSART2_Receive_ISR 0001  
                                 ___fladd@aexp 0020                                   ___fladd@bexp 0021  
                          __CFG_BORPWR$ZPBORMV 000000                                _PIN_MANAGER_IOC 5F74  
                                 ___aomod@sign 0024                                _TMR1_Initialize 57C4  
            _EUSART2_RxDefaultInterruptHandler 01ED                                    _roundf$4195 0077  
                                  _roundf$4196 0071  
